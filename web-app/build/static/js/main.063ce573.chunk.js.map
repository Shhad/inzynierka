{"version":3,"sources":["history.js","reducers/action-creators.js","components/Header/Header.js","components/ProductsSpace/Product.js","components/ProductsSpace/ProductSpace.js","components/Loading.js","components/Filters/Filter.js","components/AppContainer.js","components/UserContainer.js","components/FavouriteSpace/Product.js","components/FavouriteSpace/Favourite.js","components/FavouriteSpace/FavouriteSpace.js","components/FavouriteContainer.js","Root.js","reducers/productReducer.js","reducers/shopReducer.js","reducers/favouriteReducers.js","reducers/categoryReducer.js","reducers/userReducer.js","constants/AppConstants.js","sagas/favouriteSaga.js","sagas/productSaga.js","sagas/shopSaga.js","sagas/categorySaga.js","sagas/userSaga.js","store.js","index.js"],"names":["customHistory","createBrowserHistory","getFavourites","userid","type","getUser","login","pass","Transition","props","react_default","a","createElement","Slide_default","Object","assign","direction","Header","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChangeSearch","event","value","target","console","log","setState","search","sendChangeSearch","change","state","handleOpenRegisterDialog","addUser","handleCloseRegisterDialog","handleRegister","newUserDialog","newUserStateChange","evt","name","objectSpread","handleOpenLoginDialog","loginDialog","handleCloseLoginDialog","handleLogin","password","handleChangeSt","defineProperty","passHandleChangeSearch","newfilter","handleChange","auth","checked","handleProfileMenuOpen","anchorEl","currentTarget","handleMenuClose","logout","handleMobileMenuClose","handleMobileMenuOpen","mobileMoreAnchorEl","goToUserProfile","history","push","goShopping","openNewWindow","window","open","location","href","String","loggedIn","userId","surname","mail","admin","_this$state","classes","isMenuOpen","Boolean","isMobileMenuOpen","renderMenu","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","onClose","MenuItem_default","onClick","renderMobileMenu","IconButton_default","color","Badge_default","badgeContent","Mail_default","Notifications_default","AccountCircle_default","className","root","AppBar_default","position","Toolbar_default","Button_default","style","height","minWidth","marginRight","ShoppingCart_default","Typography_default","title","variant","noWrap","searchIcon","Search_default","InputBase_default","placeholder","inputRoot","input","inputInput","onChange","onBlur","grow","sectionDesktop","aria-owns","undefined","aria-haspopup","borderColor","sectionMobile","MoreVert_default","Dialog_default","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","DialogTitle_default","id","DialogContent_default","display","flexWrap","margin","noValidate","autoComplete","TextField_default","label","marginTop","width","padding","defaultValue","description","DialogActions_default","overflowY","autoFocus","helperText","fullWidth","multiline","newProductStateChange","React","Component","connect","getIn","dispatch","user","withStyles","theme","flexGrow","menuButton","marginLeft","breakpoints","up","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","spacing","unit","pointerEvents","alignItems","justifyContent","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","Product","handleModifyButton","modifyButton","handleCancel","handleSave","shopID","product","productId","categoryId","shopId","price","currency","link","shopList","forEach","shop","modifyProduct","handleClickOpen","handleClose","handleShopChange","handleFavourite","favouriteId","favouriteList","favourite","addFavouriteProduct","handleCloseFavourite","handleFavouriteChange","handleOpenFavourite","openFavourite","shopid","shops","store","subscribe","getState","_this2","getShops","shopp","float","Card_default","CardActionArea_default","CardMedia_default","image","CardContent_default","gutterBottom","component","CardActions_default","size","DialogContentText_default","src","alt","maxWidth","Divider_default","disabled","select","map","option","key","Favorite_default","length","card","media","ProductContainer","validateDetails","catID","newProduct","newProductDialog","categoryList","category","addProduct","openNewDialog","closeNewDialog","handleCategoryChange","products","productDetail","productList","ProductsSpace_Product","Fab_default","top","right","bottom","left","Add_default","isLoading","getCategories","Loader","CircularProgress_default","transform","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","FilterContainer","handleChangeCategory","categories","categoryObjects","filterCategory","handleChangeShop","shopObjects","filterShop","includes","FormControl_default","border","InputLabel_default","htmlFor","Select_default","multiple","Input_default","renderValue","selected","Chip_default","alignContent","Filter","AppContainer","specificSearch","productName","filterProducts","getFilteredProducts","handleLoggedIn","logIn","getProducts","components_Header_Header","Loading_Loader","ProductSpace","App","UserContainer","handleClickModify","handleClickSave","newUser","userData","modifyUser","handleClickCanel","newUserChange","handlePasswordChange","handleNewPass","newPass","modifyUserPassword","saveButton","oldPass","Tabs_default","Tab_default","verticalAlign","User","handleDeleteProduct","deleteFavourite","ListItem_default","button","ListItemIcon_default","ListItemText_default","inset","primary","Clear_default","fontWeight","fontStyle","deleteFavouriteProduct","Favourite","defaultProps","productsList","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","List_default","subheader","ListSubheader_default","FavouriteSpace_Product","newFavouriteDialog","addFavourite","newFavouriteStateChange","FavouriteSpace_Favourite","FavouriteSpace","FavouriteContainer","children","userID","Root","es","Router","Switch","Route","exact","path","INITIAL_STATE","Map","List","view","errorLoading","errorMessage","productReducer","arguments","action","merge","payload","shopReducer","FAVOURITE_STATE","favouriteReducers","categoryReducer","isLogged","userReducer","SERWER_PROD","addFavouriteFunction","addProductToFavouriteFunction","deleteProductFromFavouriteFunction","loadFavourites","watchGetFavourites","watchAddFavourite","watchAddFavouriteProduct","watchDeleteFavouriteProduct","favouriteSaga","getProductsOfFavourite","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","fetch","concat","method","headers","Accept","then","json","data","catch","error","sent","abrupt","stop","_x","apply","getUserFavouritesProducts","_ref2","_callee3","responseData","_context3","status","Promise","all","_ref3","_callee2","_context2","_x3","t0","_x2","favouriteid","productid","Content-Type","body","JSON","stringify","e","deleteProductFromFavourite","_context4","put","_marked","_context5","_marked2","_context6","_marked3","_context7","delay","_marked4","_context8","takeLatest","_marked5","_context9","_marked6","_context10","_marked7","_context11","_marked8","_context12","_marked9","addProductFunction","modifyProductFunction","loadProducts","loadProductsAll","loadFilteredProducts","watchGetProducts","watchGetProductsAll","watchGetFilteredProducts","watchModifyProduct","watchAddProduct","rootSaga","getProductsPromotionFromServer","getProductsFromServer","getProductsFilterFromServer","productSaga_marked","productSaga_marked2","productSaga_marked3","productSaga_marked4","productSaga_marked5","productSaga_marked6","productSaga_marked7","productSaga_marked8","productSaga_marked9","_marked10","_marked11","loadAllShops","watchGetShops","shopSaga","getAllShopsFromServer","localization","street","city","number","country","telnumber","site","shopSaga_marked","shopSaga_marked2","shopSaga_marked3","loadCategories","watchGetCategories","categorySaga","categoriesList","categorySaga_marked","categorySaga_marked2","categorySaga_marked3","loadUser","addUserFunction","modifyUserFunction","watchGetUser","watchAddUser","watchModifyUser","watchModifyUserPassword","userSaga","getUserParams","userParams","userSaga_marked","userSaga_marked2","userSaga_marked3","userSaga_marked5","userSaga_marked6","userSaga_marked7","userSaga_marked8","userSaga_marked9","browserHistory","sagaMiddleware","createSagaMiddleware","favouriteMiddleware","shopMiddleware","categoryMiddleware","userMiddleware","configureStore","createStore","combineReducers","reducerProduct","reducerFavourite","reducerShop","reducerCategory","reducerUser","compose","applyMiddleware","devToolsExtension","f","run","__webpack_require__","d","__webpack_exports__","src_store_0","render","react_hot_loader","Root_Root","document","getElementById"],"mappings":"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","file":"static/js/main.063ce573.chunk.js","sourcesContent":["import createBrowserHistory from 'history/createBrowserHistory'\r\n\r\nconst customHistory = createBrowserHistory();\r\n\r\nexport default customHistory;\r\n","export function getProducts() {\r\n    return {\r\n        type: 'GET_PRODUCTS'\r\n    };\r\n}\r\n\r\nexport function getProductsAll() {\r\n    return {\r\n        type: 'GET_PRODUCTS_ALL'\r\n    };\r\n}\r\n\r\nexport function getFilteredProducts(shops, categories, name) {\r\n    return {\r\n        type: 'GET_FILTERED_PRODUCTS',\r\n        shops,\r\n        categories,\r\n        name\r\n    };\r\n}\r\n\r\nexport function addProduct(product) {\r\n    return {\r\n        type: 'ADD_PRODUCT',\r\n        product\r\n    };\r\n}\r\n\r\nexport function modifyProduct(product) {\r\n    return {\r\n        type: 'MODIFY_PRODUCT',\r\n        product\r\n    };\r\n}\r\n\r\nexport function addFavourite(favouriteId, userId, name) {\r\n    return {\r\n        type: 'ADD_FAVOURITE',\r\n        favouriteId,\r\n        userId,\r\n        name\r\n    }\r\n}\r\n\r\nexport function addFavouriteProduct(productId, favouriteId) {\r\n    return {\r\n        type: 'ADD_FAVOURITE_PRODUCT',\r\n        productId,\r\n        favouriteId\r\n    }\r\n}\r\n\r\nexport function deleteFavouriteProduct(productId, favouriteId, userId) {\r\n    return {\r\n        type: 'DELETE_FAVOURITE_PRODUCT',\r\n        productId,\r\n        favouriteId,\r\n        userId\r\n    }\r\n}\r\n\r\nexport function getFavourites(userid) {\r\n    return {\r\n        type: 'GET_FAVOURITES',\r\n        userid\r\n    };\r\n}\r\n\r\nexport function getCategories() {\r\n    return {\r\n        type: 'GET_CATEGORIES'\r\n    }\r\n}\r\n\r\nexport function getShops() {\r\n    return {\r\n        type: 'GET_SHOPS'\r\n    }\r\n}\r\n\r\nexport function getUser(login, pass) {\r\n    return {\r\n        type: 'GET_USER',\r\n        login,\r\n        pass\r\n    }\r\n}\r\n\r\nexport function modifyUser(user) {\r\n    return {\r\n        type: 'MODIFY_USER',\r\n        user\r\n    }\r\n}\r\n\r\nexport function modifyUserPassword(user) {\r\n    return {\r\n        type: 'MODIFY_USER_PASSWORD',\r\n        user\r\n    }\r\n}\r\n\r\nexport function addUser(user) {\r\n    return {\r\n        type: 'ADD_USER',\r\n        user\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    return {\r\n        type: 'LOGOUT'\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport history from '../../history';\r\nimport { getUser, addUser, logout, getFavourites } from \"../../reducers/action-creators\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FlatButton from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ShoppingCart from '@material-ui/icons/ShoppingCart';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nconst VERSSION = '0.0.1';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        marginRight: 20,\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing.unit * 2,\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing.unit * 3,\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        width: theme.spacing.unit * 9,\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        width: '100%',\r\n    },\r\n    inputInput: {\r\n        paddingTop: theme.spacing.unit,\r\n        paddingRight: theme.spacing.unit,\r\n        paddingBottom: theme.spacing.unit,\r\n        paddingLeft: theme.spacing.unit * 10,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: 200,\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n});\r\n\r\nfunction Transition(props) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: String,\r\n            anchorEl: null,\r\n            mobileMoreAnchorEl: null,\r\n            auth: this.props.loggedIn,\r\n            login: '',\r\n            password: '',\r\n            loginDialog: false,\r\n            addUser: false,\r\n            newUserDialog: {\r\n                userId: 0,\r\n                name: '',\r\n                surname: '',\r\n                login: '',\r\n                password: '',\r\n                mail: '',\r\n                admin: false\r\n            }\r\n        };\r\n    }\r\n\r\n    handleChangeSearch = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        console.log(value);\r\n        this.setState({search: value});\r\n    };\r\n\r\n    sendChangeSearch = () => {\r\n        this.props.change(this.state.search);\r\n    };\r\n\r\n    handleOpenRegisterDialog = () => {\r\n        this.setState({addUser: true});\r\n    };\r\n\r\n    handleCloseRegisterDialog = () => {\r\n        this.setState({addUser: false});\r\n    };\r\n\r\n    handleRegister =() => {\r\n        this.props.addUser(this.state.newUserDialog);\r\n        this.handleCloseRegisterDialog();\r\n    };\r\n\r\n    newUserStateChange = (evt) => {\r\n        const target = evt.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n\r\n        const newUserDialog = {...this.state.newUserDialog};\r\n        newUserDialog[name] = value;\r\n        this.setState({newUserDialog});\r\n    };\r\n\r\n    handleOpenLoginDialog = () => {\r\n        this.setState({loginDialog: true});\r\n    };\r\n\r\n    handleCloseLoginDialog = () => {\r\n        this.setState({loginDialog: false});\r\n    };\r\n\r\n    handleLogin =() => {\r\n        this.props.getUser(this.state.login, this.state.password);\r\n        this.props.handleLogin();\r\n        this.handleCloseLoginDialog();\r\n    };\r\n\r\n    handleChangeSt = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    passHandleChangeSearch = () => {\r\n        this.props.newfilter();\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({ auth: event.target.checked });\r\n    };\r\n\r\n    handleProfileMenuOpen = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.props.logout();\r\n        this.setState({ anchorEl: null });\r\n        this.handleMobileMenuClose();\r\n    };\r\n\r\n    handleMobileMenuOpen = event => {\r\n        this.setState({ mobileMoreAnchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMobileMenuClose = () => {\r\n        this.setState({ mobileMoreAnchorEl: null });\r\n    };\r\n\r\n    goToUserProfile = () => {\r\n        history.push('/userpanel');\r\n    };\r\n\r\n    goShopping = () => {\r\n        history.push('/');\r\n    };\r\n\r\n    openNewWindow = () => window.open(window.location.href, '_blank');\r\n\r\n    render() {\r\n        const { anchorEl, mobileMoreAnchorEl, auth } = this.state;\r\n        const { classes } = this.props;\r\n        const isMenuOpen = Boolean(anchorEl);\r\n        const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n        const renderMenu = (\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                open={isMenuOpen}\r\n                onClose={this.handleMenuClose}\r\n            >\r\n                <MenuItem onClick={this.goShopping}>Na zakupy!</MenuItem>\r\n                <MenuItem onClick={this.goToUserProfile}>Konto</MenuItem>\r\n                <MenuItem onClick={this.handleMenuClose}>Wyloguj</MenuItem>\r\n            </Menu>\r\n        );\r\n\r\n        const renderMobileMenu = (\r\n            <Menu\r\n                anchorEl={mobileMoreAnchorEl}\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                open={isMobileMenuOpen}\r\n                onClose={this.handleMobileMenuClose}\r\n            >\r\n                <MenuItem>\r\n                    <IconButton color=\"inherit\">\r\n                        <Badge badgeContent={4} color=\"secondary\">\r\n                            <MailIcon />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    <p>Messages</p>\r\n                </MenuItem>\r\n                <MenuItem>\r\n                    <IconButton color=\"inherit\">\r\n                        <Badge badgeContent={11} color=\"secondary\">\r\n                            <NotificationsIcon />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    <p>Notifications</p>\r\n                </MenuItem>\r\n                <MenuItem onClick={this.handleProfileMenuOpen}>\r\n                    <IconButton color=\"inherit\">\r\n                        <AccountCircle />\r\n                    </IconButton>\r\n                    <p>Profile</p>\r\n                </MenuItem>\r\n            </Menu>\r\n        );\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <FlatButton onClick={this.openNewWindow} style={{\r\n                            height: '100%',\r\n                            minWidth: '60px',\r\n                            marginRight: '10px'\r\n                        }}>\r\n                            <ShoppingCart />\r\n                        </FlatButton>\r\n                        <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n                            ShopMe v0.0.1\r\n                        </Typography>\r\n                        <div className={classes.search}>\r\n                            <div className={classes.searchIcon} onClick={this.passHandleChangeSearch}>\r\n                                <SearchIcon />\r\n                            </div>\r\n                            <InputBase\r\n                                placeholder=\"Search…\"\r\n                                classes={{\r\n                                    root: classes.inputRoot,\r\n                                    input: classes.inputInput,\r\n                                }}\r\n                                onChange={this.handleChangeSearch}\r\n                                onBlur={this.sendChangeSearch}\r\n                            />\r\n                        </div>\r\n                        <FlatButton>\r\n                            <h4 style={{\r\n                                color: 'white',\r\n                                marginRight: '5px'\r\n                            }}>Szukaj  </h4>\r\n                            <SearchIcon onClick={this.passHandleChangeSearch}/>\r\n                        </FlatButton>\r\n                        <div className={classes.grow} />\r\n                        {this.props.userid &&\r\n                        <div className={classes.sectionDesktop}>\r\n                            <IconButton\r\n                                aria-owns={isMenuOpen ? 'material-appbar' : undefined}\r\n                                aria-haspopup=\"true\"\r\n                                onClick={this.handleProfileMenuOpen}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <AccountCircle/>\r\n                            </IconButton>\r\n                        </div>\r\n                        }\r\n                        {!this.props.userid &&\r\n                            <div className={classes.sectionDesktop}>\r\n                            <FlatButton style={{\r\n                            borderColor: '#A59A9A'\r\n                        }} onClick={this.handleOpenLoginDialog}>\r\n                            <h3 style={{ color: 'white' }}>Zaloguj</h3>\r\n                            </FlatButton>\r\n                            </div>\r\n                        }\r\n                        {!this.props.userid &&\r\n                        <div className={classes.sectionDesktop}>\r\n                            <FlatButton style={{\r\n                                borderColor: '#A59A9A'\r\n                            }} onClick={this.handleOpenRegisterDialog}>\r\n                                <h3 style={{ color: 'white' }}>Zarejestru</h3>\r\n                            </FlatButton>\r\n                        </div>\r\n                        }\r\n                        <div className={classes.sectionMobile}>\r\n                            <IconButton aria-haspopup=\"true\" onClick={this.handleMobileMenuOpen} color=\"inherit\">\r\n                                <MoreIcon />\r\n                            </IconButton>\r\n                        </div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                {renderMenu}\r\n                {renderMobileMenu}\r\n                <Dialog\r\n                    open={this.state.loginDialog}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={this.handleCloseLoginDialog}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-slide-title\">\r\n                        Zaloguj się\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <form style={{\r\n                            display: 'flex',\r\n                            flexWrap: 'wrap',\r\n                            margin: '0 auto'\r\n                        }}\r\n                              noValidate\r\n                              autoComplete=\"off\">\r\n                            <TextField\r\n                                onBlur={this.handleChangeSt('login')}\r\n                                value={this.props.name}\r\n                                id=\"login\"\r\n                                label=\"Login\"\r\n                                style={{\r\n                                    marginTop: '19px',\r\n                                    width: '400px',\r\n                                    padding: '10px'\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                onBlur={this.handleChangeSt('password')}\r\n                                defaultValue={this.props.description}\r\n                                type=\"password\"\r\n                                id=\"haslo\"\r\n                                label=\"Hasło\"\r\n                                style={{\r\n                                    marginTop: '19px',\r\n                                    width: '400px',\r\n                                    padding: '10px'\r\n                                }}\r\n                            />\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleLogin} color=\"primary\">\r\n                            Zaloguj\r\n                        </Button>\r\n                        <Button color='primary' onClick={this.handleCloseLoginDialog}>\r\n                            Anuluj\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <Dialog\r\n                    open={this.state.addUser}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={this.handleCloseRegisterDialog}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-slide-title\">\r\n                        {\"Dodaj nowe konto\"}\r\n                    </DialogTitle>\r\n                    <DialogContent style={{\r\n                        display: 'inline',\r\n                        overflowY: 'scroll'\r\n                    }}>\r\n                        <form>\r\n                            <TextField\r\n                                autoFocus\r\n                                id=\"new-product-name\"\r\n                                name='name'\r\n                                label=\"Imię\"\r\n                                onBlur={this.newUserStateChange}\r\n                                helperText=\"Wpisz nazwe produktu\"\r\n                                margin=\"normal\"\r\n                                style={{\r\n                                    width: '400px'\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                id=\"new-product-descr\"\r\n                                name='surname'\r\n                                label=\"Nazwisko\"\r\n                                onBlur={this.newUserStateChange}\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                multiline\r\n                            >\r\n                            </TextField>\r\n                            <TextField\r\n                                autoFocus\r\n                                id=\"new-product-shop\"\r\n                                name='login'\r\n                                label=\"Login\"\r\n                                onBlur={this.newUserStateChange}\r\n                                margin=\"normal\"\r\n                                style={{\r\n                                    width: '400px'\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                autoFocus\r\n                                id=\"new-product-category\"\r\n                                name='password'\r\n                                label=\"Hasło\"\r\n                                onBlur={this.newProductStateChange}\r\n                                type=\"password\"\r\n                                margin=\"normal\"\r\n                                style={{\r\n                                    width: '400px'\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                autoFocus\r\n                                id=\"new-product-price\"\r\n                                name='password'\r\n                                label=\"Powtórz hasło\"\r\n                                onBlur={this.newUserStateChange}\r\n                                type='password'\r\n                                margin=\"normal\"\r\n                                style={{\r\n                                    width: '400px'\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                autoFocus\r\n                                id=\"new-product-currency\"\r\n                                name='mail'\r\n                                label=\"Mail\"\r\n                                onBlur={this.newUserStateChange}\r\n                                margin=\"normal\"\r\n                                style={{\r\n                                    width: '400px'\r\n                                }}\r\n                            />\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleRegister} color=\"primary\">\r\n                            Zarejestruj\r\n                        </Button>\r\n                        <Button onClick={this.handleCloseRegisterDialog} color=\"primary\">\r\n                            Anuluj\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        userid: state.getIn(['reducerUser', 'isLogged']),\r\n        userId: state.getIn(['reducerUser', 'user', 'userId'])\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getUser: (login, password) => dispatch(getUser(login, password)),\r\n        addUser: (user) => dispatch(addUser(user)),\r\n        logout: () => dispatch(logout())\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Header));\r\n","import React from 'react';\r\nimport {getShops, getCategories, getFavourites, addFavouriteProduct } from '../../reducers/action-creators';\r\nimport { connect } from 'react-redux';\r\nimport { modifyProduct } from '../../reducers/action-creators';\r\nimport {store} from \"../../index\";\r\n\r\n//Material UI components\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FlatButton from '@material-ui/core/Button'\r\nimport Favorite from '@material-ui/icons/Favorite'\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nfunction Transition(props) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nconst styles = {\r\n    card: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n};\r\n\r\nclass Product extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            modifyButton: true,\r\n            name: this.props.name,\r\n            description: this.props.description,\r\n            price: this.props.price,\r\n            shopid: this.props.shopId,\r\n            shop: '',\r\n            shops: [],\r\n            favourite: '',\r\n            openFavourite: false,\r\n            userId: 0\r\n        };\r\n\r\n        store.subscribe(() => {\r\n            const state = store.getState();\r\n            this.setState({\r\n                userId: state.getIn(['reducerUser', 'user', 'userId'])\r\n            });\r\n        });\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.getShops();\r\n        let name ='';\r\n\r\n        this.props.shopList.forEach(shop => {\r\n            if (this.props.shopId == shop.shopId) {\r\n                name = shop.name;\r\n            }\r\n        });\r\n        this.setState({shop: name});\r\n    }\r\n\r\n    handleModifyButton = () => {\r\n        this.setState({modifyButton: false});\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({modifyButton: true});\r\n    };\r\n\r\n    handleSave = () => {\r\n        const product = {\r\n            productId: this.props.productId,\r\n            categoryId: this.props.categoryId,\r\n            shopId: this.props.shopId,\r\n            name: this.state.name,\r\n            description: this.state.description,\r\n            price: this.state.price,\r\n            currency: this.props.currency,\r\n            link: this.props.link\r\n        };\r\n        let shopID;\r\n        this.props.shopList.forEach(shop => {\r\n            if(shop.name == this.state.shop) {\r\n                shopID = shop.shopId;\r\n            }\r\n        });\r\n        product.shopId = shopID;\r\n        this.props.modifyProduct(product);\r\n    };\r\n\r\n    handleClickOpen = () => {\r\n        if(this.state.userId != 0 || this.state.userId != undefined) {\r\n            this.props.getFavourites(this.state.userId);\r\n        }\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleShopChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n\r\n        this.setState({shop: value});\r\n    };\r\n\r\n    handleFavourite = () => {\r\n        const productId = this.props.productId;\r\n        let favouriteId;\r\n        this.props.favouriteList.forEach(favourite => {\r\n            if(favourite.name === this.state.favourite) {\r\n                favouriteId = favourite.favouriteId;\r\n            }\r\n        });\r\n        this.props.addFavouriteProduct(productId, favouriteId);\r\n        this.handleCloseFavourite();\r\n    };\r\n\r\n    handleFavouriteChange = (event) => {\r\n        const value = event.target.value;\r\n        this.setState({favourite: value})\r\n    };\r\n\r\n    handleOpenFavourite = () => {\r\n        this.setState({openFavourite: true})\r\n    };\r\n\r\n    handleCloseFavourite = () => {\r\n        this.setState({openFavourite: false})\r\n    };\r\n\r\n    render() {\r\n        const price = 'Cena: ' + this.props.price + ' ' + this.props.currency;\r\n        const shopp = 'Sklep: ' + this.state.shop;\r\n        return (\r\n            <div style={{\r\n                float: 'left',\r\n                margin: '20px'\r\n            }}>\r\n                <Card style={{width: '345px'}} >\r\n                    <CardActionArea>\r\n                        <CardMedia\r\n                            style={{\r\n                                height: '140px'\r\n                            }}\r\n                            image={this.props.link}\r\n                            title=\"Shopping\"\r\n                        />\r\n                        <CardContent style={{\r\n                            height: '120px'\r\n                        }}>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                {this.props.name}\r\n                            </Typography>\r\n                            <Typography component=\"h3\">\r\n                                {price}\r\n                            </Typography>\r\n                            <Typography component=\"h3\">\r\n                                {shopp}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                        <Button onClick={this.handleClickOpen} size=\"small\" color=\"primary\">\r\n                            Więcej\r\n                        </Button>\r\n                    </CardActions>\r\n                </Card>\r\n\r\n                <Dialog\r\n                    open={this.state.open}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-slide-title\">\r\n                        {this.props.name}\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText style={{\r\n                            margin: 'auto'\r\n                        }}>\r\n                            <img src={this.props.link} alt={'Product pic'} style={{\r\n                                width: '100%',\r\n                                maxWidth: '300px',\r\n                                margin: 'auto'\r\n                            }}/>\r\n                        </DialogContentText>\r\n                        <Divider/>\r\n                        <form style={{\r\n                            display: 'flex',\r\n                            flexWrap: 'wrap',\r\n                            margin: '0 auto'\r\n                        }}\r\n                              noValidate\r\n                              autoComplete=\"off\">\r\n                            <TextField\r\n                                disabled={this.state.modifyButton}\r\n                                onBlur={this.handleChange('name')}\r\n                                value={this.props.name}\r\n                                id=\"name-text\"\r\n                                label=\"Nazwa\"\r\n                                style={{\r\n                                    marginTop: '19px',\r\n                                    width: '400px',\r\n                                    padding: '10px'\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                disabled={this.state.modifyButton}\r\n                                onBlur={this.handleChange('description')}\r\n                                defaultValue={this.props.description}\r\n                                id=\"descr-text\"\r\n                                label=\"Opis\"\r\n                                style={{\r\n                                    marginTop: '19px',\r\n                                    width: '400px',\r\n                                    padding: '10px'\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                disabled={this.state.modifyButton}\r\n                                defaultValue={this.props.price}\r\n                                onBlur={this.handleChange('price')}\r\n                                id=\"price-text\"\r\n                                type=\"number\"\r\n                                label=\"Cena\"\r\n                                style={{\r\n                                    marginTop: '19px',\r\n                                    width: '400px',\r\n                                    padding: '10px'\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                disabled={this.state.modifyButton}\r\n                                id=\"standard-select-currency\"\r\n                                select\r\n                                label=\"Sklep\"\r\n                                value={this.state.shop}\r\n                                onChange={this.handleShopChange}\r\n                                helperText=\"Wybierz sklep\"\r\n                                style={{\r\n                                    marginTop: '19px',\r\n                                    width: '400px',\r\n                                    padding: '10px'\r\n                                }}\r\n                            >\r\n                                {this.props.shopList.map(option => (\r\n                                    <MenuItem key={option.name} value={option.name}>\r\n                                        {option.name}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        {this.state.modifyButton &&\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Ok\r\n                        </Button>\r\n                        }\r\n                        {this.props.loggedIn && this.state.modifyButton &&\r\n                        <Button color='primary' onClick={this.handleModifyButton}>\r\n                            Modyfikuj\r\n                        </Button>\r\n                        }\r\n                        {this.props.loggedIn && this.state.modifyButton &&\r\n                            <FlatButton>\r\n                            <Favorite onClick={this.handleOpenFavourite}/>\r\n                            </FlatButton>\r\n                        }\r\n                        {!this.state.modifyButton &&\r\n                        <Button onClick={this.handleSave} color=\"primary\">\r\n                            Zapisz\r\n                        </Button>\r\n                        }\r\n                        {!this.state.modifyButton &&\r\n                        <Button onClick={this.handleCancel} color=\"primary\">\r\n                            Anuluj\r\n                        </Button>\r\n                        }\r\n\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.state.openFavourite}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={this.handleCloseFavourite}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-slide-title\">\r\n                        Wybierz grupę\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <Divider/>\r\n                        <form style={{\r\n                            display: 'flex',\r\n                            flexWrap: 'wrap',\r\n                            margin: '0 auto'\r\n                        }}\r\n                              noValidate\r\n                              autoComplete=\"off\">\r\n                            {(this.props.favouriteList.length > 0) &&\r\n                            <TextField\r\n                                id=\"standard-select-currency\"\r\n                                select\r\n                                label=\"Wybierz grupę\"\r\n                                value={this.state.favourite}\r\n                                onChange={this.handleFavouriteChange}\r\n                                style={{\r\n                                    marginTop: '19px',\r\n                                    width: '400px',\r\n                                    padding: '10px'\r\n                                }}\r\n                            >\r\n                                {this.props.favouriteList.map(option => (\r\n                                    <MenuItem key={option.name} value={option.name}>\r\n                                        {option.name}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                            }\r\n                            {(this.props.favouriteList.length == 0) &&\r\n                                <TextField\r\n                                    disabled={true}\r\n                                    value={'Brak grup ulubionych! \\n Dodaj grupy!'}\r\n                                    style={{\r\n                                        marginTop: '19px',\r\n                                        width: '400px',\r\n                                        padding: '10px'\r\n                                    }}\r\n                                    label={'Ważne'}\r\n                                >\r\n\r\n                                </TextField>\r\n                            }\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleFavourite} color=\"primary\">\r\n                            OK\r\n                        </Button>\r\n                        <Button onClick={this.handleCloseFavourite} color=\"primary\">\r\n                            Anuluj\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        shopList: state.getIn(['reducerShop', 'shopList']),\r\n        favouriteList: state.getIn(['reducerFavourite', 'favouriteList']),\r\n        userId: state.getIn(['reducerUser', 'user', 'userId'])\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getShops: () => dispatch(getShops()),\r\n        modifyProduct: (product) => dispatch(modifyProduct(product)),\r\n        getFavourites: (userId) => dispatch(getFavourites(userId)),\r\n        addFavouriteProduct: (productId, favouriteId) => dispatch(addFavouriteProduct(productId, favouriteId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Product));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Product from './Product';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport {addProduct, getShops, getCategories, getFavourites} from \"../../reducers/action-creators\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { store } from '../../index';\r\n\r\nfunction Transition(props) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nclass ProductContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: [],\r\n            newProduct: false,\r\n            productDetail: false,\r\n            newProductDialog: {\r\n                productId: 0,\r\n                shopId: 0,\r\n                categoryId: 0,\r\n                name: '',\r\n                description: '',\r\n                price: 0.00,\r\n                currency: '',\r\n                link: ''\r\n            },\r\n            shop: '',\r\n            category: '',\r\n            userId: 0\r\n        };\r\n\r\n        store.subscribe(() => {\r\n            const state = store.getState();\r\n            this.setState({\r\n                userId: state.getIn(['reducerUser', 'user', 'userId'])\r\n            });\r\n        });\r\n    }\r\n\r\n    componentWillMount() {\r\n        getShops();\r\n        getCategories();\r\n    }\r\n\r\n    validateDetails = () => {\r\n        const newProduct = this.state.newProductDialog;\r\n        let shopID;\r\n        this.props.shopList.forEach(shop => {\r\n            if(shop.name == this.state.shop) {\r\n                shopID = shop.shopId;\r\n            }\r\n        });\r\n        newProduct.shopId = shopID;\r\n        let catID;\r\n        this.props.categoryList.forEach(shop => {\r\n            if(shop.name == this.state.category) {\r\n                catID = shop.categoryId;\r\n            }\r\n        });\r\n        newProduct.categoryId = catID;\r\n        this.props.addProduct(newProduct);\r\n    };\r\n\r\n    newProductStateChange = (evt) => {\r\n        const target = evt.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n\r\n        const newProductDialog = {...this.state.newProductDialog};\r\n        newProductDialog[name] = value;\r\n        this.setState({newProductDialog});\r\n    };\r\n\r\n    openNewDialog = () => {\r\n        this.setState({ newProduct: true });\r\n    };\r\n\r\n    closeNewDialog = () => {\r\n        this.setState({ newProduct: false });\r\n    };\r\n\r\n    handleShopChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n\r\n        this.setState({shop: value});\r\n    };\r\n\r\n    handleCategoryChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n\r\n        this.setState({category: value});\r\n    };\r\n\r\n    render() {\r\n        const productList = this.props.productList;\r\n\r\n        return (\r\n            <div className={'row'}>\r\n                {productList.map(product => <Product loggedIn={this.props.loggedIn} shopId={product.shopId} {...product}/>)}\r\n\r\n                {this.props.loggedIn && <Fab style={{\r\n                    margin: 0,\r\n                    top: 'auto',\r\n                    right: 20,\r\n                    bottom: 20,\r\n                    left: 'auto',\r\n                    position: 'fixed',\r\n                    color: '#000000',\r\n                    backgroundColor: '#F24F4F'\r\n                }} onClick={this.openNewDialog}>\r\n                    <AddIcon />\r\n                </Fab>}\r\n\r\n\r\n                <Dialog\r\n                    open={this.state.newProduct}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={this.closeNewDialog}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-slide-title\">\r\n                        {\"Dodaj nowy produkt\"}\r\n                    </DialogTitle>\r\n                    <DialogContent style={{\r\n                        display: 'inline',\r\n                        overflowY: 'scroll'\r\n                    }}>\r\n                        <form>\r\n                            <TextField\r\n                                autoFocus\r\n                                id=\"new-product-name\"\r\n                                name='name'\r\n                                label=\"Nazwa\"\r\n                                onBlur={this.newProductStateChange}\r\n                                helperText=\"Wpisz nazwe produktu\"\r\n                                margin=\"normal\"\r\n                                style={{\r\n                                    width: '400px'\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                id=\"new-product-descr\"\r\n                                name='description'\r\n                                label=\"Opis\"\r\n                                onBlur={this.newProductStateChange}\r\n                                helperText=\"Wpisz opis produktu\"\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                multiline\r\n                            >\r\n                            </TextField>\r\n                            <TextField\r\n                                id=\"standard-select-currency\"\r\n                                select\r\n                                label=\"Sklep\"\r\n                                value={this.state.shop}\r\n                                onChange={this.handleShopChange}\r\n                                helperText=\"Wybierz sklep\"\r\n                                margin=\"normal\"\r\n                                style={{\r\n                                    marginTop: '19px',\r\n                                    width: '400px',\r\n                                    padding: '10px'\r\n                                }}\r\n                            >\r\n                                {this.props.shopList.map(option => (\r\n                                    <MenuItem key={option.name} value={option.name}>\r\n                                        {option.name}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                            <TextField\r\n                                id=\"standard-select-currency\"\r\n                                select\r\n                                label=\"Kategoria\"\r\n                                value={this.state.category}\r\n                                onChange={this.handleCategoryChange}\r\n                                helperText=\"Wybierz kategorię\"\r\n                                margin=\"normal\"\r\n                                style={{\r\n                                    marginTop: '19px',\r\n                                    width: '400px',\r\n                                    padding: '10px'\r\n                                }}\r\n                            >\r\n                                {this.props.categoryList.map(option => (\r\n                                    <MenuItem key={option.name} value={option.name}>\r\n                                        {option.name}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                            <TextField\r\n                                autoFocus\r\n                                id=\"new-product-price\"\r\n                                name='price'\r\n                                label=\"cena\"\r\n                                onBlur={this.newProductStateChange}\r\n                                helperText=\"Wprowadź cenę produktu\"\r\n                                type='number'\r\n                                margin=\"normal\"\r\n                                style={{\r\n                                    width: '400px'\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                autoFocus\r\n                                id=\"new-product-currency\"\r\n                                name='currency'\r\n                                label=\"Waluta\"\r\n                                onBlur={this.newProductStateChange}\r\n                                helperText=\"Wpisz walutę\"\r\n                                margin=\"normal\"\r\n                                style={{\r\n                                    width: '400px'\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                autoFocus\r\n                                id=\"new-product-link\"\r\n                                name='link'\r\n                                label=\"Link do zdjęcia\"\r\n                                onBlur={this.newProductStateChange}\r\n                                type='url'\r\n                                margin=\"normal\"\r\n                                style={{\r\n                                    width: '400px'\r\n                                }}\r\n                            />\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.validateDetails} color=\"primary\">\r\n                            Dodaj\r\n                        </Button>\r\n                        <Button onClick={this.closeNewDialog} color=\"primary\">\r\n                            Anuluj\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        productList: state.getIn(['reducerProduct', 'productList']),\r\n        shopList: state.getIn(['reducerShop', 'shopList']),\r\n        categoryList: state.getIn(['reducerCategory', 'categoryList']),\r\n        isLoading: state.getIn(['reducerProduct', 'view', 'isLoading'])\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getShops: () => dispatch(getShops()),\r\n        getCategories: () => dispatch(getCategories()),\r\n        addProduct: (product) => dispatch(addProduct(product))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductContainer);\r\n\r\n\r\n","import React from 'react'\r\n\r\n//Material-UI components\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default class Loader extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CircularProgress style={{\r\n                    position: 'absolute',\r\n                    top: '50%',\r\n                    left: '50%',\r\n                    marginRight: '-50%',\r\n                    transform: 'translate(-50%, -50%)',\r\n                    width: '100px'\r\n                }} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport {getShops, getCategories } from '../../reducers/action-creators';\r\n//Material-UI components\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n            margin: 'auto'\r\n        },\r\n    },\r\n};\r\n\r\nclass FilterContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            categories: [],\r\n            shops: [],\r\n        };\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.props.getShops();\r\n        this.props.getCategories();\r\n        if(this.props.shopList.length > 0 && this.props.categoryList.length > 0) {\r\n            this.props.shopList.forEach(shop => {\r\n                if(!this.state.shops.includes(shop.name)) {\r\n                    this.state.shops.push(shop.name);\r\n                }\r\n            });\r\n            this.props.categoryList.forEach(category => {\r\n                if(!this.state.categories.includes(category.name)) {\r\n                    this.state.categories.push(category.name);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChangeCategory = event => {\r\n        this.setState({ categories: event.target.value });\r\n        const categoryObjects = [];\r\n        event.target.value.forEach(value => {\r\n            this.props.categoryList.forEach(category => {\r\n                if(category.name == value) {\r\n                    categoryObjects.push(category);\r\n                }\r\n            })\r\n        });\r\n        this.props.filterCategory(categoryObjects);\r\n    };\r\n\r\n    handleChangeShop = event => {\r\n        this.setState({shops: event.target.value});\r\n        const shopObjects = [];\r\n        event.target.value.forEach(value => {\r\n            this.props.shopList.forEach(shop => {\r\n                if(shop.name == value) {\r\n                    shopObjects.push(shop);\r\n                }\r\n            })\r\n        });\r\n        this.props.filterShop(shopObjects);\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div style={{\r\n                margin: '0 auto',\r\n                padding: '10px'\r\n            }}>\r\n                <FormControl style={{\r\n                    width: '200',\r\n                    maxWidth: '300',\r\n                    margin: '0 auto',\r\n                    padding: '20px',\r\n                    border: '3px',\r\n                    borderColor: '#A59A9A',\r\n                    marginLeft: 'auto',\r\n                    marginRight: 'auto'\r\n                }}>\r\n                    <InputLabel htmlFor=\"select-multiple-chip\">Kategorie</InputLabel>\r\n                    <Select\r\n                        multiple\r\n                        value={this.state.categories}\r\n                        onChange={this.handleChangeCategory}\r\n                        input={<Input id=\"select-multiple-chip\" />}\r\n                        renderValue={selected => (\r\n                            <div style={{\r\n                                display: 'flex',\r\n                                flexWrap: 'wrap',\r\n                            }}>\r\n                                {selected.map(value => (\r\n                                    <Chip key={value} label={value} />\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                        style={{\r\n                            minWidth: '200',\r\n                            maxWidth: '300',\r\n                            alignContent: 'center'\r\n                        }}\r\n                        MenuProps={MenuProps}\r\n                    >\r\n                        {this.props.categoryList.map(category => (\r\n                            <MenuItem key={category.name} value={category.name} >\r\n                                {category.name}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl style={{\r\n                    width: '200',\r\n                    maxWidth: '300',\r\n                    margin: '0 auto',\r\n                    padding: '20px',\r\n                    border: '3px',\r\n                    borderColor: '#A59A9A',\r\n                    marginLeft: 'auto',\r\n                    marginRight: 'auto'\r\n                }}>\r\n                    <InputLabel htmlFor=\"select-multiple-chip\">Sklepy</InputLabel>\r\n                    <Select\r\n                        multiple\r\n                        value={this.state.shops}\r\n                        onChange={this.handleChangeShop}\r\n                        input={<Input id=\"select-multiple-chip\" />}\r\n                        renderValue={selected => (\r\n                            <div style={{\r\n                                display: 'flex',\r\n                                flexWrap: 'wrap',\r\n                            }}>\r\n                                {selected.map(value => (\r\n                                    <Chip key={value} label={value} />\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                        MenuProps={MenuProps}\r\n                    >\r\n                        {this.props.shopList.map(shop => (\r\n                            <MenuItem key={shop.name} value={shop.name} >\r\n                                {shop.name}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        shopList: state.getIn(['reducerShop', 'shopList']),\r\n        categoryList: state.getIn(['reducerCategory', 'categoryList'])\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getShops: () => dispatch(getShops()),\r\n        getCategories: () => dispatch(getCategories())\r\n    }\r\n}\r\n\r\nexport const Filter = connect(mapStateToProps, mapDispatchToProps)(FilterContainer);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header/Header';\r\nimport ProductSpace from './ProductsSpace/ProductSpace';\r\nimport Loading from './Loading';\r\nimport { Filter } from './Filters/Filter';\r\nimport { getProducts, getFilteredProducts } from '../reducers/action-creators';\r\n\r\nclass AppContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: true,\r\n            user: {},\r\n            productName: '',\r\n            categories: [],\r\n            shops: [],\r\n            logIn: false\r\n        };\r\n    }\r\n\r\n    specificSearch = (name) => {\r\n        console.log(name);\r\n        this.setState({productName: name});\r\n    };\r\n\r\n    filterShop = (shops) => {\r\n        this.setState({shops: shops});\r\n    };\r\n\r\n    filterCategory = (categories) => {\r\n        this.setState({categories: categories});\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.props.getProducts();\r\n    };\r\n\r\n    filterProducts = () => {\r\n        console.log('Shops');\r\n        console.log(this.state.shops);\r\n        console.log('categories');\r\n        console.log(this.state.categories);\r\n        console.log('name');\r\n        console.log(this.state.productName);\r\n        this.props.getFilteredProducts(this.state.shops, this.state.categories, this.state.productName);\r\n    };\r\n\r\n    handleLoggedIn = () => {\r\n        console.log('setstate to logged in');\r\n        this.setState({logIn: true});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{\r\n                padding: '5px',\r\n                position: 'absolute',\r\n                top: 0,\r\n                left: 0,\r\n                width: '100%',\r\n                height: '100%'\r\n            }}>\r\n                <Header change={this.specificSearch} newfilter={this.filterProducts} loggedIn={this.props.loggedIn} handleLogin={this.handleLoggedIn}/>\r\n                <Filter filterShop={this.filterShop} filterCategory={this.filterCategory}/>\r\n                {this.props.isLoading ?\r\n                    <Loading /> :\r\n                    <ProductSpace productList={this.props.productList} loggedIn={this.props.loggedIn}/>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        productList: state.getIn(['reducerProduct', 'productList']),\r\n        isLoading: state.getIn(['reducerProduct', 'view', 'isLoading']),\r\n        loggedIn: state.getIn(['reducerUser', 'isLogged'])\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getProducts: () => dispatch(getProducts()),\r\n        getFilteredProducts: (shops, categories, name) => dispatch(getFilteredProducts(shops, categories, name))\r\n    }\r\n}\r\n\r\nexport const App = connect(mapStateToProps, mapDispatchToProps)(AppContainer);\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header/Header';\r\nimport history from '../history';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { getUser, modifyUser, modifyUserPassword } from '../reducers/action-creators';\r\n\r\nfunction TabContainer(props) {\r\n    return (\r\n        <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n            {props.children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nclass UserContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 0,\r\n            saveButton: false,\r\n            modifyButton: true,\r\n            newUser: {\r\n                name: this.props.userData.name,\r\n                surname: this.props.userData.surname,\r\n                mail: this.props.userData.mail,\r\n                login: this.props.userData.login,\r\n            },\r\n            oldPass: '',\r\n            newPass: ''\r\n        };\r\n        if(!this.props.loggedIn) {\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getUser();\r\n    }\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    handleClickModify = () => {\r\n        this.setState({ modifyButton: false});\r\n    };\r\n\r\n    handleClickSave = () => {\r\n        const user = this.state.newUser;\r\n        user.password = this.props.userData.password;\r\n        user.userId = this.props.userData.userId;\r\n        if(user.login == '') user.login = this.props.userData.login;\r\n        if(user.name == '') user.login = this.props.userData.name;\r\n        if(user.surname == '') user.login = this.props.userData.surname;\r\n        if(user.mail == '') user.login = this.props.userData.mail;\r\n        console.log(user);\r\n        this.props.modifyUser(user);\r\n    };\r\n\r\n    handleClickCanel = () => {\r\n        this.setState({ modifyButton: true });\r\n    };\r\n\r\n    newUserChange = (evt) => {\r\n        const target = evt.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n\r\n        const newUser = {...this.state.newUser};\r\n        newUser[name] = value;\r\n        this.setState({newUser});\r\n    };\r\n\r\n    handlePasswordChange = (evt) => {\r\n        const value = evt.target.value;\r\n        const name = evt.target.name;\r\n        this.setState({[name]: value});\r\n    };\r\n\r\n    handleNewPass = () => {\r\n        const user = this.props.userData;\r\n        user.password = this.state.newPass;\r\n        user.name = this.props.userData.name;\r\n        user.surname = this.props.userData.surname;\r\n        user.mail = this.props.userData.mail;\r\n        user.userId = this.props.userData.userId;\r\n        user.login = this.props.userData.login;\r\n        this.props.modifyUserPassword(user);\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { value } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <Header loggedIn={this.props.loggedIn} />\r\n                <AppBar style={{\r\n                    position: 'static',\r\n                    maxWidth: '800px',\r\n                    margin: '0 auto',\r\n                }}>\r\n                    <Tabs value={value} onChange={this.handleChange}\r\n                          fullWidth\r\n                    >\r\n                        <Tab label=\"Dane konta\" />\r\n                        <Tab label=\"Zmiana hasła\" />\r\n                    </Tabs>\r\n                </AppBar>\r\n                {value === 0 &&\r\n                    <div style={{\r\n                        alignContent: 'center',\r\n                        alignItems: 'center',\r\n                        maxWidth: '800px',\r\n                        margin: '0 auto',\r\n                        verticalAlign: 100\r\n                    }}>\r\n                <form style={{\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    margin: '0 auto'\r\n                }}\r\n                      noValidate\r\n                      autoComplete=\"off\">\r\n                    <TextField\r\n                        disabled={this.state.modifyButton}\r\n                        defaultValue={this.props.userData.name}\r\n                        id=\"name-text\"\r\n                        name={\"name\"}\r\n                        onBlur={this.newUserChange}\r\n                        label=\"Imię\"\r\n                        style={{\r\n                            marginTop: '19px',\r\n                            width: '400px',\r\n                            margin: '0 auto',\r\n                            padding: '10px'\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        disabled={this.state.modifyButton}\r\n                        defaultValue={this.props.userData.surname}\r\n                        id=\"surname-text\"\r\n                        name={\"surname\"}\r\n                        onBlur={this.newUserChange}\r\n                        label=\"Nazwisko\"\r\n                        style={{\r\n                            marginTop: '19px',\r\n                            width: '400px',\r\n                            margin: '0 auto',\r\n                            padding: '10px'\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        disabled={this.state.modifyButton}\r\n                        defaultValue={this.props.userData.login}\r\n                        id=\"login-text\"\r\n                        name={\"login\"}\r\n                        onBlur={this.newUserChange}\r\n                        label=\"Login\"\r\n                        style={{\r\n                            marginTop: '19px',\r\n                            width: '400px',\r\n                            margin: '0 auto',\r\n                            padding: '10px'\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        disabled={this.state.modifyButton}\r\n                        defaultValue={this.props.userData.mail}\r\n                        id=\"email-text\"\r\n                        name={\"mail\"}\r\n                        onBlur={this.newUserChange}\r\n                        label=\"Mail\"\r\n                        style={{\r\n                            marginTop: '19px',\r\n                            width: '400px',\r\n                            margin: '0 auto',\r\n                            padding: '10px'\r\n                        }}\r\n                    />\r\n                </form>\r\n                    </div>\r\n                }\r\n                {value === 0 &&\r\n                    <div style={{\r\n                        alignContent: 'center',\r\n                        alignItems: 'center',\r\n                        maxWidth: '800px',\r\n                        margin: '0 auto',\r\n                        verticalAlign: 100\r\n                    }}>\r\n\r\n                        {this.state.modifyButton &&\r\n                            <Button onClick={this.handleClickModify} style={{\r\n                                margin: '0 auto',\r\n                                border: '5px',\r\n                                borderColor: '#A59A9A',\r\n                                backgroundColor: '#3f51b5'\r\n                            }}>\r\n                                <h4 style={{color: 'white'}}>Modyfikuj</h4>\r\n                            </Button>\r\n                        }\r\n                        {!this.state.modifyButton &&\r\n                            <Button onClick={this.handleClickSave} style={{\r\n                                padding: '10px',\r\n                                margin: '10px',\r\n                                border: '5px',\r\n                                borderColor: '#A59A9A',\r\n                                backgroundColor: '#3f51b5'\r\n                            }}>\r\n                                <h4 style={{color: 'white'}}>Zapisz</h4>\r\n                            </Button>\r\n                        }\r\n                        {!this.state.modifyButton &&\r\n                            <Button onClick={this.handleClickCanel} style={{\r\n                                padding: '10px',\r\n                                margin: '10px',\r\n                                border: '5px',\r\n                                borderColor: '#A59A9A',\r\n                                backgroundColor: '#3f51b5'\r\n                            }}>\r\n                                <h4 style={{color: 'white'}}>Anuluj</h4>\r\n                            </Button>\r\n                        }\r\n                    </div>\r\n                }\r\n                {value === 1 &&\r\n                <div style={{\r\n                    alignContent: 'center',\r\n                    alignItems: 'center',\r\n                    maxWidth: '800px',\r\n                    margin: '0 auto',\r\n                    verticalAlign: 100\r\n                }}>\r\n                    <form style={{\r\n                        display: 'flex',\r\n                        flexWrap: 'wrap',\r\n                        margin: '0 auto'\r\n                    }}\r\n                          noValidate\r\n                          autoComplete=\"off\">\r\n                        <TextField\r\n                            id=\"name-text\"\r\n                            name=\"oldPass\"\r\n                            onBlur={this.handlePasswordChange}\r\n                            label=\"Stare haslo\"\r\n                            style={{\r\n                                marginTop: '19px',\r\n                                width: '400px',\r\n                                margin: '0 auto',\r\n                                padding: '10px'\r\n                            }}\r\n                        />\r\n                        <TextField\r\n                            id=\"surname-text\"\r\n                            name=\"newPass\"\r\n                            onBlur={this.handlePasswordChange}\r\n                            label=\"Nowe haslo\"\r\n                            style={{\r\n                                marginTop: '19px',\r\n                                width: '400px',\r\n                                margin: '0 auto',\r\n                                padding: '10px'\r\n                            }}\r\n                        />\r\n                    </form>\r\n                    <Button onClick={this.handleNewPass}>\r\n                        Zmien haslo\r\n                    </Button>\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        userData: state.getIn(['reducerUser','user']),\r\n        loggedIn: state.getIn(['reducerUser', 'isLogged'])\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getUser: () => dispatch(getUser()),\r\n        modifyUser: (user) => dispatch(modifyUser(user)),\r\n        modifyUserPassword: (user) => dispatch(modifyUserPassword(user))\r\n    }\r\n}\r\n\r\nexport const User = connect(mapStateToProps, mapDispatchToProps)(UserContainer);\r\n","import React from 'react';\r\nimport { deleteFavouriteProduct, getFavourites } from \"../../reducers/action-creators\";\r\nimport { connect } from 'react-redux';\r\n\r\n//Material UI components\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Button from '@material-ui/core/Button';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Clear from '@material-ui/icons/Clear';\r\n\r\nfunction Transition(props) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nconst styles = {\r\n    card: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n};\r\n\r\nclass Product extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleDeleteProduct = () => {\r\n        this.props.deleteFavourite(this.props.productId, this.props.favouriteId, this.props.userId);\r\n        this.props.getFavourites(this.props.userId);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{\r\n                float: 'left',\r\n            }}>\r\n                <ListItem button style={{\r\n                    width: '400px'\r\n                }}>\r\n                    <ListItemIcon onClick={this.handleClickOpen} >\r\n                        <img src={this.props.link} alt={'Product pic'} style={{\r\n                            maxHeight: '50px',\r\n                            maxWidth: '50xp'\r\n                        }}/>\r\n                    </ListItemIcon>\r\n                    <ListItemText inset onClick={this.handleClickOpen}  primary={this.props.name} />\r\n                    <ListItemIcon onClick={this.handleDeleteProduct}>\r\n                        <Clear/>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n                <Divider/>\r\n\r\n                <Dialog\r\n                    open={this.state.open}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-slide-title\">\r\n                        {this.props.name}\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            <img src={this.props.link} alt={'Product pic'} style={{\r\n                                width: '100%',\r\n                                maxWidth: '500px'\r\n                            }}/>\r\n                        </DialogContentText>\r\n                        <Divider/>\r\n                        <DialogContentText id={'product-price'} style={{\r\n                            fontWeight: 800,\r\n                            color: '#333333'\r\n                        }}>\r\n                            Cena: {this.props.price} {this.props.currency}\r\n                        </DialogContentText>\r\n                        <DialogContentText id ={'product-desc'} style={{\r\n                            fontWeight: 600,\r\n                            color: '#333333',\r\n                            fontStyle: 'italic'\r\n                        }}>\r\n                            Opis:\r\n                        </DialogContentText>\r\n                        <DialogContentText id ={'product-desc'} style={{\r\n                            fontWeight: 200,\r\n                            color: '#333333',\r\n                            fontStyle: 'italic'\r\n                        }}>\r\n                            {this.props.description}\r\n                        </DialogContentText>\r\n\r\n                        <DialogContentText id ={'product-desc'} style={{\r\n                            fontWeight: 400,\r\n                            color: '#333333',\r\n                            fontStyle: 'italic'\r\n                        }}>\r\n                            {this.props.link}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Ok\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        userId: state.getIn(['reducerUser', 'user', 'userId'])\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        deleteFavourite: (productId, favouriteId, userId) => dispatch(deleteFavouriteProduct(productId, favouriteId, userId)),\r\n        getFavourites: (userId) => dispatch(getFavourites(userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Product));\r\n","import React from 'react';\r\n\r\n//Material UI components\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport List from '@material-ui/core/List';\r\nimport ListSubheader from '@material-ui/core/ListSubheader'\r\n\r\nimport Product from './Product';\r\n\r\nconst styles = {\r\n    card: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n};\r\n\r\nclass Favourite extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n\r\n    defaultProps = {\r\n\r\n    };\r\n\r\n    render() {\r\n        const productsList = this.props.products;\r\n        return (\r\n            <div style={{\r\n                float: 'left',\r\n                margin: '20px'\r\n            }}>\r\n\r\n                    <ExpansionPanel style={{\r\n                        width: '800px',\r\n                        maxWidth: '1000px'\r\n                    }}>\r\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                            <Typography>{this.props.name}</Typography>\r\n                        </ExpansionPanelSummary>\r\n                        <ExpansionPanelDetails>\r\n                            <List\r\n                                component=\"nav\"\r\n                                subheader={<ListSubheader component=\"div\">Produkty</ListSubheader>}\r\n                                style={{\r\n                                    display: 'block',\r\n                                    width: '50%'\r\n                                }}\r\n                            >\r\n                                {productsList.map(product => <Product favouriteId={this.props.id} productId={product.productId} {...product} />)}\r\n                            </List>\r\n                        </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Favourite);\r\n","import React from 'react';\r\nimport Favourite from './Favourite';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FlatButton from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { addFavourite } from \"../../reducers/action-creators\";\r\n\r\nfunction Transition(props) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nclass ProductContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newProduct: false,\r\n            productDetail: false,\r\n            newFavouriteDialog: {\r\n                name: String,\r\n                userId: props.userId\r\n            }\r\n        };\r\n    }\r\n\r\n    validateDetails = () => {\r\n        const favourite = {\r\n            favouriteId: 0,\r\n            userId: this.props.userId,\r\n            name: this.state.newFavouriteDialog.name\r\n        };\r\n        this.props.addFavourite(favourite.favouriteId, favourite.userId, favourite.name);\r\n    };\r\n\r\n    newFavouriteStateChange = (evt) => {\r\n        const target = evt.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n\r\n        const newFavouriteDialog = {...this.state.newFavouriteDialog};\r\n        newFavouriteDialog[name] = value;\r\n        this.setState({newFavouriteDialog});\r\n    };\r\n\r\n    openNewDialog = () => {\r\n        this.setState({ newProduct: true });\r\n    };\r\n\r\n    closeNewDialog = () => {\r\n        this.setState({ newProduct: false });\r\n    };\r\n\r\n    render() {\r\n        const favouriteList = this.props.favouriteList;\r\n        return (\r\n            <div className={'row'} style={{\r\n                display: 'block'\r\n            }}>\r\n\r\n                {favouriteList.map(favourite => <Favourite id={favourite.favouriteId} {...favourite}/>)}\r\n\r\n                <Fab style={{\r\n                    margin: 0,\r\n                    top: 'auto',\r\n                    right: 20,\r\n                    bottom: 20,\r\n                    left: 'auto',\r\n                    position: 'fixed',\r\n                    color: '#000000',\r\n                    backgroundColor: '#F24F4F'\r\n                }} onClick={this.openNewDialog}>\r\n                    <AddIcon />\r\n                </Fab>\r\n\r\n                <Dialog\r\n                    open={this.state.newProduct}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={this.closeNewDialog}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-slide-title\">\r\n                        {\"Dodaj nową grupę ulubionych\"}\r\n                    </DialogTitle>\r\n                    <DialogContent style={{\r\n                        display: 'inline',\r\n                        overflowY: 'scroll'\r\n                    }}>\r\n                        <form>\r\n                            <TextField\r\n                                autoFocus\r\n                                id=\"new-product-name\"\r\n                                name='name'\r\n                                label=\"Nazwa\"\r\n                                onBlur={this.newFavouriteStateChange}\r\n                                helperText=\"Wpisz nazwe grupy ulubionych\"\r\n                                margin=\"normal\"\r\n                                style={{\r\n                                    width: '400px'\r\n                                }}\r\n                            />\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.validateDetails} color=\"primary\">\r\n                            Dodaj\r\n                        </Button>\r\n                        <Button onClick={this.closeNewDialog} color=\"primary\">\r\n                            Anuluj\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        userId: state.getIn(['reducerUser', 'user', 'userId'])\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        addFavourite: (favouriteId, userId, name) => dispatch(addFavourite(favouriteId, userId, name))\r\n    }\r\n}\r\n\r\nexport const FavouriteSpace = connect(mapStateToProps, mapDispatchToProps)(ProductContainer);\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header/Header';\r\nimport { FavouriteSpace } from './FavouriteSpace/FavouriteSpace';\r\nimport Loading from './Loading';\r\n\r\nimport history from '../history';\r\n\r\nimport { getFavourites } from '../reducers/action-creators';\r\n\r\nclass FavouriteContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: true,\r\n            user: false,\r\n        };\r\n        if(!this.props.loggedIn) {\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.getFavourites(this.props.userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{\r\n                padding: '5px',\r\n                position: 'absolute',\r\n                top: 0,\r\n                left: 0,\r\n                width: '100%',\r\n                height: '100%'\r\n            }}>\r\n                <Header  loggedIn={this.props.loggedIn} />\r\n                {this.props.isLoading ?\r\n                    <Loading /> :\r\n                    <FavouriteSpace favouriteList={this.props.favouriteList} />\r\n                }\r\n                <div>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        favouriteList: state.getIn(['reducerFavourite', 'favouriteList']),\r\n        isLoading: state.getIn(['reducerFavourite', 'view', 'isLoading']),\r\n        loggedIn: state.getIn(['reducerUser', 'isLogged']),\r\n        userId: state.getIn(['reducerUser', 'user', 'userId'])\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getFavourites: (userID) => dispatch(getFavourites(userID))\r\n    }\r\n}\r\n\r\nexport const FavouriteC = connect(mapStateToProps, mapDispatchToProps)(FavouriteContainer);\r\n","/* eslint-disable react/forbid-prop-types */\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport {Switch, Route, Router} from 'react-router';\r\n\r\nimport { App } from \"./components/AppContainer\";\r\nimport { User } from \"./components/UserContainer\";\r\nimport { FavouriteC } from \"./components/FavouriteContainer\";\r\n\r\n\r\nexport default class Root extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            logIn: false\r\n        }\r\n    }\r\n\r\n    static propTypes = {\r\n        store: PropTypes.object.isRequired,\r\n        history: PropTypes.object.isRequired\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Provider store={this.props.store}>\r\n                    <Router history={this.props.history}>\r\n                        <div>\r\n                            <Switch>\r\n                                <Route exact path=\"/\" component={App}/>\r\n                                <Route path=\"/userpanel\" component={User}/>\r\n                            </Switch>\r\n                        </div>\r\n                    </Router>\r\n            </Provider>\r\n        );\r\n    }\r\n\r\n}\r\n","import {\r\n    Map,\r\n    List,\r\n    fromJS\r\n} from 'immutable';\r\n\r\nconst INITIAL_STATE = Map({\r\n    productList: List([]),\r\n    view: Map({\r\n        isLoading: false,\r\n        errorLoading: false,\r\n        errorMessage: String\r\n    })\r\n});\r\n\r\nexport default function (state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'GET_PRODUCTS':\r\n            return state.merge({\r\n                view: {\r\n                    isLoading: true,\r\n                    errorLoading: false\r\n                }\r\n            });\r\n        case 'GET_PRODUCTS_ALL':\r\n            return state.merge({\r\n                view: {\r\n                    isLoading: true,\r\n                    errorLoading: false\r\n                }\r\n            });\r\n        case 'GET_PRODUCTS_SUCCESS':\r\n            return state.merge({\r\n                productList: action.payload,\r\n                view: {\r\n                    isLoading: false,\r\n                    errorLoading: false,\r\n                    errorMessage: 'Wykonano idealnie.'\r\n                }\r\n            });\r\n        case 'GET_PRODUCTS_FAILURE':\r\n            return state.merge({\r\n                view: {\r\n                    isLoading: false,\r\n                    errorLoading: true,\r\n                    errorMessage: 'Wystąpił błąd podczas pobierania produktów.'\r\n                }\r\n            });\r\n        case 'ADD_PRODUCT_SUCCESS':\r\n            return state.merge({\r\n                view: {\r\n                    errorLoading: false,\r\n                    errorMessage: ''\r\n                }\r\n            });\r\n        case 'ADD_PRODUCT_FAILURE':\r\n            return state.merge({\r\n                view: {\r\n                    errorLoading: true,\r\n                    errorMessage: 'Wystąpił błąd podczas dodawania produktu.'\r\n                }\r\n            });\r\n        default: return state;\r\n    }\r\n}\r\n","import {\r\n    Map,\r\n    List\r\n} from 'immutable';\r\n\r\nconst INITIAL_STATE = Map({\r\n    shopList: List([]),\r\n    view: Map({\r\n        isLoading: false,\r\n        errorLoading: false,\r\n        errorMessage: ''\r\n    })\r\n});\r\n\r\nexport default function (state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'GET_SHOPS':\r\n            return state.merge({\r\n                view: {\r\n                    isLoading: true,\r\n                    errorLoading: false\r\n                }\r\n            });\r\n        case 'GET_SHOPS_SUCCESS':\r\n            return state.merge({\r\n                shopList: action.payload,\r\n                view: {\r\n                    isLoading: false,\r\n                    errorLoading: false,\r\n                    errorMessage: 'Wykonano idealnie.'\r\n                }\r\n            });\r\n        case 'GET_SHOPS_FAILURE':\r\n            return state.merge({\r\n                view: {\r\n                    isLoading: false,\r\n                    errorLoading: true,\r\n                    errorMessage: 'Wystąpił błąd podczas pobierania sklepów.'\r\n                }\r\n            });\r\n        default: return state;\r\n    }\r\n}\r\n","import {\r\n    Map,\r\n    List,\r\n    fromJS\r\n} from 'immutable';\r\n\r\nconst FAVOURITE_STATE = Map({\r\n    favouriteList: List([\r\n    ]),\r\n    view: Map({\r\n        isLoading: false,\r\n        errorLoading: false,\r\n        errorMessage: String\r\n    })\r\n});\r\n\r\nexport default function (state = FAVOURITE_STATE, action) {\r\n    switch (action.type) {\r\n        case 'GET_FAVOURITES':\r\n            return state.merge({\r\n                view: {\r\n                    isLoading: true,\r\n                    errorLoading: false\r\n                }\r\n            });\r\n        case 'GET_FAVOURITES_SUCCESS':\r\n            return state.merge({\r\n                favouriteList: action.payload,\r\n                view: {\r\n                    isLoading: false,\r\n                    errorLoading: false,\r\n                    errorMessage: 'Wykonano idealnie.'\r\n                }\r\n            });\r\n        case 'GET_FAVOURITES_FAILURE':\r\n            return state.merge({\r\n                view: {\r\n                    isLoading: false,\r\n                    errorLoading: true,\r\n                    errorMessage: 'Wystąpił błąd podczas pobierania ulubionych.'\r\n                }\r\n            });\r\n        case 'ADD_FAVOURITE_SUCCESS':\r\n            return state.merge({\r\n                view: {\r\n                    errorLoading: false,\r\n                    errorMessage: ''\r\n                }\r\n            });\r\n        case 'ADD_FAVOURITE_FAILURE':\r\n            return state.merge({\r\n                view: {\r\n                    errorLoading: true,\r\n                    errorMessage: 'Wystąpił błąd podczas dodawania nowych ulubionych.'\r\n                }\r\n            });\r\n        default: return state;\r\n    }\r\n}\r\n","import { Map, List } from 'immutable';\r\n\r\nconst FAVOURITE_STATE = Map({\r\n    categoryList: List([]),\r\n    view: Map({\r\n        isLoading: false,\r\n        errorLoading: false,\r\n        errorMessage: String\r\n    })\r\n});\r\n\r\nexport default function (state = FAVOURITE_STATE, action) {\r\n    switch (action.type) {\r\n        case 'GET_CATEGORIES':\r\n            return state.merge({\r\n                view: {\r\n                    isLoading: true,\r\n                    errorLoading: false\r\n                }\r\n            });\r\n        case 'GET_CATEGORIES_SUCCESS':\r\n            return state.merge({\r\n                categoryList: action.payload,\r\n                view: {\r\n                    isLoading: false,\r\n                    errorLoading: false,\r\n                    errorMessage: 'Wykonano prawidlowo.'\r\n                }\r\n            });\r\n        case 'GET_CATEGORIES_FAILURE':\r\n            return state.merge({\r\n                view: {\r\n                    isLoading: false,\r\n                    errorLoading: true,\r\n                    errorMessage: 'Wystapil błąd podczas pobierania kategorii.'\r\n                }\r\n            });\r\n        default: return state;\r\n    }\r\n}\r\n","import {\r\n    Map,\r\n    List\r\n} from 'immutable';\r\n\r\nconst INITIAL_STATE = Map({\r\n    user: Map(),\r\n    isLogged: false,\r\n    view: Map({\r\n        isLoading: false,\r\n        errorLoading: false,\r\n        errorMessage: String\r\n    })\r\n});\r\n\r\nexport default function (state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'GET_USER_SUCCESS':\r\n            return state.merge({\r\n                isLogged: true,\r\n                user: action.payload\r\n            });\r\n        case 'GET_USER_FAILURE':\r\n            return state.merge({\r\n                view: {\r\n                    isLoading: false,\r\n                    errorLoading: true,\r\n                    errorMessage: 'Wystąpił błąd podczas logowania!'\r\n                }\r\n            });\r\n        case 'GET_USER_WRONG':\r\n            return state.merge({\r\n                view: {\r\n                    isLoading: false,\r\n                    errorLoading: true,\r\n                    errorMessage: 'Złe hasło lub login!'\r\n                }\r\n            });\r\n        case 'ADD_USER_SUCCESS':\r\n            return state.merge({\r\n                view: {\r\n                    errorLoading: false,\r\n                    errorMessage: 'Pomyślnie dodano użytkownika!'\r\n                }\r\n            });\r\n        case 'ADD_USER_FAILURE':\r\n            return state.merge({\r\n                view: {\r\n                    errorLoading: true,\r\n                    errorMessage: 'Wystąpił błąd podczas dodawania użytkownika!'\r\n                }\r\n            });\r\n        case 'LOGOUT':\r\n            return state.merge({\r\n                isLogged: false,\r\n                user: {},\r\n                view: {\r\n                    errorLoading: false,\r\n                    errorMessage: 'Pomyślnie wylogowano!'\r\n                }\r\n            });\r\n        default: return state;\r\n    }\r\n}\r\n","\r\n\r\nexport const APP_VERSION = '0.1.0';\r\nexport const SERWER_LOCAL = 'http://localhost:8080';\r\nexport const SERWER_PROD = 'http://35.228.103.221:8080';\r\n","import {\r\n    delay\r\n} from 'redux-saga';\r\n\r\nimport {\r\n    put,\r\n    takeLatest\r\n} from 'redux-saga/effects';\r\nimport {SERWER_PROD} from \"../constants/AppConstants\";\r\n\r\nconst getUserFavourites = (userid) => {\r\n    try {\r\n        console.log('getting favourite user');\r\n        const response = fetch(`${SERWER_PROD}/api/favourite/favourites/${userid}`,{\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if(data.status === 'ok') {\r\n                    console.log(data.data);\r\n                    return data.data;\r\n                } else {\r\n                    console.log('not good');\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error occurred: ${error}.`));\r\n        return response;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_PROD}.`);\r\n        return [];\r\n    }\r\n};\r\n\r\nconst getProductsOfFavourite = async(favouriteId) => {\r\n    const response = await fetch(`${SERWER_PROD}/api/product/products/favourite/${favouriteId}`,{\r\n        method: 'GET',\r\n        headers: {\r\n            'Accept': 'application/json'\r\n        }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            return data.data;\r\n        })\r\n        .catch(error => {\r\n            console.log(`Error occurred: ${error}.`);\r\n            return false;\r\n        });\r\n    return response;\r\n};\r\n\r\nconst getUserFavouritesProducts = async(userid) => {\r\n    try {\r\n        console.log('getting favourite user');\r\n        let responseData;\r\n        const response = await fetch(`${SERWER_PROD}/api/favourite/favourites/${userid}`,{\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json'\r\n            }\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if(data.status === 'ok') {\r\n                    console.log('favourites properly taken');\r\n                    console.log(data.data);\r\n                    responseData = data.data;\r\n                    console.log(responseData);\r\n                    return data.data;\r\n                } else {\r\n                    console.log(`Something went wrong with fetching favourites`);\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(`Error occurred: ${error}.`);\r\n                return false;\r\n            });\r\n        await response;\r\n\r\n        await Promise.all(responseData.map(async favourite => {\r\n            favourite.products = await getProductsOfFavourite(favourite.favouriteId);\r\n        }));\r\n\r\n        return response;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_PROD}.`);\r\n        return [];\r\n    }\r\n};\r\n\r\nconst addFavouriteProduct = (favouriteid, productid) => {\r\n    try {\r\n        console.log('adding favourite product');\r\n        console.log(favouriteid);\r\n        console.log(productid);\r\n        const response = fetch(`${SERWER_PROD}/api/favourite/add2`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                id: 0,\r\n                favouriteId: favouriteid,\r\n                productId: productid\r\n            })\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if(data.status === 'ok') {\r\n                    console.log(data.data);\r\n                    return data.data;\r\n                } else {\r\n                    console.log('not good');\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error occurred: ${error}.`));\r\n        return response;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_PROD}.`);\r\n        return false;\r\n    }\r\n};\r\n\r\nconst addFavourite = (favouriteid, userid, name) => {\r\n    try {\r\n        console.log('getting filtered products');\r\n        const response = fetch(`${SERWER_PROD}/api/favourite/add`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                favouriteId: 0,\r\n                userId: userid,\r\n                name: name\r\n            })\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                if(data.status === 'ok') {\r\n                    console.log(data.data);\r\n                    return data.data;\r\n                } else {\r\n                    console.log('not good');\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error occurred: ${error}.`));\r\n        return response;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_PROD}.`);\r\n        return false;\r\n    }\r\n};\r\n\r\nconst deleteProductFromFavourite = (favourite, product) => {\r\n    try {\r\n        console.log('getting filtered products');\r\n        const response = fetch(`${SERWER_PROD}/api/favourite/delete/${favourite}/${product}`,{\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if(data.status === 'ok') {\r\n                    console.log(data.data);\r\n                    return data.data;\r\n                } else {\r\n                    console.log('not good');\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error occurred: ${error}.`));\r\n        return response;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_PROD}.`);\r\n        return false;\r\n    }\r\n};\r\n\r\nfunction* addFavouriteFunction (action) {\r\n    try {\r\n        yield addFavourite(action.favouriteId, action.userId, action.name);\r\n        yield put({ type: 'GET_FAVOURITES'});\r\n    } catch (e) {\r\n        yield put({ type: 'ADD_FAVOURITE_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* addProductToFavouriteFunction (action) {\r\n    try {\r\n        yield addFavouriteProduct(action.favouriteId, action.productId);\r\n        yield put({ type: 'GET_FAVOURITES'});\r\n    } catch (e) {\r\n        yield put({ type: 'ADD_TO_FAVOURITE_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* deleteProductFromFavouriteFunction (action) {\r\n    try {\r\n        yield deleteProductFromFavourite(action.favouriteId, action.productId);\r\n    } catch (e) {\r\n        yield put({ type: 'DELETE_FROM_FAVOURITE_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* loadFavourites (action) {\r\n    try {\r\n        yield delay(1000);\r\n        const favouriteList = yield getUserFavouritesProducts(action.userid);\r\n        yield put({ type: 'GET_FAVOURITES_SUCCESS', payload: favouriteList});\r\n    } catch (e) {\r\n        yield put({type: 'GET_FAVOURITES_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* watchGetFavourites() {\r\n    yield takeLatest('GET_FAVOURITES', loadFavourites);\r\n}\r\n\r\nfunction* watchAddFavourite() {\r\n    yield takeLatest('ADD_FAVOURITE', addFavouriteFunction);\r\n}\r\n\r\nfunction* watchAddFavouriteProduct() {\r\n    yield takeLatest('ADD_FAVOURITE_PRODUCT', addProductToFavouriteFunction);\r\n}\r\n\r\nfunction* watchDeleteFavouriteProduct() {\r\n    yield takeLatest('DELETE_FAVOURITE_PRODUCT', deleteProductFromFavouriteFunction);\r\n}\r\n\r\nexport default function* favouriteSaga() {\r\n    yield [\r\n        watchGetFavourites(),\r\n        watchAddFavourite(),\r\n        watchAddFavouriteProduct(),\r\n        watchDeleteFavouriteProduct()\r\n    ]\r\n}\r\n","import {\r\n    delay\r\n} from 'redux-saga';\r\n\r\nimport {\r\n    put,\r\n    select,\r\n    takeLatest\r\n} from 'redux-saga/effects';\r\nimport { SERWER_PROD } from \"../constants/AppConstants\";\r\n\r\nconst getProductsPromotionFromServer = () => {\r\n    try {\r\n        return [\r\n            {\r\n                productId: 1,\r\n                name: \"lol\",\r\n                shopId: 1,\r\n                description: \"lol\",\r\n                price: 21.37,\r\n                currency: \"PLN\",\r\n                link: \"https://www.putka.pl/ksiega-inspiracji/wp-content/uploads/2019/04/chleb-na-zakwasie-czy-drozdzach-800x600-header.jpg\"\r\n            }\r\n        ]\r\n        /*console.log('getting promotion products');\r\n        const response = fetch(`${SERWER_PROD}/api/product/promotions`,{\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if(data.status === 'ok') {\r\n                    console.log(data.data);\r\n                    return data.data;\r\n                } else {\r\n                    console.log('not good');\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error occurred: ${error}.`));\r\n        return response;*/\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_PROD}.`);\r\n\r\n        return [];\r\n    }\r\n};\r\n\r\nconst getProductsFromServer = () => {\r\n    try {\r\n        console.log('getting promotion products');\r\n        const response = fetch(`${SERWER_PROD}/api/product/all`,{\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if(data.status === 'ok') {\r\n                    console.log(data.data);\r\n                    return data.data;\r\n                } else {\r\n                    console.log('not good');\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error occurred: ${error}.`));\r\n        return response;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_PROD}.`);\r\n\r\n        return [];\r\n    }\r\n};\r\n\r\nconst getProductsFilterFromServer = (categories, shops, name) => {\r\n    try {\r\n        console.log('getting filtered products');\r\n        const response = fetch(`${SERWER_PROD}/api/product/products/filter`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                categories: categories,\r\n                shops: shops,\r\n                name: name\r\n            })\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if(data.status === 'ok') {\r\n                    console.log(data.data);\r\n                    return data.data;\r\n                } else {\r\n                    console.log('not good');\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error occurred: ${error}.`));\r\n        return response;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_PROD}.`);\r\n\r\n        return [];\r\n    }\r\n};\r\n\r\nconst modifyProduct = (product) => {\r\n    try {\r\n        console.log('fetching with modify product');\r\n        const response = fetch(`${SERWER_PROD}/api/product/modify`,{\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                productId: product.productId,\r\n                categoryId: product.categoryId,\r\n                shopId: product.shopId,\r\n                name: product.name,\r\n                description: product.description,\r\n                price: product.price,\r\n                currency: product.currency,\r\n                link: product.link\r\n            })\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if(data.status === 'ok') {\r\n                    console.log(data.data);\r\n                    return data.data;\r\n                } else {\r\n                    console.log('not good');\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error occurred: ${error}.`));\r\n        return response;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_PROD}.`);\r\n    }\r\n};\r\n\r\nconst addProduct = (product) => {\r\n    try {\r\n        console.log('fetching with add product');\r\n        const response = fetch(`${SERWER_PROD}/api/product/add`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                productId: product.productId,\r\n                categoryId: product.categoryId,\r\n                shopId: product.shopId,\r\n                name: product.name,\r\n                description: product.description,\r\n                price: product.price,\r\n                currency: product.currency,\r\n                link: product.link\r\n            })\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if(data.status === 'ok') {\r\n                    console.log(data.data);\r\n                    return data.data;\r\n                } else {\r\n                    console.log('not good');\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error occurred: ${error}.`));\r\n        return response;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_PROD}.`)\r\n    }\r\n};\r\n\r\nfunction* addProductFunction (action) {\r\n    try {\r\n        yield addProduct(action.product);\r\n        yield put({ type: 'GET_PRODUCTS_ALL'});\r\n    } catch (e) {\r\n        yield put({ type: 'ADD_PRODUCT_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* modifyProductFunction (action) {\r\n    try {\r\n        yield modifyProduct(action.product);\r\n        yield put({ type: 'GET_PRODUCTS_ALL'});\r\n    } catch (e) {\r\n        yield put({ type: 'MODIFY_PRODUCT_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* loadProducts () {\r\n    try {\r\n        yield delay(1000);\r\n        const productList = yield getProductsPromotionFromServer();\r\n        console.log(productList);\r\n        yield put({ type: 'GET_PRODUCTS_SUCCESS', payload: productList});\r\n    } catch (e) {\r\n        yield put({ type: 'GET_PRODUCTS_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* loadProductsAll () {\r\n    try {\r\n        yield delay(1000);\r\n        const productList = yield getProductsFromServer();\r\n        console.log(productList);\r\n        yield put({ type: 'GET_PRODUCTS_SUCCESS', payload: productList});\r\n    } catch (e) {\r\n        yield put({ type: 'GET_PRODUCTS_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* loadFilteredProducts(action) {\r\n    try {\r\n        yield delay(1000);\r\n        const productList = yield getProductsFilterFromServer(action.categories, action.shops, action.name);\r\n        yield put({ type: 'GET_PRODUCTS_SUCCESS', payload: productList});\r\n    } catch (e) {\r\n        yield put({ type: 'GET_PRODUCTS_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* watchGetProducts() {\r\n    yield takeLatest('GET_PRODUCTS', loadProducts);\r\n}\r\n\r\nfunction* watchGetProductsAll() {\r\n    yield takeLatest('GET_PRODUCTS_ALL', loadProductsAll);\r\n}\r\n\r\nfunction* watchGetFilteredProducts() {\r\n    yield takeLatest('GET_FILTERED_PRODUCTS', loadFilteredProducts);\r\n}\r\n\r\nfunction* watchModifyProduct() {\r\n    yield takeLatest('MODIFY_PRODUCT', modifyProductFunction);\r\n}\r\n\r\nfunction* watchAddProduct() {\r\n    yield takeLatest('ADD_PRODUCT', addProductFunction);\r\n}\r\nexport default function* rootSaga() {\r\n    yield [\r\n        watchGetProductsAll(),\r\n        watchGetProducts(),\r\n        watchGetFilteredProducts(),\r\n        watchModifyProduct(),\r\n        watchAddProduct()\r\n    ]\r\n}\r\n","import {\r\n    put,\r\n    select,\r\n    takeLatest\r\n} from 'redux-saga/effects';\r\nimport {SERWER_PROD} from \"../constants/AppConstants\";\r\n\r\nconst getAllShopsFromServer = () => {\r\n        try {\r\n            return [\r\n                {\r\n                    shopId: 1,\r\n                    name: \"lol\",\r\n                    localization: '',\r\n                    street: \"\",\r\n                    city: \"\",\r\n                    number: \"\",\r\n                    country: \"\",\r\n                    telnumber: \"\",\r\n                    site: \"\"\r\n                }\r\n            ]\r\n            /*console.log('fetching with get shops');\r\n            const response = fetch(`${SERWER_PROD}/api/shop/shops`,{\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }).then(response => response.json())\r\n                .then(data => {\r\n                    if(data.status === 'ok') {\r\n                        console.log(data.data);\r\n                        return data.data;\r\n                    } else {\r\n                        console.log('not good');\r\n                        return false;\r\n                    }\r\n                })\r\n                .catch(error => console.log(`Error occurred: ${error}.`));\r\n            return response;*/\r\n        } catch(e) {\r\n            console.log(`Could not fetch data from ${SERWER_PROD}.`);\r\n\r\n            return [];\r\n        }\r\n};\r\n\r\nfunction* loadAllShops () {\r\n    try {\r\n        const shopList = yield getAllShopsFromServer();\r\n        yield put({ type: 'GET_SHOPS_SUCCESS', payload: shopList});\r\n    } catch (e) {\r\n        yield put({type: 'GET_SHOPS_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* watchGetShops() {\r\n    yield takeLatest('GET_SHOPS', loadAllShops);\r\n}\r\n\r\nexport default function* shopSaga() {\r\n    yield [\r\n        watchGetShops()\r\n    ]\r\n}\r\n","import { delay } from 'redux-saga';\r\nimport { put, takeLatest } from 'redux-saga/effects';\r\nimport {SERWER_PROD} from \"../constants/AppConstants\";\r\n\r\nconst getCategories = () => {\r\n    try {\r\n        return [\r\n            {\r\n                categoryId: 1,\r\n                name: \"nabial\",\r\n                description: \"\"\r\n            },\r\n            {\r\n                categoryId: \"lol\",\r\n                name: \"lol\",\r\n                description: \"\"\r\n            }\r\n        ];\r\n        /*const response = fetch(`${SERWER_PROD}/api/category/categories`,{\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if(data.status === 'ok') {\r\n                    console.log(data.data);\r\n                    return data.data;\r\n                } else {\r\n                    console.log('not good');\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error occurred: ${error}.`));\r\n        return response;*/\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_PROD}.`);\r\n        return [];\r\n    }\r\n    console.log('fetching with get categories');\r\n};\r\n\r\nfunction* loadCategories () {\r\n    try {\r\n        const categoriesList = yield getCategories();\r\n        yield put({ type: 'GET_CATEGORIES_SUCCESS', payload: categoriesList});\r\n    } catch (e) {\r\n        yield put({ type: 'GET_CATEGORIES_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* watchGetCategories() {\r\n    yield takeLatest('GET_CATEGORIES', loadCategories);\r\n}\r\n\r\nexport default function* categorySaga() {\r\n    yield [\r\n        watchGetCategories()\r\n    ]\r\n}\r\n","import {\r\n    put,\r\n    takeLatest\r\n} from 'redux-saga/effects';\r\nimport {SERWER_PROD} from \"../constants/AppConstants\";\r\n\r\nconst getUserParams = (login, pass) => {\r\n    try {\r\n        console.log('fetching with get user');\r\n        const response = fetch(`${SERWER_PROD}/api/user/login`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                userId: 0,\r\n                name: '',\r\n                surname: '',\r\n                login: login,\r\n                password: pass,\r\n                mail: '',\r\n                admin: false\r\n            })\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                if(data.status === 'ok') {\r\n                    console.log(data.data);\r\n                    return data.data;\r\n                } else {\r\n                    console.log('not good');\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error occurred: ${error}.`));\r\n        return response;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_PROD}.`);\r\n        return {};\r\n    }\r\n};\r\n\r\nconst addUser = (user) => {\r\n    try {\r\n        console.log('fetching with get user');\r\n        const response = fetch(`${SERWER_PROD}/api/user/add`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                userId: 0,\r\n                name: user.name,\r\n                surname: user.surname,\r\n                login: user.login,\r\n                password: user.password,\r\n                mail: user.mail,\r\n                admin: false\r\n            })\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if(data.status === 'ok') {\r\n                    console.log(data.data);\r\n                    return data.data;\r\n                } else {\r\n                    console.log('not good');\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error occurred: ${error}.`));\r\n        return response;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_PROD}.`);\r\n        return true;\r\n    }\r\n};\r\n\r\nconst modifyUser = (user) => {\r\n    try {\r\n        console.log('fetching with get user');\r\n        const response = fetch(`${SERWER_PROD}/api/user/modify`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                userId: user.userId,\r\n                name: user.name,\r\n                surname: user.surname,\r\n                login: user.login,\r\n                password: user.password,\r\n                mail: user.mail,\r\n                admin: false\r\n            })\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if(data.status === 'ok') {\r\n                    console.log(data.data);\r\n                    return data.data;\r\n                } else {\r\n                    console.log('not good');\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error occurred: ${error}.`));\r\n        return response;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_PROD}.`);\r\n        return true;\r\n    }\r\n};\r\n\r\nconst modifyPassword = (user) => {\r\n    try {\r\n        console.log('fetching with get user');\r\n        const response = fetch(`${SERWER_PROD}/api/user/modifypass`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                userId: user.userId,\r\n                name: user.name,\r\n                surname: user.surname,\r\n                login: user.login,\r\n                password: user.password,\r\n                mail: user.mail,\r\n                admin: false\r\n            })\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if(data.status === 'ok') {\r\n                    console.log(data.data);\r\n                    return data.data;\r\n                } else {\r\n                    console.log('not good');\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error occurred: ${error}.`));\r\n        return response;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_PROD}.`);\r\n        return true;\r\n    }\r\n};\r\n\r\nfunction* loadUser (action) {\r\n    try {\r\n        const userParams = yield getUserParams(action.login, action.pass);\r\n        if(userParams == false) {\r\n            yield put({ type: 'GET_USER_WRONG' });\r\n        } else {\r\n            yield put({ type: 'GET_USER_SUCCESS', payload: userParams});\r\n        }\r\n    } catch (e) {\r\n        yield put({type: 'GET_USER_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* addUserFunction(action) {\r\n    try {\r\n        yield addUser(action.user);\r\n        yield put({ type: 'ADD_USER_SUCCESS'});\r\n    } catch (e) {\r\n        yield put({ type: 'ADD_USER_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* modifyUserFunction(action) {\r\n    try {\r\n        yield modifyUser(action.user);\r\n        yield put({ type: 'ADD_USER_SUCCESS'});\r\n    } catch (e) {\r\n        yield put({ type: 'ADD_USER_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* modifyUserPasswordFunction(action) {\r\n    try {\r\n        yield modifyPassword(action.user);\r\n        yield put({ type: 'MODIFY_USER_PASSWORD_SUCCESS'});\r\n    } catch (e) {\r\n        yield put({ type: 'MODIFY_USER_PASSWORD_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* watchGetUser() {\r\n    yield takeLatest('GET_USER', loadUser);\r\n}\r\n\r\nfunction* watchAddUser() {\r\n    yield takeLatest('ADD_USER', addUserFunction);\r\n}\r\n\r\nfunction* watchModifyUser() {\r\n    yield takeLatest('MODIFY_USER', modifyUserFunction);\r\n}\r\n\r\nfunction* watchModifyUserPassword() {\r\n    yield takeLatest('MODIFY_USER_PASSWORD', modifyUserFunction);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield [\r\n        watchGetUser(),\r\n        watchAddUser(),\r\n        watchModifyUser(),\r\n        watchModifyUserPassword()\r\n    ]\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { combineReducers } from 'redux-immutable'\r\nimport customHistory from './history';\r\nimport  createSagaMiddleware from 'redux-saga';\r\n\r\n//Reducers\r\nimport reducerProduct from './reducers/productReducer';\r\nimport reducerShop from './reducers/shopReducer';\r\nimport reducerFavourite from './reducers/favouriteReducers';\r\nimport reducerCategory from './reducers/categoryReducer';\r\nimport reducerUser from './reducers/userReducer';\r\n\r\n//Sagas\r\nimport favouriteSaga from './sagas/favouriteSaga';\r\nimport rootSaga from './sagas/productSaga';\r\nimport shopSaga from './sagas/shopSaga';\r\nimport categorySaga from './sagas/categorySaga';\r\nimport userSaga from './sagas/userSaga';\r\n\r\n// Create history\r\nexport const browserHistory = customHistory;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst favouriteMiddleware = createSagaMiddleware();\r\nconst shopMiddleware = createSagaMiddleware();\r\nconst categoryMiddleware = createSagaMiddleware();\r\nconst userMiddleware = createSagaMiddleware();\r\n\r\nconst configureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({reducerProduct, reducerFavourite, reducerShop, reducerCategory, reducerUser}),\r\n        compose(\r\n            applyMiddleware(sagaMiddleware),\r\n            applyMiddleware(favouriteMiddleware),\r\n            applyMiddleware(shopMiddleware),\r\n            applyMiddleware(categoryMiddleware),\r\n            applyMiddleware(userMiddleware),\r\n            window.devToolsExtension ? window.devToolsExtension() : f => f\r\n        )\r\n    );\r\n    sagaMiddleware.run(rootSaga);\r\n    favouriteMiddleware.run(favouriteSaga);\r\n    shopMiddleware.run(shopSaga);\r\n    categoryMiddleware.run(categorySaga);\r\n    userMiddleware.run(userSaga);\r\n    return store;\r\n};\r\n\r\nexport default configureStore;\r\n","import 'babel-polyfill';\r\nimport 'rxjs/Rx';\r\nimport React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { AppContainer } from 'react-hot-loader';\r\nimport Root from './Root';\r\nimport configureStore, { browserHistory } from './store';\r\n\r\nexport const store = configureStore();\r\n\r\nrender(\r\n        <AppContainer>\r\n            <Root store={store} history={browserHistory} />\r\n        </AppContainer>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}