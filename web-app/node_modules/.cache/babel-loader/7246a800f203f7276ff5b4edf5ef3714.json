{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\repo\\\\inzynierka\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\repo\\\\inzynierka\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\repo\\\\inzynierka\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\repo\\\\inzynierka\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\repo\\\\inzynierka\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\repo\\\\inzynierka\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\repo\\\\inzynierka\\\\web-app\\\\src\\\\components\\\\FavouriteSpace\\\\FavouriteSpace.js\";\nimport React from 'react';\nimport Favourite from './Favourite';\nimport { connect } from 'react-redux';\nimport Fab from '@material-ui/core/Fab';\nimport Zoom from '@material-ui/core/Zoom';\nimport AddIcon from '@material-ui/icons/Add';\nimport FlatButton from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport TextField from '@material-ui/core/TextField';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Slide from '@material-ui/core/Slide';\nimport { addFavourite as _addFavourite } from \"../../reducers/action-creators\";\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n}\n\nvar ProductContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProductContainer, _React$Component);\n\n  function ProductContainer(props) {\n    var _this;\n\n    _classCallCheck(this, ProductContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProductContainer).call(this, props));\n\n    _this.validateDetails = function () {\n      var favourite = {\n        favouriteId: 0,\n        userId: _this.props.userId,\n        name: _this.state.newFavouriteDialog.name\n      };\n      console.log('userid');\n      console.log(favourite.userId);\n\n      _this.props.addFavourite(favourite.favouriteId, favourite.userId, favourite.name);\n    };\n\n    _this.newFavouriteStateChange = function (evt) {\n      var target = evt.target;\n      var name = target.name;\n      var value = target.value;\n\n      var newFavouriteDialog = _objectSpread({}, _this.state.newFavouriteDialog);\n\n      newFavouriteDialog[name] = value;\n\n      _this.setState({\n        newFavouriteDialog: newFavouriteDialog\n      });\n    };\n\n    _this.openNewDialog = function () {\n      _this.setState({\n        newProduct: true\n      });\n    };\n\n    _this.closeNewDialog = function () {\n      _this.setState({\n        newProduct: false\n      });\n    };\n\n    _this.state = {\n      newProduct: false,\n      productDetail: false,\n      newFavouriteDialog: {\n        name: String,\n        userId: props.userId\n      }\n    };\n    return _this;\n  }\n\n  _createClass(ProductContainer, [{\n    key: \"render\",\n    value: function render() {\n      var favouriteList = this.props.favouriteList;\n      return React.createElement(\"div\", {\n        className: 'row',\n        style: {\n          display: 'block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, favouriteList.map(function (favourite) {\n        return React.createElement(Favourite, Object.assign({\n          id: favourite.favouriteId\n        }, favourite, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }));\n      }), React.createElement(Fab, {\n        style: {\n          margin: 0,\n          top: 'auto',\n          right: 20,\n          bottom: 20,\n          left: 'auto',\n          position: 'fixed',\n          color: '#000000',\n          backgroundColor: '#F24F4F'\n        },\n        onClick: this.openNewDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(AddIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(Dialog, {\n        open: this.state.newProduct,\n        TransitionComponent: Transition,\n        keepMounted: true,\n        onClose: this.closeNewDialog,\n        \"aria-labelledby\": \"alert-dialog-slide-title\",\n        \"aria-describedby\": \"alert-dialog-slide-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"alert-dialog-slide-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Dodaj nową grupę ulubionych\"), React.createElement(DialogContent, {\n        style: {\n          display: 'inline',\n          overflowY: 'scroll'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoFocus: true,\n        id: \"new-product-name\",\n        name: \"name\",\n        label: \"Nazwa\",\n        onBlur: this.newFavouriteStateChange,\n        helperText: \"Wpisz nazwe grupy ulubionych\",\n        margin: \"normal\",\n        style: {\n          width: '400px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.validateDetails,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Dodaj\"), React.createElement(Button, {\n        onClick: this.closeNewDialog,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Anuluj\"))));\n    }\n  }]);\n\n  return ProductContainer;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    userId: state.getIn(['reducerUser', 'user', 'userId'])\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addFavourite: function addFavourite(favouriteId, userId, name) {\n      return dispatch(_addFavourite(favouriteId, userId, name));\n    }\n  };\n}\n\nexport var FavouriteSpace = connect(mapStateToProps, mapDispatchToProps)(ProductContainer);","map":{"version":3,"sources":["C:\\Users\\baszak\\pwr\\inz\\repo\\inzynierka\\web-app\\src\\components\\FavouriteSpace\\FavouriteSpace.js"],"names":["React","Favourite","connect","Fab","Zoom","AddIcon","FlatButton","Dialog","DialogActions","DialogContent","DialogContentText","TextField","DialogTitle","Button","Slide","addFavourite","Transition","props","ProductContainer","validateDetails","favourite","favouriteId","userId","name","state","newFavouriteDialog","console","log","newFavouriteStateChange","evt","target","value","setState","openNewDialog","newProduct","closeNewDialog","productDetail","String","favouriteList","display","map","margin","top","right","bottom","left","position","color","backgroundColor","overflowY","width","Component","mapStateToProps","getIn","mapDispatchToProps","dispatch","FavouriteSpace"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Favourite from './Favourite';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FlatButton from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { addFavourite } from \"../../reducers/action-creators\";\r\n\r\nfunction Transition(props) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nclass ProductContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newProduct: false,\r\n            productDetail: false,\r\n            newFavouriteDialog: {\r\n                name: String,\r\n                userId: props.userId\r\n            }\r\n        };\r\n    }\r\n\r\n    validateDetails = () => {\r\n        const favourite = {\r\n            favouriteId: 0,\r\n            userId: this.props.userId,\r\n            name: this.state.newFavouriteDialog.name\r\n        };\r\n        console.log('userid');\r\n        console.log(favourite.userId);\r\n        this.props.addFavourite(favourite.favouriteId, favourite.userId, favourite.name);\r\n    };\r\n\r\n    newFavouriteStateChange = (evt) => {\r\n        const target = evt.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n\r\n        const newFavouriteDialog = {...this.state.newFavouriteDialog};\r\n        newFavouriteDialog[name] = value;\r\n        this.setState({newFavouriteDialog});\r\n    };\r\n\r\n    openNewDialog = () => {\r\n        this.setState({ newProduct: true });\r\n    };\r\n\r\n    closeNewDialog = () => {\r\n        this.setState({ newProduct: false });\r\n    };\r\n\r\n    render() {\r\n        const favouriteList = this.props.favouriteList;\r\n        return (\r\n            <div className={'row'} style={{\r\n                display: 'block'\r\n            }}>\r\n\r\n                {favouriteList.map(favourite => <Favourite id={favourite.favouriteId} {...favourite}/>)}\r\n\r\n                <Fab style={{\r\n                    margin: 0,\r\n                    top: 'auto',\r\n                    right: 20,\r\n                    bottom: 20,\r\n                    left: 'auto',\r\n                    position: 'fixed',\r\n                    color: '#000000',\r\n                    backgroundColor: '#F24F4F'\r\n                }} onClick={this.openNewDialog}>\r\n                    <AddIcon />\r\n                </Fab>\r\n\r\n                <Dialog\r\n                    open={this.state.newProduct}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={this.closeNewDialog}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-slide-title\">\r\n                        {\"Dodaj nową grupę ulubionych\"}\r\n                    </DialogTitle>\r\n                    <DialogContent style={{\r\n                        display: 'inline',\r\n                        overflowY: 'scroll'\r\n                    }}>\r\n                        <form>\r\n                            <TextField\r\n                                autoFocus\r\n                                id=\"new-product-name\"\r\n                                name='name'\r\n                                label=\"Nazwa\"\r\n                                onBlur={this.newFavouriteStateChange}\r\n                                helperText=\"Wpisz nazwe grupy ulubionych\"\r\n                                margin=\"normal\"\r\n                                style={{\r\n                                    width: '400px'\r\n                                }}\r\n                            />\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.validateDetails} color=\"primary\">\r\n                            Dodaj\r\n                        </Button>\r\n                        <Button onClick={this.closeNewDialog} color=\"primary\">\r\n                            Anuluj\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        userId: state.getIn(['reducerUser', 'user', 'userId'])\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        addFavourite: (favouriteId, userId, name) => dispatch(addFavourite(favouriteId, userId, name))\r\n    }\r\n}\r\n\r\nexport const FavouriteSpace = connect(mapStateToProps, mapDispatchToProps)(ProductContainer);\r\n"]},"metadata":{},"sourceType":"module"}