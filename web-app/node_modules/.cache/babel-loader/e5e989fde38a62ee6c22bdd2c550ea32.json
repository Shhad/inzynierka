{"ast":null,"code":"import { Map, List } from 'immutable';\nvar INITIAL_STATE = Map({\n  shopList: List([]),\n  view: Map({\n    isLoading: false,\n    errorLoading: false,\n    errorMessage: ''\n  })\n});\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'GET_SHOPS':\n      return state.merge({\n        view: {\n          isLoading: true,\n          errorLoading: false\n        }\n      });\n\n    case 'GET_SHOPS_SUCCESS':\n      return state.merge({\n        shopList: action.payload,\n        view: {\n          isLoading: false,\n          errorLoading: false,\n          errorMessage: 'Wykonano idealnie.'\n        }\n      });\n\n    case 'GET_SHOPS_FAILURE':\n      return state.merge({\n        view: {\n          isLoading: false,\n          errorLoading: true,\n          errorMessage: 'Wystąpił błąd podczas pobierania sklepów.'\n        }\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\baszak\\projects\\inzynierka\\web-app\\src\\reducers\\shopReducer.js"],"names":["Map","List","INITIAL_STATE","shopList","view","isLoading","errorLoading","errorMessage","state","action","type","merge","payload"],"mappings":"AAAA,SACIA,GADJ,EAEIC,IAFJ,QAGO,WAHP;AAKA,IAAMC,aAAa,GAAGF,GAAG,CAAC;AACtBG,EAAAA,QAAQ,EAAEF,IAAI,CAAC,EAAD,CADQ;AAEtBG,EAAAA,IAAI,EAAEJ,GAAG,CAAC;AACNK,IAAAA,SAAS,EAAE,KADL;AAENC,IAAAA,YAAY,EAAE,KAFR;AAGNC,IAAAA,YAAY,EAAE;AAHR,GAAD;AAFa,CAAD,CAAzB;AASA,eAAe,YAAyC;AAAA,MAA/BC,KAA+B,uEAAvBN,aAAuB;AAAA,MAARO,MAAQ;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,aAAOF,KAAK,CAACG,KAAN,CAAY;AACfP,QAAAA,IAAI,EAAE;AACFC,UAAAA,SAAS,EAAE,IADT;AAEFC,UAAAA,YAAY,EAAE;AAFZ;AADS,OAAZ,CAAP;;AAMJ,SAAK,mBAAL;AACI,aAAOE,KAAK,CAACG,KAAN,CAAY;AACfR,QAAAA,QAAQ,EAAEM,MAAM,CAACG,OADF;AAEfR,QAAAA,IAAI,EAAE;AACFC,UAAAA,SAAS,EAAE,KADT;AAEFC,UAAAA,YAAY,EAAE,KAFZ;AAGFC,UAAAA,YAAY,EAAE;AAHZ;AAFS,OAAZ,CAAP;;AAQJ,SAAK,mBAAL;AACI,aAAOC,KAAK,CAACG,KAAN,CAAY;AACfP,QAAAA,IAAI,EAAE;AACFC,UAAAA,SAAS,EAAE,KADT;AAEFC,UAAAA,YAAY,EAAE,IAFZ;AAGFC,UAAAA,YAAY,EAAE;AAHZ;AADS,OAAZ,CAAP;;AAOJ;AAAS,aAAOC,KAAP;AAzBb;AA2BH","sourcesContent":["import {\r\n    Map,\r\n    List\r\n} from 'immutable';\r\n\r\nconst INITIAL_STATE = Map({\r\n    shopList: List([]),\r\n    view: Map({\r\n        isLoading: false,\r\n        errorLoading: false,\r\n        errorMessage: ''\r\n    })\r\n});\r\n\r\nexport default function (state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'GET_SHOPS':\r\n            return state.merge({\r\n                view: {\r\n                    isLoading: true,\r\n                    errorLoading: false\r\n                }\r\n            });\r\n        case 'GET_SHOPS_SUCCESS':\r\n            return state.merge({\r\n                shopList: action.payload,\r\n                view: {\r\n                    isLoading: false,\r\n                    errorLoading: false,\r\n                    errorMessage: 'Wykonano idealnie.'\r\n                }\r\n            });\r\n        case 'GET_SHOPS_FAILURE':\r\n            return state.merge({\r\n                view: {\r\n                    isLoading: false,\r\n                    errorLoading: true,\r\n                    errorMessage: 'Wystąpił błąd podczas pobierania sklepów.'\r\n                }\r\n            });\r\n        default: return state;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}