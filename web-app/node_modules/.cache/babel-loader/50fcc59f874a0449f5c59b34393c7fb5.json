{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\baszak\\\\projects\\\\inzynierka\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(addProductFunction),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(modifyProductFunction),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadProducts),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadProductsAll),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadFilteredProducts),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchGetProducts),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchGetProductsAll),\n    _marked8 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchGetFilteredProducts),\n    _marked9 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchModifyProduct),\n    _marked10 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchAddProduct),\n    _marked11 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { delay } from 'redux-saga';\nimport { put, select, takeLatest } from 'redux-saga/effects';\nimport { SERWER_PROD } from \"../constants/AppConstants\";\n\nvar getProductsPromotionFromServer = function getProductsPromotionFromServer() {\n  try {\n    console.log('getting promotion products');\n    var response = fetch(\"\".concat(SERWER_PROD, \"/api/product/promotions\"), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.status === 'ok') {\n        console.log(data.data);\n        return data.data;\n      } else {\n        console.log('not good');\n        return false;\n      }\n    }).catch(function (error) {\n      return console.log(\"Error occurred: \".concat(error, \".\"));\n    });\n    return response;\n  } catch (e) {\n    console.log(\"Could not fetch data from \".concat(SERWER_PROD, \".\"));\n    return [];\n  }\n};\n\nvar getProductsFromServer = function getProductsFromServer() {\n  try {\n    console.log('getting promotion products');\n    var response = fetch(\"\".concat(SERWER_PROD, \"/api/product/all\"), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.status === 'ok') {\n        console.log(data.data);\n        return data.data;\n      } else {\n        console.log('not good');\n        return false;\n      }\n    }).catch(function (error) {\n      return console.log(\"Error occurred: \".concat(error, \".\"));\n    });\n    return response;\n  } catch (e) {\n    console.log(\"Could not fetch data from \".concat(SERWER_PROD, \".\"));\n    return [];\n  }\n};\n\nvar getProductsFilterFromServer = function getProductsFilterFromServer(categories, shops, name) {\n  try {\n    console.log('getting filtered products');\n    var response = fetch(\"\".concat(SERWER_PROD, \"/api/product/products/filter\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        categories: categories,\n        shops: shops,\n        name: name\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.status === 'ok') {\n        console.log(data.data);\n        return data.data;\n      } else {\n        console.log('not good');\n        return false;\n      }\n    }).catch(function (error) {\n      return console.log(\"Error occurred: \".concat(error, \".\"));\n    });\n    return response;\n  } catch (e) {\n    console.log(\"Could not fetch data from \".concat(SERWER_PROD, \".\"));\n    return [];\n  }\n};\n\nvar modifyProduct = function modifyProduct(product) {\n  try {\n    console.log('fetching with modify product');\n    var response = fetch(\"\".concat(SERWER_PROD, \"/api/product/modify\"), {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        productId: product.productId,\n        categoryId: product.categoryId,\n        shopId: product.shopId,\n        name: product.name,\n        description: product.description,\n        price: product.price,\n        currency: product.currency,\n        link: product.link\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.status === 'ok') {\n        console.log(data.data);\n        return data.data;\n      } else {\n        console.log('not good');\n        return false;\n      }\n    }).catch(function (error) {\n      return console.log(\"Error occurred: \".concat(error, \".\"));\n    });\n    return response;\n  } catch (e) {\n    console.log(\"Could not fetch data from \".concat(SERWER_PROD, \".\"));\n  }\n};\n\nvar addProduct = function addProduct(product) {\n  try {\n    console.log('fetching with add product');\n    var response = fetch(\"\".concat(SERWER_PROD, \"/api/product/add\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        productId: product.productId,\n        categoryId: product.categoryId,\n        shopId: product.shopId,\n        name: product.name,\n        description: product.description,\n        price: product.price,\n        currency: product.currency,\n        link: product.link\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.status === 'ok') {\n        console.log(data.data);\n        return data.data;\n      } else {\n        console.log('not good');\n        return false;\n      }\n    }).catch(function (error) {\n      return console.log(\"Error occurred: \".concat(error, \".\"));\n    });\n    return response;\n  } catch (e) {\n    console.log(\"Could not fetch data from \".concat(SERWER_PROD, \".\"));\n  }\n};\n\nfunction addProductFunction(action) {\n  return _regeneratorRuntime.wrap(function addProductFunction$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return addProduct(action.product);\n\n        case 3:\n          _context.next = 5;\n          return put({\n            type: 'GET_PRODUCTS_ALL'\n          });\n\n        case 5:\n          _context.next = 11;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 11;\n          return put({\n            type: 'ADD_PRODUCT_FAILURE',\n            payload: _context.t0\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 7]]);\n}\n\nfunction modifyProductFunction(action) {\n  return _regeneratorRuntime.wrap(function modifyProductFunction$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return modifyProduct(action.product);\n\n        case 3:\n          _context2.next = 5;\n          return put({\n            type: 'GET_PRODUCTS_ALL'\n          });\n\n        case 5:\n          _context2.next = 11;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 11;\n          return put({\n            type: 'MODIFY_PRODUCT_FAILURE',\n            payload: _context2.t0\n          });\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this, [[0, 7]]);\n}\n\nfunction loadProducts() {\n  var productList;\n  return _regeneratorRuntime.wrap(function loadProducts$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context3.next = 5;\n          return getProductsPromotionFromServer();\n\n        case 5:\n          productList = _context3.sent;\n          console.log(productList);\n          _context3.next = 9;\n          return put({\n            type: 'GET_PRODUCTS_SUCCESS',\n            payload: productList\n          });\n\n        case 9:\n          _context3.next = 15;\n          break;\n\n        case 11:\n          _context3.prev = 11;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 15;\n          return put({\n            type: 'GET_PRODUCTS_FAILURE',\n            payload: _context3.t0\n          });\n\n        case 15:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, this, [[0, 11]]);\n}\n\nfunction loadProductsAll() {\n  var productList;\n  return _regeneratorRuntime.wrap(function loadProductsAll$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context4.next = 5;\n          return getProductsFromServer();\n\n        case 5:\n          productList = _context4.sent;\n          console.log(productList);\n          _context4.next = 9;\n          return put({\n            type: 'GET_PRODUCTS_SUCCESS',\n            payload: productList\n          });\n\n        case 9:\n          _context4.next = 15;\n          break;\n\n        case 11:\n          _context4.prev = 11;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 15;\n          return put({\n            type: 'GET_PRODUCTS_FAILURE',\n            payload: _context4.t0\n          });\n\n        case 15:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, this, [[0, 11]]);\n}\n\nfunction loadFilteredProducts(action) {\n  var productList;\n  return _regeneratorRuntime.wrap(function loadFilteredProducts$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context5.next = 5;\n          return getProductsFilterFromServer(action.categories, action.shops, action.name);\n\n        case 5:\n          productList = _context5.sent;\n          _context5.next = 8;\n          return put({\n            type: 'GET_PRODUCTS_SUCCESS',\n            payload: productList\n          });\n\n        case 8:\n          _context5.next = 14;\n          break;\n\n        case 10:\n          _context5.prev = 10;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 14;\n          return put({\n            type: 'GET_PRODUCTS_FAILURE',\n            payload: _context5.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, this, [[0, 10]]);\n}\n\nfunction watchGetProducts() {\n  return _regeneratorRuntime.wrap(function watchGetProducts$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest('GET_PRODUCTS', loadProducts);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, this);\n}\n\nfunction watchGetProductsAll() {\n  return _regeneratorRuntime.wrap(function watchGetProductsAll$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeLatest('GET_PRODUCTS_ALL', loadProductsAll);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, this);\n}\n\nfunction watchGetFilteredProducts() {\n  return _regeneratorRuntime.wrap(function watchGetFilteredProducts$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest('GET_FILTERED_PRODUCTS', loadFilteredProducts);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, this);\n}\n\nfunction watchModifyProduct() {\n  return _regeneratorRuntime.wrap(function watchModifyProduct$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeLatest('MODIFY_PRODUCT', modifyProductFunction);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, this);\n}\n\nfunction watchAddProduct() {\n  return _regeneratorRuntime.wrap(function watchAddProduct$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest('ADD_PRODUCT', addProductFunction);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10, this);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return [watchGetProductsAll(), watchGetProducts(), watchGetFilteredProducts(), watchModifyProduct(), watchAddProduct()];\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, this);\n}","map":{"version":3,"sources":["C:\\Users\\baszak\\projects\\inzynierka\\web-app\\src\\sagas\\productSaga.js"],"names":["addProductFunction","modifyProductFunction","loadProducts","loadProductsAll","loadFilteredProducts","watchGetProducts","watchGetProductsAll","watchGetFilteredProducts","watchModifyProduct","watchAddProduct","rootSaga","delay","put","select","takeLatest","SERWER_PROD","getProductsPromotionFromServer","console","log","response","fetch","method","headers","then","json","data","status","catch","error","e","getProductsFromServer","getProductsFilterFromServer","categories","shops","name","body","JSON","stringify","modifyProduct","product","productId","categoryId","shopId","description","price","currency","link","addProduct","action","type","payload","productList"],"mappings":"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","sourcesContent":["import {\r\n    delay\r\n} from 'redux-saga';\r\n\r\nimport {\r\n    put,\r\n    select,\r\n    takeLatest\r\n} from 'redux-saga/effects';\r\nimport { SERWER_PROD } from \"../constants/AppConstants\";\r\n\r\nconst getProductsPromotionFromServer = () => {\r\n    try {\r\n        console.log('getting promotion products');\r\n        const response = fetch(`${SERWER_PROD}/api/product/promotions`,{\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if(data.status === 'ok') {\r\n                    console.log(data.data);\r\n                    return data.data;\r\n                } else {\r\n                    console.log('not good');\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error occurred: ${error}.`));\r\n        return response;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_PROD}.`);\r\n\r\n        return [];\r\n    }\r\n};\r\n\r\nconst getProductsFromServer = () => {\r\n    try {\r\n        console.log('getting promotion products');\r\n        const response = fetch(`${SERWER_PROD}/api/product/all`,{\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if(data.status === 'ok') {\r\n                    console.log(data.data);\r\n                    return data.data;\r\n                } else {\r\n                    console.log('not good');\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error occurred: ${error}.`));\r\n        return response;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_PROD}.`);\r\n\r\n        return [];\r\n    }\r\n};\r\n\r\nconst getProductsFilterFromServer = (categories, shops, name) => {\r\n    try {\r\n        console.log('getting filtered products');\r\n        const response = fetch(`${SERWER_PROD}/api/product/products/filter`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                categories: categories,\r\n                shops: shops,\r\n                name: name\r\n            })\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if(data.status === 'ok') {\r\n                    console.log(data.data);\r\n                    return data.data;\r\n                } else {\r\n                    console.log('not good');\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error occurred: ${error}.`));\r\n        return response;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_PROD}.`);\r\n\r\n        return [];\r\n    }\r\n};\r\n\r\nconst modifyProduct = (product) => {\r\n    try {\r\n        console.log('fetching with modify product');\r\n        const response = fetch(`${SERWER_PROD}/api/product/modify`,{\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                productId: product.productId,\r\n                categoryId: product.categoryId,\r\n                shopId: product.shopId,\r\n                name: product.name,\r\n                description: product.description,\r\n                price: product.price,\r\n                currency: product.currency,\r\n                link: product.link\r\n            })\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if(data.status === 'ok') {\r\n                    console.log(data.data);\r\n                    return data.data;\r\n                } else {\r\n                    console.log('not good');\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error occurred: ${error}.`));\r\n        return response;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_PROD}.`);\r\n    }\r\n};\r\n\r\nconst addProduct = (product) => {\r\n    try {\r\n        console.log('fetching with add product');\r\n        const response = fetch(`${SERWER_PROD}/api/product/add`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                productId: product.productId,\r\n                categoryId: product.categoryId,\r\n                shopId: product.shopId,\r\n                name: product.name,\r\n                description: product.description,\r\n                price: product.price,\r\n                currency: product.currency,\r\n                link: product.link\r\n            })\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if(data.status === 'ok') {\r\n                    console.log(data.data);\r\n                    return data.data;\r\n                } else {\r\n                    console.log('not good');\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error occurred: ${error}.`));\r\n        return response;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_PROD}.`)\r\n    }\r\n};\r\n\r\nfunction* addProductFunction (action) {\r\n    try {\r\n        yield addProduct(action.product);\r\n        yield put({ type: 'GET_PRODUCTS_ALL'});\r\n    } catch (e) {\r\n        yield put({ type: 'ADD_PRODUCT_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* modifyProductFunction (action) {\r\n    try {\r\n        yield modifyProduct(action.product);\r\n        yield put({ type: 'GET_PRODUCTS_ALL'});\r\n    } catch (e) {\r\n        yield put({ type: 'MODIFY_PRODUCT_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* loadProducts () {\r\n    try {\r\n        yield delay(1000);\r\n        const productList = yield getProductsPromotionFromServer();\r\n        console.log(productList);\r\n        yield put({ type: 'GET_PRODUCTS_SUCCESS', payload: productList});\r\n    } catch (e) {\r\n        yield put({ type: 'GET_PRODUCTS_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* loadProductsAll () {\r\n    try {\r\n        yield delay(1000);\r\n        const productList = yield getProductsFromServer();\r\n        console.log(productList);\r\n        yield put({ type: 'GET_PRODUCTS_SUCCESS', payload: productList});\r\n    } catch (e) {\r\n        yield put({ type: 'GET_PRODUCTS_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* loadFilteredProducts(action) {\r\n    try {\r\n        yield delay(1000);\r\n        const productList = yield getProductsFilterFromServer(action.categories, action.shops, action.name);\r\n        yield put({ type: 'GET_PRODUCTS_SUCCESS', payload: productList});\r\n    } catch (e) {\r\n        yield put({ type: 'GET_PRODUCTS_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* watchGetProducts() {\r\n    yield takeLatest('GET_PRODUCTS', loadProducts);\r\n}\r\n\r\nfunction* watchGetProductsAll() {\r\n    yield takeLatest('GET_PRODUCTS_ALL', loadProductsAll);\r\n}\r\n\r\nfunction* watchGetFilteredProducts() {\r\n    yield takeLatest('GET_FILTERED_PRODUCTS', loadFilteredProducts);\r\n}\r\n\r\nfunction* watchModifyProduct() {\r\n    yield takeLatest('MODIFY_PRODUCT', modifyProductFunction);\r\n}\r\n\r\nfunction* watchAddProduct() {\r\n    yield takeLatest('ADD_PRODUCT', addProductFunction);\r\n}\r\nexport default function* rootSaga() {\r\n    yield [\r\n        watchGetProductsAll(),\r\n        watchGetProducts(),\r\n        watchGetFilteredProducts(),\r\n        watchModifyProduct(),\r\n        watchAddProduct()\r\n    ]\r\n}\r\n"]},"metadata":{},"sourceType":"module"}