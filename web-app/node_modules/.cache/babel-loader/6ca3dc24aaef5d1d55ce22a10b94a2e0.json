{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\repo\\\\inzynierka\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(addFavouriteFunction),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(addProductToFavouriteFunction),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(deleteProductFromFavouriteFunction),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadFavourites),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchGetFavourites),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchAddFavourite),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchAddFavouriteProduct),\n    _marked8 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchDeleteFavouriteProduct),\n    _marked9 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(favouriteSaga);\n\nimport { delay } from 'redux-saga';\nimport { put, takeLatest } from 'redux-saga/effects';\nimport { SERWER_LOCAL } from \"../constants/AppConstants\";\n\nvar getUserFavourites = function getUserFavourites(userid) {\n  try {\n    console.log('getting favourite user');\n    var response = fetch(\"\".concat(SERWER_LOCAL, \"/api/favourite/favourites/\").concat(userid), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.status === 'ok') {\n        console.log(data.data);\n        return data.data;\n      } else {\n        console.log('not good');\n        return false;\n      }\n    }).catch(function (error) {\n      return console.log(\"Error occurred: \".concat(error, \".\"));\n    });\n    return response;\n  } catch (e) {\n    console.log(\"Could not fetch data from \".concat(SERWER_LOCAL, \".\"));\n    var data = [{\n      favouriteid: 1,\n      userid: 1,\n      name: 'moja grupa ulubiona1'\n    }, {\n      favouriteid: 1,\n      userid: 1,\n      name: 'moj ulubione jogurty'\n    }];\n    return data;\n  }\n};\n\nvar getUserFavouritesProducts = function getUserFavouritesProducts(userid) {\n  try {\n    console.log('getting favourite user');\n    var response = fetch(\"\".concat(SERWER_LOCAL, \"/api/favourite/\").concat(userid), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.status === 'ok') {\n        return data.data;\n      } else {\n        console.log(\"Something went wrong\");\n        return false;\n      }\n    }).catch(function (error) {\n      console.log(\"Error occurred: \".concat(error, \".\"));\n      return false;\n    });\n\n    for (fav in response) {}\n\n    var favouriteDetail = JSON.parse(response.body);\n    var response2 = fetch(\"\".concat(SERWER_LOCAL, \"/api/product/products/favourite/\").concat(pro), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log(response2);\n    console.log(response2.body);\n    return JSON.parse(response.body); // /products/favourite/{favouriteid}\n  } catch (e) {\n    console.log(\"Could not fetch data from \".concat(SERWER_LOCAL, \".\"));\n    var data = [{\n      favouriteid: 1,\n      userid: 1,\n      name: 'moja grupa ulubiona1',\n      products: [{\n        productid: 3,\n        categoryid: 1,\n        shopid: 1,\n        name: 'Chleb żytni',\n        description: 'Chleb żytni z nutką ziarenek żytnihc. O smaku żytnim.',\n        price: 4.35,\n        currency: 'PLN',\n        link: 'http://cdn.przepisy100.pl/v/pl/7/7e770033f9e5bf87371dd35037e80e3a.jpg',\n        url: 'http://cdn.przepisy100.pl/v/pl/7/7e770033f9e5bf87371dd35037e80e3a.jpg'\n      }, {\n        productid: 5,\n        categoryid: 1,\n        shopid: 1,\n        name: 'Chleb',\n        description: 'Chleb taki bardzo smaczny, lekko pszenny lekko nie pszenny.',\n        price: 2.37,\n        currency: 'PLN',\n        link: 'https://cdn3.tmbi.com/toh/GoogleImagesPostCard/exps32480_MRR153791D09_18_6b.jpg',\n        url: 'https://cdn3.tmbi.com/toh/GoogleImagesPostCard/exps32480_MRR153791D09_18_6b.jpg'\n      }]\n    }, {\n      favouriteid: 1,\n      userid: 1,\n      name: 'moj ulubione jogurty',\n      products: [{\n        productid: 10,\n        categoryid: 2,\n        shopid: 'Biedronka',\n        name: 'Jogurt malinowy Jogobella, 500ml',\n        description: 'Bardzo suchy chleb dla konia. Idealny dla konia',\n        price: 2.69,\n        currency: 'PLN',\n        link: 'http://konie.t8.pl/media/images/suchy_chleb.jpg',\n        url: 'http://promyczek-lowicz.pl/userdata/gfx/a55af9ed63e5eba977a8f64550754cc0.jpg'\n      }, {\n        productid: 7,\n        categoryid: 1,\n        shopid: 'Biedronka',\n        name: 'Jogurt truskawkowy Jogobella, 500ml',\n        description: 'Chleb żytni z nutką ziarenek żytnihc. O smaku żytnim.',\n        price: 2.69,\n        currency: 'PLN',\n        link: 'http://cdn.przepisy100.pl/v/pl/7/7e770033f9e5bf87371dd35037e80e3a.jpg',\n        url: 'https://img.e-piotripawel.pl/4014500021560.jpg'\n      }]\n    }];\n    return data;\n  }\n};\n\nvar addFavouriteProduct = function addFavouriteProduct(favouriteid, productid) {\n  try {\n    console.log('adding favourite product');\n    var response = fetch(\"\".concat(SERWER_LOCAL, \"/api/favourite/add2\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: {\n        favouriteid: favouriteid,\n        productid: productid\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.status === 'ok') {\n        console.log(data.data);\n        return data.data;\n      } else {\n        console.log('not good');\n        return false;\n      }\n    }).catch(function (error) {\n      return console.log(\"Error occurred: \".concat(error, \".\"));\n    });\n    return response;\n  } catch (e) {\n    console.log(\"Could not fetch data from \".concat(SERWER_LOCAL, \".\"));\n    return true;\n  }\n};\n\nvar addFavourite = function addFavourite(favouriteid, userid, name) {\n  try {\n    console.log('getting filtered products');\n    var response = fetch(\"\".concat(SERWER_LOCAL, \"/api/favourite/add\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: {\n        favouriteId: favouriteid,\n        userId: userid,\n        name: name\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.status === 'ok') {\n        console.log(data.data);\n        return data.data;\n      } else {\n        console.log('not good');\n        return false;\n      }\n    }).catch(function (error) {\n      return console.log(\"Error occurred: \".concat(error, \".\"));\n    });\n    return response;\n  } catch (e) {\n    console.log(\"Could not fetch data from \".concat(SERWER_LOCAL, \".\"));\n    return true;\n  }\n};\n\nvar deleteProductFromFavourite = function deleteProductFromFavourite(favourite, product) {\n  try {\n    console.log('getting filtered products');\n    var response = fetch(\"\".concat(SERWER_LOCAL, \"/api/favourite/delete/\").concat(favourite, \"/\").concat(product), {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.status === 'ok') {\n        console.log(data.data);\n        return data.data;\n      } else {\n        console.log('not good');\n        return false;\n      }\n    }).catch(function (error) {\n      return console.log(\"Error occurred: \".concat(error, \".\"));\n    });\n    return response;\n  } catch (e) {\n    console.log(\"Could not fetch data from \".concat(SERWER_LOCAL, \".\"));\n    return true;\n  }\n};\n\nfunction addFavouriteFunction(action) {\n  return _regeneratorRuntime.wrap(function addFavouriteFunction$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return addFavourite(action.favourite);\n\n        case 3:\n          _context.next = 5;\n          return put({\n            type: 'GET_FAVOURITES'\n          });\n\n        case 5:\n          _context.next = 11;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 11;\n          return put({\n            type: 'ADD_FAVOURITE_FAILURE',\n            payload: _context.t0\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 7]]);\n}\n\nfunction addProductToFavouriteFunction(action) {\n  return _regeneratorRuntime.wrap(function addProductToFavouriteFunction$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return addFavouriteProduct(action.favouriteid, action.productid);\n\n        case 3:\n          _context2.next = 5;\n          return put({\n            type: 'GET_FAVOURITES'\n          });\n\n        case 5:\n          _context2.next = 11;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 11;\n          return put({\n            type: 'ADD_TO_FAVOURITE_FAILURE',\n            payload: _context2.t0\n          });\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this, [[0, 7]]);\n}\n\nfunction deleteProductFromFavouriteFunction(action) {\n  return _regeneratorRuntime.wrap(function deleteProductFromFavouriteFunction$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return deleteProductFromFavourite(action.favouriteid, action.productid);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            type: 'GET_FAVOURITES'\n          });\n\n        case 5:\n          _context3.next = 11;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 11;\n          return put({\n            type: 'DELETE_FROM_FAVOURITE_FAILURE',\n            payload: _context3.t0\n          });\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, this, [[0, 7]]);\n}\n\nfunction loadFavourites(action) {\n  var favouriteList;\n  return _regeneratorRuntime.wrap(function loadFavourites$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context4.next = 5;\n          return getUserFavouritesProducts(action.userid);\n\n        case 5:\n          favouriteList = _context4.sent;\n          _context4.next = 8;\n          return put({\n            type: 'GET_FAVOURITES_SUCCESS',\n            payload: favouriteList\n          });\n\n        case 8:\n          _context4.next = 14;\n          break;\n\n        case 10:\n          _context4.prev = 10;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 14;\n          return put({\n            type: 'GET_FAVOURITES_FAILURE',\n            payload: _context4.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, this, [[0, 10]]);\n}\n\nfunction watchGetFavourites() {\n  return _regeneratorRuntime.wrap(function watchGetFavourites$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeLatest('GET_FAVOURITES', loadFavourites);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, this);\n}\n\nfunction watchAddFavourite() {\n  return _regeneratorRuntime.wrap(function watchAddFavourite$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest('ADD_FAVOURITE', addFavouriteFunction);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, this);\n}\n\nfunction watchAddFavouriteProduct() {\n  return _regeneratorRuntime.wrap(function watchAddFavouriteProduct$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeLatest('ADD_FAVOURITE_PRODUCT', addProductToFavouriteFunction);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, this);\n}\n\nfunction watchDeleteFavouriteProduct() {\n  return _regeneratorRuntime.wrap(function watchDeleteFavouriteProduct$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest('DELETE_FAVOURITE_PRODUCT', deleteProductFromFavouriteFunction);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, this);\n}\n\nexport default function favouriteSaga() {\n  return _regeneratorRuntime.wrap(function favouriteSaga$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return [watchGetFavourites(), watchAddFavourite(), watchAddFavouriteProduct(), watchDeleteFavouriteProduct()];\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, this);\n}","map":{"version":3,"sources":["C:\\Users\\baszak\\pwr\\inz\\repo\\inzynierka\\web-app\\src\\sagas\\favouriteSaga.js"],"names":["addFavouriteFunction","addProductToFavouriteFunction","deleteProductFromFavouriteFunction","loadFavourites","watchGetFavourites","watchAddFavourite","watchAddFavouriteProduct","watchDeleteFavouriteProduct","favouriteSaga","delay","put","takeLatest","SERWER_LOCAL","getUserFavourites","userid","console","log","response","fetch","method","headers","then","json","data","status","catch","error","e","favouriteid","name","getUserFavouritesProducts","fav","favouriteDetail","JSON","parse","body","response2","pro","products","productid","categoryid","shopid","description","price","currency","link","url","addFavouriteProduct","addFavourite","favouriteId","userId","deleteProductFromFavourite","favourite","product","action","type","payload","favouriteList"],"mappings":";;;;yBAoPUA,oB;;;yBASAC,6B;;;yBASAC,kC;;;yBASAC,c;;;yBAUAC,kB;;;yBAIAC,iB;;;yBAIAC,wB;;;yBAIAC,2B;;;yBAIeC,a;;AAzSzB,SACIC,KADJ,QAEO,YAFP;AAIA,SACIC,GADJ,EAEIC,UAFJ,QAGO,oBAHP;AAIA,SAAQC,YAAR,QAA2B,2BAA3B;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,MAAD,EAAY;AAClC,MAAI;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,QAAMC,QAAQ,GAAGC,KAAK,WAAIN,YAAJ,uCAA6CE,MAA7C,GAAsD;AACxEK,MAAAA,MAAM,EAAE,KADgE;AAExEC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX;AAF+D,KAAtD,CAAL,CAMdC,IANc,CAMT,UAAAJ,QAAQ;AAAA,aAAIA,QAAQ,CAACK,IAAT,EAAJ;AAAA,KANC,EAOZD,IAPY,CAOP,UAAAE,IAAI,EAAI;AACV,UAAGA,IAAI,CAACC,MAAL,KAAgB,IAAnB,EAAyB;AACrBT,QAAAA,OAAO,CAACC,GAAR,CAAYO,IAAI,CAACA,IAAjB;AACA,eAAOA,IAAI,CAACA,IAAZ;AACH,OAHD,MAGO;AACHR,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,eAAO,KAAP;AACH;AACJ,KAfY,EAgBZS,KAhBY,CAgBN,UAAAC,KAAK;AAAA,aAAIX,OAAO,CAACC,GAAR,2BAA+BU,KAA/B,OAAJ;AAAA,KAhBC,CAAjB;AAiBA,WAAOT,QAAP;AACH,GApBD,CAoBE,OAAMU,CAAN,EAAS;AACPZ,IAAAA,OAAO,CAACC,GAAR,qCAAyCJ,YAAzC;AACA,QAAMW,IAAI,GAAG,CACT;AACIK,MAAAA,WAAW,EAAE,CADjB;AAEId,MAAAA,MAAM,EAAE,CAFZ;AAGIe,MAAAA,IAAI,EAAE;AAHV,KADS,EAMT;AACID,MAAAA,WAAW,EAAE,CADjB;AAEId,MAAAA,MAAM,EAAE,CAFZ;AAGIe,MAAAA,IAAI,EAAE;AAHV,KANS,CAAb;AAYA,WAAON,IAAP;AACH;AACJ,CArCD;;AAuCA,IAAMO,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAChB,MAAD,EAAY;AAC1C,MAAI;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,QAAMC,QAAQ,GAAGC,KAAK,WAAIN,YAAJ,4BAAkCE,MAAlC,GAA2C;AAC7DK,MAAAA,MAAM,EAAE,KADqD;AAE7DC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX;AAFoD,KAA3C,CAAL,CAMdC,IANc,CAMT,UAAAJ,QAAQ;AAAA,aAAIA,QAAQ,CAACK,IAAT,EAAJ;AAAA,KANC,EAOZD,IAPY,CAOP,UAAAE,IAAI,EAAI;AACV,UAAGA,IAAI,CAACC,MAAL,KAAgB,IAAnB,EAAyB;AACrB,eAAOD,IAAI,CAACA,IAAZ;AACH,OAFD,MAEO;AACHR,QAAAA,OAAO,CAACC,GAAR;AACA,eAAO,KAAP;AACH;AACJ,KAdY,EAeZS,KAfY,CAeN,UAAAC,KAAK,EAAI;AACZX,MAAAA,OAAO,CAACC,GAAR,2BAA+BU,KAA/B;AACA,aAAO,KAAP;AACH,KAlBY,CAAjB;;AAoBA,SAAIK,GAAJ,IAAWd,QAAX,EAAqB,CAEpB;;AAED,QAAMe,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAWjB,QAAQ,CAACkB,IAApB,CAAxB;AACA,QAAMC,SAAS,GAAGlB,KAAK,WAAIN,YAAJ,6CAAmDyB,GAAnD,GAAyD;AAC5ElB,MAAAA,MAAM,EAAE,KADoE;AAE5EC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX;AAFmE,KAAzD,CAAvB;AAOAL,IAAAA,OAAO,CAACC,GAAR,CAAYoB,SAAZ;AACArB,IAAAA,OAAO,CAACC,GAAR,CAAYoB,SAAS,CAACD,IAAtB;AACA,WAAOF,IAAI,CAACC,KAAL,CAAWjB,QAAQ,CAACkB,IAApB,CAAP,CApCA,CAqCA;AACH,GAtCD,CAsCE,OAAMR,CAAN,EAAS;AACPZ,IAAAA,OAAO,CAACC,GAAR,qCAAyCJ,YAAzC;AACA,QAAMW,IAAI,GAAG,CACT;AACIK,MAAAA,WAAW,EAAE,CADjB;AAEId,MAAAA,MAAM,EAAE,CAFZ;AAGIe,MAAAA,IAAI,EAAE,sBAHV;AAIIS,MAAAA,QAAQ,EAAE,CACN;AACIC,QAAAA,SAAS,EAAE,CADf;AAEIC,QAAAA,UAAU,EAAE,CAFhB;AAGIC,QAAAA,MAAM,EAAE,CAHZ;AAIIZ,QAAAA,IAAI,EAAE,aAJV;AAKIa,QAAAA,WAAW,EAAE,uDALjB;AAMIC,QAAAA,KAAK,EAAE,IANX;AAOIC,QAAAA,QAAQ,EAAE,KAPd;AAQIC,QAAAA,IAAI,EAAE,uEARV;AASIC,QAAAA,GAAG,EAAE;AATT,OADM,EAYN;AACIP,QAAAA,SAAS,EAAE,CADf;AAEIC,QAAAA,UAAU,EAAE,CAFhB;AAGIC,QAAAA,MAAM,EAAE,CAHZ;AAIIZ,QAAAA,IAAI,EAAE,OAJV;AAKIa,QAAAA,WAAW,EAAE,6DALjB;AAMIC,QAAAA,KAAK,EAAE,IANX;AAOIC,QAAAA,QAAQ,EAAE,KAPd;AAQIC,QAAAA,IAAI,EAAE,iFARV;AASIC,QAAAA,GAAG,EAAE;AATT,OAZM;AAJd,KADS,EA8BT;AACIlB,MAAAA,WAAW,EAAE,CADjB;AAEId,MAAAA,MAAM,EAAE,CAFZ;AAGIe,MAAAA,IAAI,EAAE,sBAHV;AAIIS,MAAAA,QAAQ,EAAE,CACN;AACIC,QAAAA,SAAS,EAAE,EADf;AAEIC,QAAAA,UAAU,EAAE,CAFhB;AAGIC,QAAAA,MAAM,EAAE,WAHZ;AAIIZ,QAAAA,IAAI,EAAE,kCAJV;AAKIa,QAAAA,WAAW,EAAE,iDALjB;AAMIC,QAAAA,KAAK,EAAE,IANX;AAOIC,QAAAA,QAAQ,EAAE,KAPd;AAQIC,QAAAA,IAAI,EAAE,iDARV;AASIC,QAAAA,GAAG,EAAE;AATT,OADM,EAYN;AACIP,QAAAA,SAAS,EAAE,CADf;AAEIC,QAAAA,UAAU,EAAE,CAFhB;AAGIC,QAAAA,MAAM,EAAE,WAHZ;AAIIZ,QAAAA,IAAI,EAAE,qCAJV;AAKIa,QAAAA,WAAW,EAAE,uDALjB;AAMIC,QAAAA,KAAK,EAAE,IANX;AAOIC,QAAAA,QAAQ,EAAE,KAPd;AAQIC,QAAAA,IAAI,EAAE,uEARV;AASIC,QAAAA,GAAG,EAAE;AATT,OAZM;AAJd,KA9BS,CAAb;AA4DA,WAAOvB,IAAP;AACH;AACJ,CAvGD;;AAyGA,IAAMwB,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACnB,WAAD,EAAcW,SAAd,EAA4B;AACpD,MAAI;AACAxB,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,QAAMC,QAAQ,GAAGC,KAAK,WAAIN,YAAJ,0BAAsC;AACxDO,MAAAA,MAAM,EAAE,MADgD;AAExDC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX,OAF+C;AAMxDe,MAAAA,IAAI,EAAE;AACFP,QAAAA,WAAW,EAAEA,WADX;AAEFW,QAAAA,SAAS,EAAEA;AAFT;AANkD,KAAtC,CAAL,CAUdlB,IAVc,CAUT,UAAAJ,QAAQ;AAAA,aAAIA,QAAQ,CAACK,IAAT,EAAJ;AAAA,KAVC,EAWZD,IAXY,CAWP,UAAAE,IAAI,EAAI;AACV,UAAGA,IAAI,CAACC,MAAL,KAAgB,IAAnB,EAAyB;AACrBT,QAAAA,OAAO,CAACC,GAAR,CAAYO,IAAI,CAACA,IAAjB;AACA,eAAOA,IAAI,CAACA,IAAZ;AACH,OAHD,MAGO;AACHR,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,eAAO,KAAP;AACH;AACJ,KAnBY,EAoBZS,KApBY,CAoBN,UAAAC,KAAK;AAAA,aAAIX,OAAO,CAACC,GAAR,2BAA+BU,KAA/B,OAAJ;AAAA,KApBC,CAAjB;AAqBA,WAAOT,QAAP;AACH,GAxBD,CAwBE,OAAMU,CAAN,EAAS;AACPZ,IAAAA,OAAO,CAACC,GAAR,qCAAyCJ,YAAzC;AACA,WAAO,IAAP;AACH;AACJ,CA7BD;;AA+BA,IAAMoC,YAAY,GAAG,SAAfA,YAAe,CAACpB,WAAD,EAAcd,MAAd,EAAsBe,IAAtB,EAA+B;AAChD,MAAI;AACAd,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,QAAMC,QAAQ,GAAGC,KAAK,WAAIN,YAAJ,yBAAqC;AACvDO,MAAAA,MAAM,EAAE,MAD+C;AAEvDC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX,OAF8C;AAMvDe,MAAAA,IAAI,EAAE;AACFc,QAAAA,WAAW,EAAErB,WADX;AAEFsB,QAAAA,MAAM,EAAEpC,MAFN;AAGFe,QAAAA,IAAI,EAAEA;AAHJ;AANiD,KAArC,CAAL,CAWdR,IAXc,CAWT,UAAAJ,QAAQ;AAAA,aAAIA,QAAQ,CAACK,IAAT,EAAJ;AAAA,KAXC,EAYZD,IAZY,CAYP,UAAAE,IAAI,EAAI;AACV,UAAGA,IAAI,CAACC,MAAL,KAAgB,IAAnB,EAAyB;AACrBT,QAAAA,OAAO,CAACC,GAAR,CAAYO,IAAI,CAACA,IAAjB;AACA,eAAOA,IAAI,CAACA,IAAZ;AACH,OAHD,MAGO;AACHR,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,eAAO,KAAP;AACH;AACJ,KApBY,EAqBZS,KArBY,CAqBN,UAAAC,KAAK;AAAA,aAAIX,OAAO,CAACC,GAAR,2BAA+BU,KAA/B,OAAJ;AAAA,KArBC,CAAjB;AAsBA,WAAOT,QAAP;AACH,GAzBD,CAyBE,OAAMU,CAAN,EAAS;AACPZ,IAAAA,OAAO,CAACC,GAAR,qCAAyCJ,YAAzC;AACA,WAAO,IAAP;AACH;AACJ,CA9BD;;AAgCA,IAAMuC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACC,SAAD,EAAYC,OAAZ,EAAwB;AACvD,MAAI;AACAtC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,QAAMC,QAAQ,GAAGC,KAAK,WAAIN,YAAJ,mCAAyCwC,SAAzC,cAAsDC,OAAtD,GAAgE;AAClFlC,MAAAA,MAAM,EAAE,QAD0E;AAElFC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX;AAFyE,KAAhE,CAAL,CAMdC,IANc,CAMT,UAAAJ,QAAQ;AAAA,aAAIA,QAAQ,CAACK,IAAT,EAAJ;AAAA,KANC,EAOZD,IAPY,CAOP,UAAAE,IAAI,EAAI;AACV,UAAGA,IAAI,CAACC,MAAL,KAAgB,IAAnB,EAAyB;AACrBT,QAAAA,OAAO,CAACC,GAAR,CAAYO,IAAI,CAACA,IAAjB;AACA,eAAOA,IAAI,CAACA,IAAZ;AACH,OAHD,MAGO;AACHR,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,eAAO,KAAP;AACH;AACJ,KAfY,EAgBZS,KAhBY,CAgBN,UAAAC,KAAK;AAAA,aAAIX,OAAO,CAACC,GAAR,2BAA+BU,KAA/B,OAAJ;AAAA,KAhBC,CAAjB;AAiBA,WAAOT,QAAP;AACH,GApBD,CAoBE,OAAMU,CAAN,EAAS;AACPZ,IAAAA,OAAO,CAACC,GAAR,qCAAyCJ,YAAzC;AACA,WAAO,IAAP;AACH;AACJ,CAzBD;;AA2BA,SAAUZ,oBAAV,CAAgCsD,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMN,YAAY,CAACM,MAAM,CAACF,SAAR,CAAlB;;AAFR;AAAA;AAGQ,iBAAM1C,GAAG,CAAC;AAAE6C,YAAAA,IAAI,EAAE;AAAR,WAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKQ,iBAAM7C,GAAG,CAAC;AAAE6C,YAAAA,IAAI,EAAE,uBAAR;AAAiCC,YAAAA,OAAO;AAAxC,WAAD,CAAT;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAAUvD,6BAAV,CAAyCqD,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMP,mBAAmB,CAACO,MAAM,CAAC1B,WAAR,EAAqB0B,MAAM,CAACf,SAA5B,CAAzB;;AAFR;AAAA;AAGQ,iBAAM7B,GAAG,CAAC;AAAE6C,YAAAA,IAAI,EAAE;AAAR,WAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKQ,iBAAM7C,GAAG,CAAC;AAAE6C,YAAAA,IAAI,EAAE,0BAAR;AAAoCC,YAAAA,OAAO;AAA3C,WAAD,CAAT;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAAUtD,kCAAV,CAA8CoD,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMH,0BAA0B,CAACG,MAAM,CAAC1B,WAAR,EAAqB0B,MAAM,CAACf,SAA5B,CAAhC;;AAFR;AAAA;AAGQ,iBAAM7B,GAAG,CAAC;AAAE6C,YAAAA,IAAI,EAAE;AAAR,WAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKQ,iBAAM7C,GAAG,CAAC;AAAE6C,YAAAA,IAAI,EAAE,+BAAR;AAAyCC,YAAAA,OAAO;AAAhD,WAAD,CAAT;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAAUrD,cAAV,CAA0BmD,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAM7C,KAAK,CAAC,IAAD,CAAX;;AAFR;AAAA;AAG8B,iBAAMqB,yBAAyB,CAACwB,MAAM,CAACxC,MAAR,CAA/B;;AAH9B;AAGc2C,UAAAA,aAHd;AAAA;AAIQ,iBAAM/C,GAAG,CAAC;AAAE6C,YAAAA,IAAI,EAAE,wBAAR;AAAkCC,YAAAA,OAAO,EAAEC;AAA3C,WAAD,CAAT;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMQ,iBAAM/C,GAAG,CAAC;AAAC6C,YAAAA,IAAI,EAAE,wBAAP;AAAiCC,YAAAA,OAAO;AAAxC,WAAD,CAAT;;AANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SAAUpD,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMO,UAAU,CAAC,gBAAD,EAAmBR,cAAnB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUE,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMM,UAAU,CAAC,eAAD,EAAkBX,oBAAlB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUM,wBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMK,UAAU,CAAC,uBAAD,EAA0BV,6BAA1B,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUM,2BAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMI,UAAU,CAAC,0BAAD,EAA6BT,kCAA7B,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUM,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAM,CACFJ,kBAAkB,EADhB,EAEFC,iBAAiB,EAFf,EAGFC,wBAAwB,EAHtB,EAIFC,2BAA2B,EAJzB,CAAN;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {\r\n    delay\r\n} from 'redux-saga';\r\n\r\nimport {\r\n    put,\r\n    takeLatest\r\n} from 'redux-saga/effects';\r\nimport {SERWER_LOCAL} from \"../constants/AppConstants\";\r\n\r\nconst getUserFavourites = (userid) => {\r\n    try {\r\n        console.log('getting favourite user');\r\n        const response = fetch(`${SERWER_LOCAL}/api/favourite/favourites/${userid}`,{\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if(data.status === 'ok') {\r\n                    console.log(data.data);\r\n                    return data.data;\r\n                } else {\r\n                    console.log('not good');\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error occurred: ${error}.`));\r\n        return response;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_LOCAL}.`);\r\n        const data = [\r\n            {\r\n                favouriteid: 1,\r\n                userid: 1,\r\n                name: 'moja grupa ulubiona1'\r\n            },\r\n            {\r\n                favouriteid: 1,\r\n                userid: 1,\r\n                name: 'moj ulubione jogurty'\r\n            }\r\n        ];\r\n        return data;\r\n    }\r\n};\r\n\r\nconst getUserFavouritesProducts = (userid) => {\r\n    try {\r\n        console.log('getting favourite user');\r\n        const response = fetch(`${SERWER_LOCAL}/api/favourite/${userid}`,{\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if(data.status === 'ok') {\r\n                    return data.data;\r\n                } else {\r\n                    console.log(`Something went wrong`);\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(`Error occurred: ${error}.`);\r\n                return false;\r\n            });\r\n\r\n        for(fav in response) {\r\n            \r\n        }\r\n\r\n        const favouriteDetail = JSON.parse(response.body);\r\n        const response2 = fetch(`${SERWER_LOCAL}/api/product/products/favourite/${pro}`,{\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        console.log(response2);\r\n        console.log(response2.body);\r\n        return JSON.parse(response.body);\r\n        // /products/favourite/{favouriteid}\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_LOCAL}.`);\r\n        const data = [\r\n            {\r\n                favouriteid: 1,\r\n                userid: 1,\r\n                name: 'moja grupa ulubiona1',\r\n                products: [\r\n                    {\r\n                        productid: 3,\r\n                        categoryid: 1,\r\n                        shopid: 1,\r\n                        name: 'Chleb żytni',\r\n                        description: 'Chleb żytni z nutką ziarenek żytnihc. O smaku żytnim.',\r\n                        price: 4.35,\r\n                        currency: 'PLN',\r\n                        link: 'http://cdn.przepisy100.pl/v/pl/7/7e770033f9e5bf87371dd35037e80e3a.jpg',\r\n                        url: 'http://cdn.przepisy100.pl/v/pl/7/7e770033f9e5bf87371dd35037e80e3a.jpg'\r\n                    },\r\n                    {\r\n                        productid: 5,\r\n                        categoryid: 1,\r\n                        shopid: 1,\r\n                        name: 'Chleb',\r\n                        description: 'Chleb taki bardzo smaczny, lekko pszenny lekko nie pszenny.',\r\n                        price: 2.37,\r\n                        currency: 'PLN',\r\n                        link: 'https://cdn3.tmbi.com/toh/GoogleImagesPostCard/exps32480_MRR153791D09_18_6b.jpg',\r\n                        url: 'https://cdn3.tmbi.com/toh/GoogleImagesPostCard/exps32480_MRR153791D09_18_6b.jpg'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                favouriteid: 1,\r\n                userid: 1,\r\n                name: 'moj ulubione jogurty',\r\n                products: [\r\n                    {\r\n                        productid: 10,\r\n                        categoryid: 2,\r\n                        shopid: 'Biedronka',\r\n                        name: 'Jogurt malinowy Jogobella, 500ml',\r\n                        description: 'Bardzo suchy chleb dla konia. Idealny dla konia',\r\n                        price: 2.69,\r\n                        currency: 'PLN',\r\n                        link: 'http://konie.t8.pl/media/images/suchy_chleb.jpg',\r\n                        url: 'http://promyczek-lowicz.pl/userdata/gfx/a55af9ed63e5eba977a8f64550754cc0.jpg'\r\n                    },\r\n                    {\r\n                        productid: 7,\r\n                        categoryid: 1,\r\n                        shopid: 'Biedronka',\r\n                        name: 'Jogurt truskawkowy Jogobella, 500ml',\r\n                        description: 'Chleb żytni z nutką ziarenek żytnihc. O smaku żytnim.',\r\n                        price: 2.69,\r\n                        currency: 'PLN',\r\n                        link: 'http://cdn.przepisy100.pl/v/pl/7/7e770033f9e5bf87371dd35037e80e3a.jpg',\r\n                        url: 'https://img.e-piotripawel.pl/4014500021560.jpg'\r\n                    }\r\n                ]\r\n            }\r\n        ];\r\n        return data;\r\n    }\r\n};\r\n\r\nconst addFavouriteProduct = (favouriteid, productid) => {\r\n    try {\r\n        console.log('adding favourite product');\r\n        const response = fetch(`${SERWER_LOCAL}/api/favourite/add2`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: {\r\n                favouriteid: favouriteid,\r\n                productid: productid\r\n            }\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if(data.status === 'ok') {\r\n                    console.log(data.data);\r\n                    return data.data;\r\n                } else {\r\n                    console.log('not good');\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error occurred: ${error}.`));\r\n        return response;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_LOCAL}.`);\r\n        return true;\r\n    }\r\n};\r\n\r\nconst addFavourite = (favouriteid, userid, name) => {\r\n    try {\r\n        console.log('getting filtered products');\r\n        const response = fetch(`${SERWER_LOCAL}/api/favourite/add`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: {\r\n                favouriteId: favouriteid,\r\n                userId: userid,\r\n                name: name\r\n            }\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if(data.status === 'ok') {\r\n                    console.log(data.data);\r\n                    return data.data;\r\n                } else {\r\n                    console.log('not good');\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error occurred: ${error}.`));\r\n        return response;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_LOCAL}.`);\r\n        return true;\r\n    }\r\n};\r\n\r\nconst deleteProductFromFavourite = (favourite, product) => {\r\n    try {\r\n        console.log('getting filtered products');\r\n        const response = fetch(`${SERWER_LOCAL}/api/favourite/delete/${favourite}/${product}`,{\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if(data.status === 'ok') {\r\n                    console.log(data.data);\r\n                    return data.data;\r\n                } else {\r\n                    console.log('not good');\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error occurred: ${error}.`));\r\n        return response;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_LOCAL}.`);\r\n        return true;\r\n    }\r\n};\r\n\r\nfunction* addFavouriteFunction (action) {\r\n    try {\r\n        yield addFavourite(action.favourite);\r\n        yield put({ type: 'GET_FAVOURITES'});\r\n    } catch (e) {\r\n        yield put({ type: 'ADD_FAVOURITE_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* addProductToFavouriteFunction (action) {\r\n    try {\r\n        yield addFavouriteProduct(action.favouriteid, action.productid);\r\n        yield put({ type: 'GET_FAVOURITES'});\r\n    } catch (e) {\r\n        yield put({ type: 'ADD_TO_FAVOURITE_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* deleteProductFromFavouriteFunction (action) {\r\n    try {\r\n        yield deleteProductFromFavourite(action.favouriteid, action.productid);\r\n        yield put({ type: 'GET_FAVOURITES'});\r\n    } catch (e) {\r\n        yield put({ type: 'DELETE_FROM_FAVOURITE_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* loadFavourites (action) {\r\n    try {\r\n        yield delay(1000);\r\n        const favouriteList = yield getUserFavouritesProducts(action.userid);\r\n        yield put({ type: 'GET_FAVOURITES_SUCCESS', payload: favouriteList});\r\n    } catch (e) {\r\n        yield put({type: 'GET_FAVOURITES_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* watchGetFavourites() {\r\n    yield takeLatest('GET_FAVOURITES', loadFavourites);\r\n}\r\n\r\nfunction* watchAddFavourite() {\r\n    yield takeLatest('ADD_FAVOURITE', addFavouriteFunction);\r\n}\r\n\r\nfunction* watchAddFavouriteProduct() {\r\n    yield takeLatest('ADD_FAVOURITE_PRODUCT', addProductToFavouriteFunction);\r\n}\r\n\r\nfunction* watchDeleteFavouriteProduct() {\r\n    yield takeLatest('DELETE_FAVOURITE_PRODUCT', deleteProductFromFavouriteFunction);\r\n}\r\n\r\nexport default function* favouriteSaga() {\r\n    yield [\r\n        watchGetFavourites(),\r\n        watchAddFavourite(),\r\n        watchAddFavouriteProduct(),\r\n        watchDeleteFavouriteProduct()\r\n    ]\r\n}\r\n"]},"metadata":{},"sourceType":"module"}