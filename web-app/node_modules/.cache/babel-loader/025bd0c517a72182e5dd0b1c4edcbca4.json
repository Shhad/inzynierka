{"ast":null,"code":"import { Map, List } from 'immutable';\nvar INITIAL_STATE = Map({\n  favouriteList: List([Map({\n    favouriteid: Number,\n    userid: Number,\n    name: String,\n    products: List([])\n  })]),\n  view: Map({\n    isLoading: false,\n    errorLoading: false,\n    errorMessage: String\n  })\n});\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'GET_FAVOURITES':\n      return state.merge({\n        view: {\n          isLoading: true,\n          errorLoading: false\n        }\n      });\n\n    case 'GET_FAVOURITES_SUCCESS':\n      return state.merge({\n        favouriteList: action.payload,\n        view: {\n          isLoading: false,\n          errorLoading: false,\n          errorMessage: 'Wykonano idealnie.'\n        }\n      });\n\n    case 'GET_FAVOURITES_FAILURE':\n      return state.merge({\n        view: {\n          isLoading: false,\n          errorLoading: true,\n          errorMessage: 'Wystąpił błąd podczas pobierania ulubionych.'\n        }\n      });\n\n    case 'ADD_FAVOURITE_SUCCESS':\n      return state.merge({\n        view: {\n          errorLoading: false,\n          errorMessage: ''\n        }\n      });\n\n    case 'ADD_FAVOURITE_FAILURE':\n      return state.merge({\n        view: {\n          errorLoading: true,\n          errorMessage: 'Wystąpił błąd podczas dodawania nowych ulubionych.'\n        }\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\baszak\\pwr\\inz\\web-app\\web-app\\src\\reducers\\favouriteReducers.js"],"names":["Map","List","INITIAL_STATE","favouriteList","favouriteid","Number","userid","name","String","products","view","isLoading","errorLoading","errorMessage","state","action","type","merge","payload"],"mappings":"AAAA,SACIA,GADJ,EAEIC,IAFJ,QAGO,WAHP;AAKA,IAAMC,aAAa,GAAGF,GAAG,CAAC;AACtBG,EAAAA,aAAa,EAAEF,IAAI,CAAC,CAChBD,GAAG,CAAC;AACAI,IAAAA,WAAW,EAAEC,MADb;AAEAC,IAAAA,MAAM,EAAED,MAFR;AAGAE,IAAAA,IAAI,EAAEC,MAHN;AAIAC,IAAAA,QAAQ,EAAER,IAAI,CAAC,EAAD;AAJd,GAAD,CADa,CAAD,CADG;AAStBS,EAAAA,IAAI,EAAEV,GAAG,CAAC;AACNW,IAAAA,SAAS,EAAE,KADL;AAENC,IAAAA,YAAY,EAAE,KAFR;AAGNC,IAAAA,YAAY,EAAEL;AAHR,GAAD;AATa,CAAD,CAAzB;AAgBA,eAAe,YAAyC;AAAA,MAA/BM,KAA+B,uEAAvBZ,aAAuB;AAAA,MAARa,MAAQ;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,gBAAL;AACI,aAAOF,KAAK,CAACG,KAAN,CAAY;AACfP,QAAAA,IAAI,EAAE;AACFC,UAAAA,SAAS,EAAE,IADT;AAEFC,UAAAA,YAAY,EAAE;AAFZ;AADS,OAAZ,CAAP;;AAMJ,SAAK,wBAAL;AACI,aAAOE,KAAK,CAACG,KAAN,CAAY;AACfd,QAAAA,aAAa,EAAEY,MAAM,CAACG,OADP;AAEfR,QAAAA,IAAI,EAAE;AACFC,UAAAA,SAAS,EAAE,KADT;AAEFC,UAAAA,YAAY,EAAE,KAFZ;AAGFC,UAAAA,YAAY,EAAE;AAHZ;AAFS,OAAZ,CAAP;;AAQJ,SAAK,wBAAL;AACI,aAAOC,KAAK,CAACG,KAAN,CAAY;AACfP,QAAAA,IAAI,EAAE;AACFC,UAAAA,SAAS,EAAE,KADT;AAEFC,UAAAA,YAAY,EAAE,IAFZ;AAGFC,UAAAA,YAAY,EAAE;AAHZ;AADS,OAAZ,CAAP;;AAOJ,SAAK,uBAAL;AACI,aAAOC,KAAK,CAACG,KAAN,CAAY;AACfP,QAAAA,IAAI,EAAE;AACFE,UAAAA,YAAY,EAAE,KADZ;AAEFC,UAAAA,YAAY,EAAE;AAFZ;AADS,OAAZ,CAAP;;AAMJ,SAAK,uBAAL;AACI,aAAOC,KAAK,CAACG,KAAN,CAAY;AACfP,QAAAA,IAAI,EAAE;AACFE,UAAAA,YAAY,EAAE,IADZ;AAEFC,UAAAA,YAAY,EAAE;AAFZ;AADS,OAAZ,CAAP;;AAMJ;AAAS,aAAOC,KAAP;AAvCb;AAyCH","sourcesContent":["import {\r\n    Map,\r\n    List\r\n} from 'immutable';\r\n\r\nconst INITIAL_STATE = Map({\r\n    favouriteList: List([\r\n        Map({\r\n            favouriteid: Number,\r\n            userid: Number,\r\n            name: String,\r\n            products: List([])\r\n        })\r\n    ]),\r\n    view: Map({\r\n        isLoading: false,\r\n        errorLoading: false,\r\n        errorMessage: String\r\n    })\r\n});\r\n\r\nexport default function (state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'GET_FAVOURITES':\r\n            return state.merge({\r\n                view: {\r\n                    isLoading: true,\r\n                    errorLoading: false\r\n                }\r\n            });\r\n        case 'GET_FAVOURITES_SUCCESS':\r\n            return state.merge({\r\n                favouriteList: action.payload,\r\n                view: {\r\n                    isLoading: false,\r\n                    errorLoading: false,\r\n                    errorMessage: 'Wykonano idealnie.'\r\n                }\r\n            });\r\n        case 'GET_FAVOURITES_FAILURE':\r\n            return state.merge({\r\n                view: {\r\n                    isLoading: false,\r\n                    errorLoading: true,\r\n                    errorMessage: 'Wystąpił błąd podczas pobierania ulubionych.'\r\n                }\r\n            });\r\n        case 'ADD_FAVOURITE_SUCCESS':\r\n            return state.merge({\r\n                view: {\r\n                    errorLoading: false,\r\n                    errorMessage: ''\r\n                }\r\n            });\r\n        case 'ADD_FAVOURITE_FAILURE':\r\n            return state.merge({\r\n                view: {\r\n                    errorLoading: true,\r\n                    errorMessage: 'Wystąpił błąd podczas dodawania nowych ulubionych.'\r\n                }\r\n            });\r\n        default: return state;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}