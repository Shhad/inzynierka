{"ast":null,"code":"import { Map, List } from 'immutable';\nvar FAVOURITE_STATE = Map({\n  categoryList: List([]),\n  view: Map({\n    isLoading: false,\n    errorLoading: false,\n    errorMessage: String\n  })\n});\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : FAVOURITE_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'GET_CATEGORIES':\n      return state.merge({\n        view: {\n          isLoading: true,\n          errorLoading: false\n        }\n      });\n\n    case 'GET_CATEGORIES_SUCCESS':\n      return state.merge({\n        categoryList: action.payload,\n        view: {\n          isLoading: false,\n          errorLoading: false,\n          errorMessage: 'Wykonano idealnie.'\n        }\n      });\n\n    case 'GET_CATEGORIES_FAILURE':\n      return state.merge({\n        view: {\n          isLoading: false,\n          errorLoading: true,\n          errorMessage: 'Wystąpił błąd podczas pobierania kategorii.'\n        }\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\baszak\\pwr\\inz\\repo\\inzynierka\\web-app\\src\\reducers\\categoryReducer.js"],"names":["Map","List","FAVOURITE_STATE","categoryList","view","isLoading","errorLoading","errorMessage","String","state","action","type","merge","payload"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,QAA0B,WAA1B;AAEA,IAAMC,eAAe,GAAGF,GAAG,CAAC;AACxBG,EAAAA,YAAY,EAAEF,IAAI,CAAC,EAAD,CADM;AAExBG,EAAAA,IAAI,EAAEJ,GAAG,CAAC;AACNK,IAAAA,SAAS,EAAE,KADL;AAENC,IAAAA,YAAY,EAAE,KAFR;AAGNC,IAAAA,YAAY,EAAEC;AAHR,GAAD;AAFe,CAAD,CAA3B;AASA,eAAe,YAA2C;AAAA,MAAjCC,KAAiC,uEAAzBP,eAAyB;AAAA,MAARQ,MAAQ;;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,gBAAL;AACI,aAAOF,KAAK,CAACG,KAAN,CAAY;AACfR,QAAAA,IAAI,EAAE;AACFC,UAAAA,SAAS,EAAE,IADT;AAEFC,UAAAA,YAAY,EAAE;AAFZ;AADS,OAAZ,CAAP;;AAMJ,SAAK,wBAAL;AACI,aAAOG,KAAK,CAACG,KAAN,CAAY;AACfT,QAAAA,YAAY,EAAEO,MAAM,CAACG,OADN;AAEfT,QAAAA,IAAI,EAAE;AACFC,UAAAA,SAAS,EAAE,KADT;AAEFC,UAAAA,YAAY,EAAE,KAFZ;AAGFC,UAAAA,YAAY,EAAE;AAHZ;AAFS,OAAZ,CAAP;;AAQJ,SAAK,wBAAL;AACI,aAAOE,KAAK,CAACG,KAAN,CAAY;AACfR,QAAAA,IAAI,EAAE;AACFC,UAAAA,SAAS,EAAE,KADT;AAEFC,UAAAA,YAAY,EAAE,IAFZ;AAGFC,UAAAA,YAAY,EAAE;AAHZ;AADS,OAAZ,CAAP;;AAOJ;AAAS,aAAOE,KAAP;AAzBb;AA2BH","sourcesContent":["import { Map, List } from 'immutable';\r\n\r\nconst FAVOURITE_STATE = Map({\r\n    categoryList: List([]),\r\n    view: Map({\r\n        isLoading: false,\r\n        errorLoading: false,\r\n        errorMessage: String\r\n    })\r\n});\r\n\r\nexport default function (state = FAVOURITE_STATE, action) {\r\n    switch (action.type) {\r\n        case 'GET_CATEGORIES':\r\n            return state.merge({\r\n                view: {\r\n                    isLoading: true,\r\n                    errorLoading: false\r\n                }\r\n            });\r\n        case 'GET_CATEGORIES_SUCCESS':\r\n            return state.merge({\r\n                categoryList: action.payload,\r\n                view: {\r\n                    isLoading: false,\r\n                    errorLoading: false,\r\n                    errorMessage: 'Wykonano idealnie.'\r\n                }\r\n            });\r\n        case 'GET_CATEGORIES_FAILURE':\r\n            return state.merge({\r\n                view: {\r\n                    isLoading: false,\r\n                    errorLoading: true,\r\n                    errorMessage: 'Wystąpił błąd podczas pobierania kategorii.'\r\n                }\r\n            });\r\n        default: return state;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}