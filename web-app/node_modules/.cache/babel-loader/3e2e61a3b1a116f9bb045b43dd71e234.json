{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport customHistory from './history';\nimport { routerMiddleware } from 'react-router-redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createEpicMiddleware } from 'redux-observable';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './reducers/sagas';\nimport reducer from './reducers/productReducer'; // Create history\n\nexport var browserHistory = customHistory;\nvar reduxRouterMiddleware = routerMiddleware(browserHistory);\nvar epicMiddleware = createEpicMiddleware();\nvar middlewares = [thunkMiddleware, reduxRouterMiddleware, epicMiddleware];\nvar sagaMiddleware = createSagaMiddleware();\n\nvar configureStore = function configureStore(initialState) {\n  var store = createStore(reducer, compose(applyMiddleware(sagaMiddleware), window.devToolsExtension ? window.devToolsExtension() : function (f) {\n    return f;\n  }));\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nepicMiddleware.run(rootEpic);\nexport default configureStore;","map":{"version":3,"sources":["C:\\Users\\baszak\\pwr\\inz\\web-app\\web-app\\src\\store.js"],"names":["createStore","applyMiddleware","compose","customHistory","routerMiddleware","thunkMiddleware","createEpicMiddleware","createSagaMiddleware","rootSaga","reducer","browserHistory","reduxRouterMiddleware","epicMiddleware","middlewares","sagaMiddleware","configureStore","initialState","store","window","devToolsExtension","f","run","rootEpic"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,aAAP,MAA0B,WAA1B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,OAAQC,oBAAR,MAAkC,YAAlC;AAEA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAEA;;AACA,OAAO,IAAMC,cAAc,GAAGP,aAAvB;AACP,IAAMQ,qBAAqB,GAAGP,gBAAgB,CAACM,cAAD,CAA9C;AAEA,IAAME,cAAc,GAAGN,oBAAoB,EAA3C;AAEA,IAAMO,WAAW,GAAG,CAChBR,eADgB,EAEhBM,qBAFgB,EAGhBC,cAHgB,CAApB;AAMA,IAAME,cAAc,GAAGP,oBAAoB,EAA3C;;AAEA,IAAMQ,cAAc,GAAG,SAAjBA,cAAiB,CAACC,YAAD,EAAkB;AACrC,MAAMC,KAAK,GAAGjB,WAAW,CACrBS,OADqB,EAErBP,OAAO,CACHD,eAAe,CAACa,cAAD,CADZ,EAEHI,MAAM,CAACC,iBAAP,GAA2BD,MAAM,CAACC,iBAAP,EAA3B,GAAwD,UAAAC,CAAC;AAAA,WAAIA,CAAJ;AAAA,GAFtD,CAFc,CAAzB;AAOAN,EAAAA,cAAc,CAACO,GAAf,CAAmBb,QAAnB;AACA,SAAOS,KAAP;AACH,CAVD;;AAYAL,cAAc,CAACS,GAAf,CAAmBC,QAAnB;AAEA,eAAeP,cAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\r\nimport customHistory from './history';\r\nimport { routerMiddleware } from 'react-router-redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createEpicMiddleware } from 'redux-observable';\r\nimport  createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootSaga from './reducers/sagas';\r\nimport reducer from './reducers/productReducer';\r\n\r\n// Create history\r\nexport const browserHistory = customHistory;\r\nconst reduxRouterMiddleware = routerMiddleware(browserHistory);\r\n\r\nconst epicMiddleware = createEpicMiddleware();\r\n\r\nconst middlewares = [\r\n    thunkMiddleware,\r\n    reduxRouterMiddleware,\r\n    epicMiddleware\r\n];\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst configureStore = (initialState) => {\r\n    const store = createStore(\r\n        reducer,\r\n        compose(\r\n            applyMiddleware(sagaMiddleware),\r\n            window.devToolsExtension ? window.devToolsExtension() : f => f\r\n        )\r\n    );\r\n    sagaMiddleware.run(rootSaga);\r\n    return store;\r\n};\r\n\r\nepicMiddleware.run(rootEpic);\r\n\r\nexport default configureStore;\r\n"]},"metadata":{},"sourceType":"module"}