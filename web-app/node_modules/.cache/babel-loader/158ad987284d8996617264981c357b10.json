{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\web-app\\\\web-app\\\\src\\\\components\\\\ProductsSpace\\\\NewProductDialog.js\",\n    _this = this;\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { List } from 'immutable'; //Material-UI components\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Tabs, Tab } from '@material-ui/core/Tabs';\nimport Slide from '@material-ui/core/Slide';\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }));\n}\n\nvar NewProductDialog = function NewProductDialog(_ref) {\n  var open = _ref.open,\n      title = _ref.title,\n      actions = _ref.actions;\n  return React.createElement(Dialog, {\n    open: _this.state.open,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: _this.handleClose,\n    \"aria-labelledby\": \"alert-dialog-slide-title\",\n    \"aria-describedby\": \"alert-dialog-slide-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"alert-dialog-slide-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Use Google's location service?\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    id: \"alert-dialog-slide-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\")), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: _this.handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Disagree\"), React.createElement(Button, {\n    onClick: _this.handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Agree\")));\n};\n\nNewProductDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  title: PropTypes.string,\n  actions: PropTypes.arrayOf(PropTypes.shape({})).isRequired\n};\nNewProductDialog.defaultProps = {\n  title: ''\n};\nexport default NewProductDialog;","map":{"version":3,"sources":["C:\\Users\\baszak\\pwr\\inz\\web-app\\web-app\\src\\components\\ProductsSpace\\NewProductDialog.js"],"names":["PropTypes","React","List","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Tabs","Tab","Slide","Transition","props","NewProductDialog","open","title","actions","state","handleClose","propTypes","bool","isRequired","string","arrayOf","shape","defaultProps"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,WAArB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,wBAA1B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,SAAO,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC;AAAjB,KAA0BA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH;;AAED,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,KAAT,QAASA,KAAT;AAAA,MAAgBC,OAAhB,QAAgBA,OAAhB;AAAA,SACrB,oBAAC,MAAD;AACI,IAAA,IAAI,EAAE,KAAI,CAACC,KAAL,CAAWH,IADrB;AAEI,IAAA,mBAAmB,EAAEH,UAFzB;AAGI,IAAA,WAAW,MAHf;AAII,IAAA,OAAO,EAAE,KAAI,CAACO,WAJlB;AAKI,uBAAgB,0BALpB;AAMI,wBAAiB,gCANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQI,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,0BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,gCADL,CARJ,EAWI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,iBAAD;AAAmB,IAAA,EAAE,EAAC,gCAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qIADJ,CAXJ,EAiBI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,KAAI,CAACA,WAAtB;AAAmC,IAAA,KAAK,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAII,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,KAAI,CAACA,WAAtB;AAAmC,IAAA,KAAK,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,CAjBJ,CADqB;AAAA,CAAzB;;AA6BAL,gBAAgB,CAACM,SAAjB,GAA6B;AACzBL,EAAAA,IAAI,EAAEd,SAAS,CAACoB,IAAV,CAAeC,UADI;AAEzBN,EAAAA,KAAK,EAAEf,SAAS,CAACsB,MAFQ;AAGzBN,EAAAA,OAAO,EAAEhB,SAAS,CAACuB,OAAV,CACLvB,SAAS,CAACwB,KAAV,CAAgB,EAAhB,CADK,EAEPH;AALuB,CAA7B;AAQAR,gBAAgB,CAACY,YAAjB,GAAgC;AAC5BV,EAAAA,KAAK,EAAE;AADqB,CAAhC;AAIA,eAAeF,gBAAf","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { List } from 'immutable';\r\n\r\n//Material-UI components\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Tabs, Tab } from '@material-ui/core/Tabs';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nfunction Transition(props) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nconst NewProductDialog = ({ open, title, actions }) => (\r\n    <Dialog\r\n        open={this.state.open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={this.handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n    >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n            {\"Use Google's location service?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-slide-description\">\r\n                Let Google help apps determine location. This means sending anonymous location data to\r\n                Google, even when no apps are running.\r\n            </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n                Disagree\r\n            </Button>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n                Agree\r\n            </Button>\r\n        </DialogActions>\r\n    </Dialog>\r\n);\r\n\r\nNewProductDialog.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    title: PropTypes.string,\r\n    actions: PropTypes.arrayOf(\r\n        PropTypes.shape({})\r\n    ).isRequired\r\n};\r\n\r\nNewProductDialog.defaultProps = {\r\n    title: ''\r\n};\r\n\r\nexport default NewProductDialog;\r\n"]},"metadata":{},"sourceType":"module"}