{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\web-app\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadProducts),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchGetProducts),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { delay } from 'redux-saga';\nimport { put, select, takeLatest } from 'redux-saga/effects';\n\nvar getProductsPromotionFromServer = function getProductsPromotionFromServer() {\n  var data = [{\n    productid: 1,\n    categoryid: 1,\n    shopid: 1,\n    name: 'chleb',\n    description: 'taki sobie chleb xDDD',\n    price: 21.37,\n    currency: 'szekle',\n    link: 'www.pornhub.com',\n    url: 'https://cdn3.tmbi.com/toh/GoogleImagesPostCard/exps32480_MRR153791D09_18_6b.jpg'\n  }, {\n    productid: 2,\n    categoryid: 2,\n    shopid: 2,\n    name: 'mleko',\n    description: 'takie sobie mleko',\n    price: 21.37,\n    currency: 'pomarancze',\n    link: 'www.pornhub.com',\n    url: 'https://cdn3.tmbi.com/toh/GoogleImagesPostCard/exps32480_MRR153791D09_18_6b.jpg'\n  }];\n  console.log(data.json());\n  return data.json();\n};\n\nfunction loadProducts() {\n  var productList;\n  return _regeneratorRuntime.wrap(function loadProducts$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context.next = 5;\n          return getProductsPromotionFromServer();\n\n        case 5:\n          productList = _context.sent;\n          _context.next = 8;\n          return put({\n            type: 'GET_PRODUCTS_SUCCESS',\n            payload: productList\n          });\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 14;\n          return put({\n            type: 'GET_PRODUCTS_FAILURE',\n            payload: _context.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 10]]);\n}\n\nfunction watchGetProducts() {\n  return _regeneratorRuntime.wrap(function watchGetProducts$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest('GET_PRODUCTS', loadProducts);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return [watchGetProducts()];\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, this);\n}","map":{"version":3,"sources":["C:\\Users\\baszak\\pwr\\inz\\web-app\\web-app\\src\\reducers\\sagas.js"],"names":["loadProducts","watchGetProducts","rootSaga","delay","put","select","takeLatest","getProductsPromotionFromServer","data","productid","categoryid","shopid","name","description","price","currency","link","url","console","log","json","productList","type","payload"],"mappings":";;;;yBAuCUA,Y;;;yBAUAC,gB;;;yBAIeC,Q;;AArDzB,SACIC,KADJ,QAEO,YAFP;AAIA,SACIC,GADJ,EAEIC,MAFJ,EAGIC,UAHJ,QAIO,oBAJP;;AAMA,IAAMC,8BAA8B,GAAG,SAAjCA,8BAAiC,GAAM;AACzC,MAAMC,IAAI,GAAG,CACb;AACIC,IAAAA,SAAS,EAAE,CADf;AAEQC,IAAAA,UAAU,EAAE,CAFpB;AAGIC,IAAAA,MAAM,EAAE,CAHZ;AAIIC,IAAAA,IAAI,EAAE,OAJV;AAKIC,IAAAA,WAAW,EAAE,uBALjB;AAMIC,IAAAA,KAAK,EAAE,KANX;AAOIC,IAAAA,QAAQ,EAAE,QAPd;AAQIC,IAAAA,IAAI,EAAE,iBARV;AASIC,IAAAA,GAAG,EAAE;AATT,GADa,EAYb;AACIR,IAAAA,SAAS,EAAE,CADf;AAEQC,IAAAA,UAAU,EAAE,CAFpB;AAGIC,IAAAA,MAAM,EAAE,CAHZ;AAIIC,IAAAA,IAAI,EAAE,OAJV;AAKIC,IAAAA,WAAW,EAAE,mBALjB;AAMIC,IAAAA,KAAK,EAAE,KANX;AAOIC,IAAAA,QAAQ,EAAE,YAPd;AAQIC,IAAAA,IAAI,EAAE,iBARV;AASIC,IAAAA,GAAG,EAAE;AATT,GAZa,CAAb;AAwBAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,IAAI,CAACY,IAAL,EAAZ;AACA,SAAOZ,IAAI,CAACY,IAAL,EAAP;AACH,CA3BD;;AA6BA,SAAUpB,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMG,KAAK,CAAC,IAAD,CAAX;;AAFR;AAAA;AAG4B,iBAAMI,8BAA8B,EAApC;;AAH5B;AAGcc,UAAAA,WAHd;AAAA;AAIQ,iBAAMjB,GAAG,CAAC;AAAEkB,YAAAA,IAAI,EAAE,sBAAR;AAAgCC,YAAAA,OAAO,EAAEF;AAAzC,WAAD,CAAT;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMQ,iBAAMjB,GAAG,CAAC;AAACkB,YAAAA,IAAI,EAAE,sBAAP;AAA+BC,YAAAA,OAAO;AAAtC,WAAD,CAAT;;AANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SAAUtB,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMK,UAAU,CAAC,cAAD,EAAiBN,YAAjB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAM,CACFD,gBAAgB,EADd,CAAN;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {\r\n    delay\r\n} from 'redux-saga';\r\n\r\nimport {\r\n    put,\r\n    select,\r\n    takeLatest\r\n} from 'redux-saga/effects';\r\n\r\nconst getProductsPromotionFromServer = () => {\r\n    const data = [\r\n    {\r\n        productid: 1,\r\n            categoryid: 1,\r\n        shopid: 1,\r\n        name: 'chleb',\r\n        description: 'taki sobie chleb xDDD',\r\n        price: 21.37,\r\n        currency: 'szekle',\r\n        link: 'www.pornhub.com',\r\n        url: 'https://cdn3.tmbi.com/toh/GoogleImagesPostCard/exps32480_MRR153791D09_18_6b.jpg'\r\n    },\r\n    {\r\n        productid: 2,\r\n            categoryid: 2,\r\n        shopid: 2,\r\n        name: 'mleko',\r\n        description: 'takie sobie mleko',\r\n        price: 21.37,\r\n        currency: 'pomarancze',\r\n        link: 'www.pornhub.com',\r\n        url: 'https://cdn3.tmbi.com/toh/GoogleImagesPostCard/exps32480_MRR153791D09_18_6b.jpg'\r\n    }\r\n    ];\r\n    console.log(data.json());\r\n    return data.json();\r\n};\r\n\r\nfunction* loadProducts () {\r\n    try {\r\n        yield delay(1000);\r\n        const productList = yield getProductsPromotionFromServer();\r\n        yield put({ type: 'GET_PRODUCTS_SUCCESS', payload: productList});\r\n    } catch (e) {\r\n        yield put({type: 'GET_PRODUCTS_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* watchGetProducts() {\r\n    yield takeLatest('GET_PRODUCTS', loadProducts);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield [\r\n        watchGetProducts()\r\n    ]\r\n}\r\n"]},"metadata":{},"sourceType":"module"}