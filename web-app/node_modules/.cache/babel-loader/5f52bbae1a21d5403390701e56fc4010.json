{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\repo\\\\inzynierka\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadUser),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(addUserFunction),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(modifyUserFunction),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchGetUser),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userSaga);\n\nimport { put, takeLatest } from 'redux-saga/effects';\nimport { SERWER_LOCAL } from \"../constants/AppConstants\";\n\nvar getUserParams = function getUserParams(login, pass) {\n  try {\n    console.log('fetching with get user');\n    var response = fetch(\"\".concat(SERWER_LOCAL, \"/api/user/login\"), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({})\n    });\n    console.log(response);\n    console.log(response.body);\n    return response.status;\n  } catch (e) {\n    console.log(\"Could not fetch data from \".concat(SERWER_LOCAL, \".\"));\n  }\n\n  var data = {\n    userid: 1,\n    name: 'Adam',\n    surname: 'Nieadminowicz',\n    login: 'loginek',\n    password: 'haselko',\n    email: 'xd@xd.pl',\n    isAdmin: false\n  };\n  console.log(data);\n  return data;\n};\n\nvar addUser = function addUser(user) {\n  var resposne = {\n    status: 'ok'\n  };\n  return resposne;\n};\n\nvar modifyUser = function modifyUser(user) {\n  var resposne = {\n    status: 'ok'\n  };\n  return resposne;\n};\n\nfunction loadUser() {\n  var userParams;\n  return _regeneratorRuntime.wrap(function loadUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return getUserParams();\n\n        case 3:\n          userParams = _context.sent;\n          _context.next = 6;\n          return put({\n            type: 'GET_USER_SUCCESS',\n            payload: userParams\n          });\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put({\n            type: 'GET_USER_FAILURE',\n            payload: _context.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 8]]);\n}\n\nfunction addUserFunction(user) {\n  return _regeneratorRuntime.wrap(function addUserFunction$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return addUser(user);\n\n        case 3:\n          _context2.next = 5;\n          return put({\n            type: 'ADD_USER_SUCCESS'\n          });\n\n        case 5:\n          _context2.next = 11;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 11;\n          return put({\n            type: 'ADD_USER_FAILURE',\n            payload: _context2.t0\n          });\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this, [[0, 7]]);\n}\n\nfunction modifyUserFunction(user) {\n  return _regeneratorRuntime.wrap(function modifyUserFunction$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return modifyUser(user);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            type: 'ADD_USER_SUCCESS'\n          });\n\n        case 5:\n          _context3.next = 11;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 11;\n          return put({\n            type: 'ADD_USER_FAILURE',\n            payload: _context3.t0\n          });\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, this, [[0, 7]]);\n}\n\nfunction watchGetUser() {\n  return _regeneratorRuntime.wrap(function watchGetUser$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest('GET_USER', loadUser);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, this);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return [watchGetUser()];\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, this);\n}","map":{"version":3,"sources":["C:\\Users\\baszak\\pwr\\inz\\repo\\inzynierka\\web-app\\src\\sagas\\userSaga.js"],"names":["loadUser","addUserFunction","modifyUserFunction","watchGetUser","userSaga","put","takeLatest","SERWER_LOCAL","getUserParams","login","pass","console","log","response","fetch","method","headers","body","JSON","stringify","status","e","data","userid","name","surname","password","email","isAdmin","addUser","user","resposne","modifyUser","userParams","type","payload"],"mappings":";;;;yBAoDUA,Q;;;yBASAC,e;;;yBASAC,kB;;;yBASAC,Y;;;yBAIeC,Q;;AAnFzB,SACIC,GADJ,EAEIC,UAFJ,QAGO,oBAHP;AAIA,SAAQC,YAAR,QAA2B,2BAA3B;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,IAAR,EAAiB;AACnC,MAAI;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,QAAMC,QAAQ,GAAGC,KAAK,WAAIP,YAAJ,sBAAkC;AACpDQ,MAAAA,MAAM,EAAE,KAD4C;AAEpDC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX,OAF2C;AAMpDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EAAf;AAN8C,KAAlC,CAAtB;AAUAR,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACI,IAArB;AACA,WAAOJ,QAAQ,CAACO,MAAhB;AACH,GAfD,CAeE,OAAMC,CAAN,EAAS;AACPV,IAAAA,OAAO,CAACC,GAAR,qCAAyCL,YAAzC;AACH;;AACD,MAAMe,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAE,CADC;AAETC,IAAAA,IAAI,EAAE,MAFG;AAGTC,IAAAA,OAAO,EAAE,eAHA;AAIThB,IAAAA,KAAK,EAAE,SAJE;AAKTiB,IAAAA,QAAQ,EAAE,SALD;AAMTC,IAAAA,KAAK,EAAE,UANE;AAOTC,IAAAA,OAAO,EAAE;AAPA,GAAb;AASAjB,EAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AACA,SAAOA,IAAP;AACH,CA9BD;;AAgCA,IAAMO,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;AACtB,MAAMC,QAAQ,GAAG;AACbX,IAAAA,MAAM,EAAE;AADK,GAAjB;AAGA,SAAOW,QAAP;AACH,CALD;;AAOA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACF,IAAD,EAAU;AACzB,MAAMC,QAAQ,GAAG;AACbX,IAAAA,MAAM,EAAE;AADK,GAAjB;AAGA,SAAOW,QAAP;AACH,CALD;;AAOA,SAAU/B,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE2B,iBAAMQ,aAAa,EAAnB;;AAF3B;AAEcyB,UAAAA,UAFd;AAAA;AAGQ,iBAAM5B,GAAG,CAAC;AAAE6B,YAAAA,IAAI,EAAE,kBAAR;AAA4BC,YAAAA,OAAO,EAAEF;AAArC,WAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKQ,iBAAM5B,GAAG,CAAC;AAAC6B,YAAAA,IAAI,EAAE,kBAAP;AAA2BC,YAAAA,OAAO;AAAlC,WAAD,CAAT;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAAUlC,eAAV,CAA0B6B,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMD,OAAO,CAACC,IAAD,CAAb;;AAFR;AAAA;AAGQ,iBAAMzB,GAAG,CAAC;AAAE6B,YAAAA,IAAI,EAAE;AAAR,WAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKQ,iBAAM7B,GAAG,CAAC;AAAE6B,YAAAA,IAAI,EAAE,kBAAR;AAA4BC,YAAAA,OAAO;AAAnC,WAAD,CAAT;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAAUjC,kBAAV,CAA6B4B,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAME,UAAU,CAACF,IAAD,CAAhB;;AAFR;AAAA;AAGQ,iBAAMzB,GAAG,CAAC;AAAE6B,YAAAA,IAAI,EAAE;AAAR,WAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKQ,iBAAM7B,GAAG,CAAC;AAAE6B,YAAAA,IAAI,EAAE,kBAAR;AAA4BC,YAAAA,OAAO;AAAnC,WAAD,CAAT;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAAUhC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMG,UAAU,CAAC,UAAD,EAAaN,QAAb,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUI,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAM,CACFD,YAAY,EADV,CAAN;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {\r\n    put,\r\n    takeLatest\r\n} from 'redux-saga/effects';\r\nimport {SERWER_LOCAL} from \"../constants/AppConstants\";\r\n\r\nconst getUserParams = (login, pass) => {\r\n    try {\r\n        console.log('fetching with get user');\r\n        const response = fetch(`${SERWER_LOCAL}/api/user/login`,{\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n\r\n            })\r\n        });\r\n        console.log(response);\r\n        console.log(response.body);\r\n        return response.status;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_LOCAL}.`);\r\n    }\r\n    const data = {\r\n        userid: 1,\r\n        name: 'Adam',\r\n        surname: 'Nieadminowicz',\r\n        login: 'loginek',\r\n        password: 'haselko',\r\n        email: 'xd@xd.pl',\r\n        isAdmin: false\r\n    };\r\n    console.log(data);\r\n    return data;\r\n};\r\n\r\nconst addUser = (user) => {\r\n    const resposne = {\r\n        status: 'ok'\r\n    };\r\n    return resposne;\r\n};\r\n\r\nconst modifyUser = (user) => {\r\n    const resposne = {\r\n        status: 'ok'\r\n    };\r\n    return resposne;\r\n};\r\n\r\nfunction* loadUser () {\r\n    try {\r\n        const userParams = yield getUserParams();\r\n        yield put({ type: 'GET_USER_SUCCESS', payload: userParams});\r\n    } catch (e) {\r\n        yield put({type: 'GET_USER_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* addUserFunction(user) {\r\n    try {\r\n        yield addUser(user);\r\n        yield put({ type: 'ADD_USER_SUCCESS'});\r\n    } catch (e) {\r\n        yield put({ type: 'ADD_USER_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* modifyUserFunction(user) {\r\n    try {\r\n        yield modifyUser(user);\r\n        yield put({ type: 'ADD_USER_SUCCESS'});\r\n    } catch (e) {\r\n        yield put({ type: 'ADD_USER_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* watchGetUser() {\r\n    yield takeLatest('GET_USER', loadUser);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield [\r\n        watchGetUser()\r\n    ]\r\n}\r\n"]},"metadata":{},"sourceType":"module"}