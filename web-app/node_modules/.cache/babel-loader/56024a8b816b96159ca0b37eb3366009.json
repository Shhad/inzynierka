{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\repo\\\\inzynierka\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadCategories),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchGetCategories),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(categorySaga);\n\nimport { delay } from 'redux-saga';\nimport { put, takeLatest } from 'redux-saga/effects';\nimport { SERWER_LOCAL } from \"../constants/AppConstants\";\n\nvar getCategories = function getCategories() {\n  try {\n    console.log('fetching with get categories');\n    var response = fetch(\"\".concat(SERWER_LOCAL, \"/api/category/categories\"), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.status === 'ok') {\n        console.log(data.data);\n        return data.data;\n      } else {\n        console.log('not good');\n        return false;\n      }\n    }).catch(function (error) {\n      return console.log(\"Error occurred: \".concat(error, \".\"));\n    });\n    return response;\n  } catch (e) {\n    console.log(\"Could not fetch data from \".concat(SERWER_LOCAL, \".\"));\n    return [];\n  }\n};\n\nfunction loadCategories() {\n  var categoriesList;\n  return _regeneratorRuntime.wrap(function loadCategories$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return getCategories();\n\n        case 3:\n          categoriesList = _context.sent;\n          _context.next = 6;\n          return put({\n            type: 'GET_CATEGORIES_SUCCESS',\n            payload: categoriesList\n          });\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put({\n            type: 'GET_CATEGORIES_FAILURE',\n            payload: _context.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 8]]);\n}\n\nfunction watchGetCategories() {\n  return _regeneratorRuntime.wrap(function watchGetCategories$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest('GET_CATEGORIES', loadCategories);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}\n\nexport default function categorySaga() {\n  return _regeneratorRuntime.wrap(function categorySaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return [watchGetCategories()];\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, this);\n}","map":{"version":3,"sources":["C:\\Users\\baszak\\pwr\\inz\\repo\\inzynierka\\web-app\\src\\sagas\\categorySaga.js"],"names":["loadCategories","watchGetCategories","categorySaga","delay","put","takeLatest","SERWER_LOCAL","getCategories","console","log","response","fetch","method","headers","then","json","data","status","catch","error","e","categoriesList","type","payload"],"mappings":";;;;yBA+BUA,c;;;yBASAC,kB;;;yBAIeC,Y;;AA5CzB,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,GAAT,EAAcC,UAAd,QAAgC,oBAAhC;AACA,SAAQC,YAAR,QAA2B,2BAA3B;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,MAAI;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,QAAMC,QAAQ,GAAGC,KAAK,WAAIL,YAAJ,+BAA2C;AAC7DM,MAAAA,MAAM,EAAE,KADqD;AAE7DC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX;AAFoD,KAA3C,CAAL,CAMdC,IANc,CAMT,UAAAJ,QAAQ;AAAA,aAAIA,QAAQ,CAACK,IAAT,EAAJ;AAAA,KANC,EAOZD,IAPY,CAOP,UAAAE,IAAI,EAAI;AACV,UAAGA,IAAI,CAACC,MAAL,KAAgB,IAAnB,EAAyB;AACrBT,QAAAA,OAAO,CAACC,GAAR,CAAYO,IAAI,CAACA,IAAjB;AACA,eAAOA,IAAI,CAACA,IAAZ;AACH,OAHD,MAGO;AACHR,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,eAAO,KAAP;AACH;AACJ,KAfY,EAgBZS,KAhBY,CAgBN,UAAAC,KAAK;AAAA,aAAIX,OAAO,CAACC,GAAR,2BAA+BU,KAA/B,OAAJ;AAAA,KAhBC,CAAjB;AAiBA,WAAOT,QAAP;AACH,GApBD,CAoBE,OAAMU,CAAN,EAAS;AACPZ,IAAAA,OAAO,CAACC,GAAR,qCAAyCH,YAAzC;AACA,WAAO,EAAP;AACH;AACJ,CAzBD;;AA2BA,SAAUN,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE+B,iBAAMO,aAAa,EAAnB;;AAF/B;AAEcc,UAAAA,cAFd;AAAA;AAGQ,iBAAMjB,GAAG,CAAC;AAAEkB,YAAAA,IAAI,EAAE,wBAAR;AAAkCC,YAAAA,OAAO,EAAEF;AAA3C,WAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKQ,iBAAMjB,GAAG,CAAC;AAAEkB,YAAAA,IAAI,EAAE,wBAAR;AAAkCC,YAAAA,OAAO;AAAzC,WAAD,CAAT;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAAUtB,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMI,UAAU,CAAC,gBAAD,EAAmBL,cAAnB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUE,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAM,CACFD,kBAAkB,EADhB,CAAN;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { delay } from 'redux-saga';\r\nimport { put, takeLatest } from 'redux-saga/effects';\r\nimport {SERWER_LOCAL} from \"../constants/AppConstants\";\r\n\r\nconst getCategories = () => {\r\n    try {\r\n        console.log('fetching with get categories');\r\n        const response = fetch(`${SERWER_LOCAL}/api/category/categories`,{\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if(data.status === 'ok') {\r\n                    console.log(data.data);\r\n                    return data.data;\r\n                } else {\r\n                    console.log('not good');\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error occurred: ${error}.`));\r\n        return response;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_LOCAL}.`);\r\n        return [];\r\n    }\r\n};\r\n\r\nfunction* loadCategories () {\r\n    try {\r\n        const categoriesList = yield getCategories();\r\n        yield put({ type: 'GET_CATEGORIES_SUCCESS', payload: categoriesList});\r\n    } catch (e) {\r\n        yield put({ type: 'GET_CATEGORIES_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* watchGetCategories() {\r\n    yield takeLatest('GET_CATEGORIES', loadCategories);\r\n}\r\n\r\nexport default function* categorySaga() {\r\n    yield [\r\n        watchGetCategories()\r\n    ]\r\n}\r\n"]},"metadata":{},"sourceType":"module"}