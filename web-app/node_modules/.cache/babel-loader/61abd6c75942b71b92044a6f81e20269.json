{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\web-app\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadUser),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchGetUser),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userSaga);\n\nimport { put, takeLatest } from 'redux-saga/effects';\n\nvar getUserParams = function getUserParams() {\n  var data = [{\n    userid: 1,\n    name: 'Adam',\n    surname: 'Nieadminowicz',\n    login: 'loginek',\n    password: 'haselko',\n    email: 'xd@xd.pl',\n    isAdmin: false\n  }];\n  console.log(data);\n  return data;\n};\n\nfunction loadUser() {\n  var userParams;\n  return _regeneratorRuntime.wrap(function loadUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return getUserParams();\n\n        case 3:\n          userParams = _context.sent;\n          _context.next = 6;\n          return put({\n            type: 'GET_USER_SUCCESS',\n            payload: userParams\n          });\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put({\n            type: 'GET_USER_FAILURE',\n            payload: _context.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 8]]);\n}\n\nfunction watchGetUser() {\n  return _regeneratorRuntime.wrap(function watchGetUser$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest('GET_USER', loadUser);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return [watchGetUser()];\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, this);\n}","map":{"version":3,"sources":["C:\\Users\\baszak\\pwr\\inz\\web-app\\web-app\\src\\sagas\\userSagas.js"],"names":["loadUser","watchGetUser","userSaga","put","takeLatest","getUserParams","data","userid","name","surname","login","password","email","isAdmin","console","log","userParams","type","payload"],"mappings":";;;;yBAqBUA,Q;;;yBASAC,Y;;;yBAIeC,Q;;AAlCzB,SACIC,GADJ,EAEIC,UAFJ,QAGO,oBAHP;;AAKA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,MAAMC,IAAI,GAAG,CACT;AACIC,IAAAA,MAAM,EAAE,CADZ;AAEIC,IAAAA,IAAI,EAAE,MAFV;AAGIC,IAAAA,OAAO,EAAE,eAHb;AAIIC,IAAAA,KAAK,EAAE,SAJX;AAKIC,IAAAA,QAAQ,EAAE,SALd;AAMIC,IAAAA,KAAK,EAAE,UANX;AAOIC,IAAAA,OAAO,EAAE;AAPb,GADS,CAAb;AAWAC,EAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACA,SAAOA,IAAP;AACH,CAdD;;AAgBA,SAAUN,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE2B,iBAAMK,aAAa,EAAnB;;AAF3B;AAEcW,UAAAA,UAFd;AAAA;AAGQ,iBAAMb,GAAG,CAAC;AAAEc,YAAAA,IAAI,EAAE,kBAAR;AAA4BC,YAAAA,OAAO,EAAEF;AAArC,WAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKQ,iBAAMb,GAAG,CAAC;AAACc,YAAAA,IAAI,EAAE,kBAAP;AAA2BC,YAAAA,OAAO;AAAlC,WAAD,CAAT;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAAUjB,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMG,UAAU,CAAC,UAAD,EAAaJ,QAAb,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAM,CACFD,YAAY,EADV,CAAN;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {\r\n    put,\r\n    takeLatest\r\n} from 'redux-saga/effects';\r\n\r\nconst getUserParams = () => {\r\n    const data = [\r\n        {\r\n            userid: 1,\r\n            name: 'Adam',\r\n            surname: 'Nieadminowicz',\r\n            login: 'loginek',\r\n            password: 'haselko',\r\n            email: 'xd@xd.pl',\r\n            isAdmin: false\r\n        }\r\n    ];\r\n    console.log(data);\r\n    return data;\r\n};\r\n\r\nfunction* loadUser () {\r\n    try {\r\n        const userParams = yield getUserParams();\r\n        yield put({ type: 'GET_USER_SUCCESS', payload: userParams});\r\n    } catch (e) {\r\n        yield put({type: 'GET_USER_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* watchGetUser() {\r\n    yield takeLatest('GET_USER', loadUser);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield [\r\n        watchGetUser()\r\n    ]\r\n}\r\n"]},"metadata":{},"sourceType":"module"}