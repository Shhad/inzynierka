{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\repo\\\\inzynierka\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\repo\\\\inzynierka\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\repo\\\\inzynierka\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\repo\\\\inzynierka\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\repo\\\\inzynierka\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\repo\\\\inzynierka\\\\web-app\\\\src\\\\components\\\\Filters\\\\Filter.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getShops as _getShops, getCategories as _getCategories } from '../../reducers/action-creators'; //Material-UI components\n\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\nvar ITEM_HEIGHT = 48;\nvar ITEM_PADDING_TOP = 8;\nvar MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nvar FilterContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FilterContainer, _React$Component);\n\n  function FilterContainer(props) {\n    var _this;\n\n    _classCallCheck(this, FilterContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FilterContainer).call(this, props));\n\n    _this.handleChangeCategory = function (event) {\n      _this.setState({\n        categories: event.target.value\n      });\n\n      console.log(_this.state.categories);\n    };\n\n    _this.handleChangeShop = function (event) {\n      _this.setState({\n        shops: event.target.value\n      });\n    };\n\n    _this.state = {\n      categories: [],\n      shops: []\n    };\n    return _this;\n  }\n\n  _createClass(FilterContainer, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getShops();\n      this.props.getCategories();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var categories = this.props.categoryList;\n      var shops = this.props.shopList;\n      return React.createElement(\"div\", {\n        style: {\n          margin: '0 auto',\n          padding: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        style: {\n          width: '200',\n          maxWidth: '300',\n          margin: '0 auto',\n          padding: '20px',\n          border: '3px',\n          borderColor: '#A59A9A',\n          marginLeft: 'auto',\n          marginRight: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"select-multiple-chip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Kategorie\"), React.createElement(Select, {\n        multiple: true,\n        value: this.state.categories,\n        onChange: this.handleChangeCategory,\n        input: React.createElement(Input, {\n          id: \"select-multiple-chip\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }),\n        renderValue: function renderValue(selected) {\n          return React.createElement(\"div\", {\n            style: {\n              display: 'flex',\n              flexWrap: 'wrap'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, selected.map(function (value) {\n            return React.createElement(Chip, {\n              key: value,\n              label: value,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 77\n              },\n              __self: this\n            });\n          }));\n        },\n        style: {\n          minWidth: '200',\n          maxWidth: '300',\n          alignContent: 'center'\n        },\n        MenuProps: MenuProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, categories.map(function (category) {\n        return React.createElement(MenuItem, {\n          key: category.name,\n          value: category.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, category.name);\n      }))), React.createElement(FormControl, {\n        style: {\n          width: '200',\n          maxWidth: '300',\n          margin: '0 auto',\n          padding: '20px',\n          border: '3px',\n          borderColor: '#A59A9A',\n          marginLeft: 'auto',\n          marginRight: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"select-multiple-chip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Sklepy\"), React.createElement(Select, {\n        multiple: true,\n        value: this.state.shops,\n        onChange: this.handleChangeShop,\n        input: React.createElement(Input, {\n          id: \"select-multiple-chip\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }),\n        renderValue: function renderValue(selected) {\n          return React.createElement(\"div\", {\n            style: {\n              display: 'flex',\n              flexWrap: 'wrap'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }, selected.map(function (value) {\n            return React.createElement(Chip, {\n              key: value,\n              label: value,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 117\n              },\n              __self: this\n            });\n          }));\n        },\n        MenuProps: MenuProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, shops.map(function (shop) {\n        return React.createElement(MenuItem, {\n          key: shop.name,\n          value: shop.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, shop.name);\n      }))));\n    }\n  }]);\n\n  return FilterContainer;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    shopList: state.getIn(['reducerShop', 'shopList']),\n    categoryList: state.getIn(['reducerCategory', 'categoryList'])\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getShops: function getShops() {\n      return dispatch(_getShops());\n    },\n    getCategories: function getCategories() {\n      return dispatch(_getCategories());\n    }\n  };\n}\n\nexport var Filter = connect(mapStateToProps, mapDispatchToProps)(FilterContainer);","map":{"version":3,"sources":["C:\\Users\\baszak\\pwr\\inz\\repo\\inzynierka\\web-app\\src\\components\\Filters\\Filter.js"],"names":["React","connect","getShops","getCategories","Input","InputLabel","MenuItem","FormControl","Select","Chip","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","FilterContainer","props","handleChangeCategory","event","setState","categories","target","value","console","log","state","handleChangeShop","shops","categoryList","shopList","margin","padding","maxWidth","border","borderColor","marginLeft","marginRight","selected","display","flexWrap","map","minWidth","alignContent","category","name","shop","Component","mapStateToProps","getIn","mapDispatchToProps","dispatch","Filter"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport {getShops, getCategories } from '../../reducers/action-creators';\r\n//Material-UI components\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nclass FilterContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            categories: [],\r\n            shops: [],\r\n        };\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.props.getShops();\r\n        this.props.getCategories();\r\n    };\r\n\r\n    handleChangeCategory = event => {\r\n        this.setState({ categories: event.target.value });\r\n        console.log(this.state.categories);\r\n    };\r\n\r\n    handleChangeShop = event => {\r\n        this.setState({shops: event.target.value})\r\n    };\r\n\r\n    render() {\r\n        const categories = this.props.categoryList;\r\n        const shops = this.props.shopList;\r\n        return (\r\n            <div style={{\r\n                margin: '0 auto',\r\n                padding: '10px'\r\n            }}>\r\n                <FormControl style={{\r\n                    width: '200',\r\n                    maxWidth: '300',\r\n                    margin: '0 auto',\r\n                    padding: '20px',\r\n                    border: '3px',\r\n                    borderColor: '#A59A9A',\r\n                    marginLeft: 'auto',\r\n                    marginRight: 'auto'\r\n                }}>\r\n                    <InputLabel htmlFor=\"select-multiple-chip\">Kategorie</InputLabel>\r\n                    <Select\r\n                        multiple\r\n                        value={this.state.categories}\r\n                        onChange={this.handleChangeCategory}\r\n                        input={<Input id=\"select-multiple-chip\" />}\r\n                        renderValue={selected => (\r\n                            <div style={{\r\n                                display: 'flex',\r\n                                flexWrap: 'wrap',\r\n                            }}>\r\n                                {selected.map(value => (\r\n                                    <Chip key={value} label={value} />\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                        style={{\r\n                            minWidth: '200',\r\n                            maxWidth: '300',\r\n                            alignContent: 'center'\r\n                        }}\r\n                        MenuProps={MenuProps}\r\n                    >\r\n                        {categories.map(category => (\r\n                            <MenuItem key={category.name} value={category.name} >\r\n                                {category.name}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl style={{\r\n                    width: '200',\r\n                    maxWidth: '300',\r\n                    margin: '0 auto',\r\n                    padding: '20px',\r\n                    border: '3px',\r\n                    borderColor: '#A59A9A',\r\n                    marginLeft: 'auto',\r\n                    marginRight: 'auto'\r\n                }}>\r\n                    <InputLabel htmlFor=\"select-multiple-chip\">Sklepy</InputLabel>\r\n                    <Select\r\n                        multiple\r\n                        value={this.state.shops}\r\n                        onChange={this.handleChangeShop}\r\n                        input={<Input id=\"select-multiple-chip\" />}\r\n                        renderValue={selected => (\r\n                            <div style={{\r\n                                display: 'flex',\r\n                                flexWrap: 'wrap',\r\n                            }}>\r\n                                {selected.map(value => (\r\n                                    <Chip key={value} label={value} />\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                        MenuProps={MenuProps}\r\n                    >\r\n                        {shops.map(shop => (\r\n                            <MenuItem key={shop.name} value={shop.name} >\r\n                                {shop.name}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        shopList: state.getIn(['reducerShop', 'shopList']),\r\n        categoryList: state.getIn(['reducerCategory', 'categoryList'])\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getShops: () => dispatch(getShops()),\r\n        getCategories: () => dispatch(getCategories())\r\n    }\r\n}\r\n\r\nexport const Filter = connect(mapStateToProps, mapDispatchToProps)(FilterContainer);\r\n"]},"metadata":{},"sourceType":"module"}