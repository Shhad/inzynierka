{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\repo\\\\inzynierka\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\repo\\\\inzynierka\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(addFavouriteFunction),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(addProductToFavouriteFunction),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(deleteProductFromFavouriteFunction),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadFavourites),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchGetFavourites),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchAddFavourite),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchAddFavouriteProduct),\n    _marked8 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchDeleteFavouriteProduct),\n    _marked9 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(favouriteSaga);\n\nimport { delay } from 'redux-saga';\nimport { put, takeLatest } from 'redux-saga/effects';\nimport { SERWER_LOCAL } from \"../constants/AppConstants\";\n\nvar getUserFavourites = function getUserFavourites(userid) {\n  try {\n    console.log('getting favourite user');\n    var response = fetch(\"\".concat(SERWER_LOCAL, \"/api/favourite/favourites/\").concat(userid), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.status === 'ok') {\n        console.log(data.data);\n        return data.data;\n      } else {\n        console.log('not good');\n        return false;\n      }\n    }).catch(function (error) {\n      return console.log(\"Error occurred: \".concat(error, \".\"));\n    });\n    return response;\n  } catch (e) {\n    console.log(\"Could not fetch data from \".concat(SERWER_LOCAL, \".\"));\n    return [];\n  }\n};\n\nvar getProductsOfFavourite =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(favouriteId) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"\".concat(SERWER_LOCAL, \"/api/product/products/favourite/\").concat(favouriteId), {\n              method: 'GET',\n              headers: {\n                'Accept': 'application/json'\n              }\n            }).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              return data.data;\n            }).catch(function (error) {\n              console.log(\"Error occurred: \".concat(error, \".\"));\n              return false;\n            });\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function getProductsOfFavourite(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar getUserFavouritesProducts =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(userid) {\n    var responseData, response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            console.log('getting favourite user');\n            _context3.next = 4;\n            return fetch(\"\".concat(SERWER_LOCAL, \"/api/favourite/favourites/\").concat(userid), {\n              method: 'GET',\n              headers: {\n                'Accept': 'application/json'\n              }\n            }).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              if (data.status === 'ok') {\n                console.log('favourites properly taken');\n                console.log(data.data);\n                responseData = data.data;\n                console.log(responseData);\n                return data.data;\n              } else {\n                console.log(\"Something went wrong with fetching favourites\");\n                return false;\n              }\n            }).catch(function (error) {\n              console.log(\"Error occurred: \".concat(error, \".\"));\n              return false;\n            });\n\n          case 4:\n            response = _context3.sent;\n            _context3.next = 7;\n            return response;\n\n          case 7:\n            _context3.next = 9;\n            return Promise.all(responseData.map(\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee2(favourite) {\n                return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return getProductsOfFavourite(favourite.favouriteId);\n\n                      case 2:\n                        favourite.products = _context2.sent;\n\n                      case 3:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, this);\n              }));\n\n              return function (_x3) {\n                return _ref3.apply(this, arguments);\n              };\n            }()));\n\n          case 9:\n            return _context3.abrupt(\"return\", response);\n\n          case 12:\n            _context3.prev = 12;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(\"Could not fetch data from \".concat(SERWER_LOCAL, \".\"));\n            return _context3.abrupt(\"return\", []);\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this, [[0, 12]]);\n  }));\n\n  return function getUserFavouritesProducts(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar addFavouriteProduct = function addFavouriteProduct(favouriteid, productid) {\n  try {\n    console.log('adding favourite product');\n    var response = fetch(\"\".concat(SERWER_LOCAL, \"/api/favourite/add2\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: 0,\n        favouriteId: favouriteid,\n        productId: productid\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.status === 'ok') {\n        console.log(data.data);\n        return data.data;\n      } else {\n        console.log('not good');\n        return false;\n      }\n    }).catch(function (error) {\n      return console.log(\"Error occurred: \".concat(error, \".\"));\n    });\n    return response;\n  } catch (e) {\n    console.log(\"Could not fetch data from \".concat(SERWER_LOCAL, \".\"));\n    return false;\n  }\n};\n\nvar addFavourite = function addFavourite(favouriteid, userid, name) {\n  try {\n    console.log('getting filtered products');\n    console.log(favouriteid);\n    console.log(userid);\n    console.log(name);\n    var response = fetch(\"\".concat(SERWER_LOCAL, \"/api/favourite/add\"), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        favouriteId: 0,\n        userId: userid,\n        name: name\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      console.log(data);\n\n      if (data.status === 'ok') {\n        console.log(data.data);\n        return data.data;\n      } else {\n        console.log('not good');\n        return false;\n      }\n    }).catch(function (error) {\n      return console.log(\"Error occurred: \".concat(error, \".\"));\n    });\n    return response;\n  } catch (e) {\n    console.log(\"Could not fetch data from \".concat(SERWER_LOCAL, \".\"));\n    return false;\n  }\n};\n\nvar deleteProductFromFavourite = function deleteProductFromFavourite(favourite, product) {\n  try {\n    console.log('getting filtered products');\n    var response = fetch(\"\".concat(SERWER_LOCAL, \"/api/favourite/delete/\").concat(favourite, \"/\").concat(product), {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.status === 'ok') {\n        console.log(data.data);\n        return data.data;\n      } else {\n        console.log('not good');\n        return false;\n      }\n    }).catch(function (error) {\n      return console.log(\"Error occurred: \".concat(error, \".\"));\n    });\n    return response;\n  } catch (e) {\n    console.log(\"Could not fetch data from \".concat(SERWER_LOCAL, \".\"));\n    return false;\n  }\n};\n\nfunction addFavouriteFunction(action) {\n  return _regeneratorRuntime.wrap(function addFavouriteFunction$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return addFavourite(action.favouriteId, action.userId, action.name);\n\n        case 3:\n          _context4.next = 5;\n          return put({\n            type: 'GET_FAVOURITES'\n          });\n\n        case 5:\n          _context4.next = 11;\n          break;\n\n        case 7:\n          _context4.prev = 7;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 11;\n          return put({\n            type: 'ADD_FAVOURITE_FAILURE',\n            payload: _context4.t0\n          });\n\n        case 11:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked, this, [[0, 7]]);\n}\n\nfunction addProductToFavouriteFunction(action) {\n  return _regeneratorRuntime.wrap(function addProductToFavouriteFunction$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return addFavouriteProduct(action.favouriteid, action.productid);\n\n        case 3:\n          _context5.next = 5;\n          return put({\n            type: 'GET_FAVOURITES'\n          });\n\n        case 5:\n          _context5.next = 11;\n          break;\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 11;\n          return put({\n            type: 'ADD_TO_FAVOURITE_FAILURE',\n            payload: _context5.t0\n          });\n\n        case 11:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked2, this, [[0, 7]]);\n}\n\nfunction deleteProductFromFavouriteFunction(action) {\n  return _regeneratorRuntime.wrap(function deleteProductFromFavouriteFunction$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return deleteProductFromFavourite(action.favouriteid, action.productid);\n\n        case 3:\n          _context6.next = 5;\n          return put({\n            type: 'GET_FAVOURITES'\n          });\n\n        case 5:\n          _context6.next = 11;\n          break;\n\n        case 7:\n          _context6.prev = 7;\n          _context6.t0 = _context6[\"catch\"](0);\n          _context6.next = 11;\n          return put({\n            type: 'DELETE_FROM_FAVOURITE_FAILURE',\n            payload: _context6.t0\n          });\n\n        case 11:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked3, this, [[0, 7]]);\n}\n\nfunction loadFavourites(action) {\n  var favouriteList;\n  return _regeneratorRuntime.wrap(function loadFavourites$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context7.next = 5;\n          return getUserFavouritesProducts(action.userid);\n\n        case 5:\n          favouriteList = _context7.sent;\n          _context7.next = 8;\n          return put({\n            type: 'GET_FAVOURITES_SUCCESS',\n            payload: favouriteList\n          });\n\n        case 8:\n          _context7.next = 14;\n          break;\n\n        case 10:\n          _context7.prev = 10;\n          _context7.t0 = _context7[\"catch\"](0);\n          _context7.next = 14;\n          return put({\n            type: 'GET_FAVOURITES_FAILURE',\n            payload: _context7.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked4, this, [[0, 10]]);\n}\n\nfunction watchGetFavourites() {\n  return _regeneratorRuntime.wrap(function watchGetFavourites$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest('GET_FAVOURITES', loadFavourites);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked5, this);\n}\n\nfunction watchAddFavourite() {\n  return _regeneratorRuntime.wrap(function watchAddFavourite$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeLatest('ADD_FAVOURITE', addFavouriteFunction);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked6, this);\n}\n\nfunction watchAddFavouriteProduct() {\n  return _regeneratorRuntime.wrap(function watchAddFavouriteProduct$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest('ADD_FAVOURITE_PRODUCT', addProductToFavouriteFunction);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked7, this);\n}\n\nfunction watchDeleteFavouriteProduct() {\n  return _regeneratorRuntime.wrap(function watchDeleteFavouriteProduct$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeLatest('DELETE_FAVOURITE_PRODUCT', deleteProductFromFavouriteFunction);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked8, this);\n}\n\nexport default function favouriteSaga() {\n  return _regeneratorRuntime.wrap(function favouriteSaga$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return [watchGetFavourites(), watchAddFavourite(), watchAddFavouriteProduct(), watchDeleteFavouriteProduct()];\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked9, this);\n}","map":{"version":3,"sources":["C:\\Users\\baszak\\pwr\\inz\\repo\\inzynierka\\web-app\\src\\sagas\\favouriteSaga.js"],"names":["addFavouriteFunction","addProductToFavouriteFunction","deleteProductFromFavouriteFunction","loadFavourites","watchGetFavourites","watchAddFavourite","watchAddFavouriteProduct","watchDeleteFavouriteProduct","favouriteSaga","delay","put","takeLatest","SERWER_LOCAL","getUserFavourites","userid","console","log","response","fetch","method","headers","then","json","data","status","catch","error","e","getProductsOfFavourite","favouriteId","getUserFavouritesProducts","responseData","Promise","all","map","favourite","products","addFavouriteProduct","favouriteid","productid","body","JSON","stringify","id","productId","addFavourite","name","userId","deleteProductFromFavourite","product","action","type","payload","favouriteList"],"mappings":"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","sourcesContent":["import {\r\n    delay\r\n} from 'redux-saga';\r\n\r\nimport {\r\n    put,\r\n    takeLatest\r\n} from 'redux-saga/effects';\r\nimport {SERWER_LOCAL} from \"../constants/AppConstants\";\r\n\r\nconst getUserFavourites = (userid) => {\r\n    try {\r\n        console.log('getting favourite user');\r\n        const response = fetch(`${SERWER_LOCAL}/api/favourite/favourites/${userid}`,{\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if(data.status === 'ok') {\r\n                    console.log(data.data);\r\n                    return data.data;\r\n                } else {\r\n                    console.log('not good');\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error occurred: ${error}.`));\r\n        return response;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_LOCAL}.`);\r\n        return [];\r\n    }\r\n};\r\n\r\nconst getProductsOfFavourite = async(favouriteId) => {\r\n    const response = await fetch(`${SERWER_LOCAL}/api/product/products/favourite/${favouriteId}`,{\r\n        method: 'GET',\r\n        headers: {\r\n            'Accept': 'application/json'\r\n        }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            return data.data;\r\n        })\r\n        .catch(error => {\r\n            console.log(`Error occurred: ${error}.`);\r\n            return false;\r\n        });\r\n    return response;\r\n};\r\n\r\nconst getUserFavouritesProducts = async(userid) => {\r\n    try {\r\n        console.log('getting favourite user');\r\n        let responseData;\r\n        const response = await fetch(`${SERWER_LOCAL}/api/favourite/favourites/${userid}`,{\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json'\r\n            }\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if(data.status === 'ok') {\r\n                    console.log('favourites properly taken');\r\n                    console.log(data.data);\r\n                    responseData = data.data;\r\n                    console.log(responseData);\r\n                    return data.data;\r\n                } else {\r\n                    console.log(`Something went wrong with fetching favourites`);\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(`Error occurred: ${error}.`);\r\n                return false;\r\n            });\r\n        await response;\r\n\r\n        await Promise.all(responseData.map(async favourite => {\r\n            favourite.products = await getProductsOfFavourite(favourite.favouriteId);\r\n        }));\r\n\r\n        return response;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_LOCAL}.`);\r\n        return [];\r\n    }\r\n};\r\n\r\nconst addFavouriteProduct = (favouriteid, productid) => {\r\n    try {\r\n        console.log('adding favourite product');\r\n        const response = fetch(`${SERWER_LOCAL}/api/favourite/add2`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                id: 0,\r\n                favouriteId: favouriteid,\r\n                productId: productid\r\n            })\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if(data.status === 'ok') {\r\n                    console.log(data.data);\r\n                    return data.data;\r\n                } else {\r\n                    console.log('not good');\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error occurred: ${error}.`));\r\n        return response;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_LOCAL}.`);\r\n        return false;\r\n    }\r\n};\r\n\r\nconst addFavourite = (favouriteid, userid, name) => {\r\n    try {\r\n        console.log('getting filtered products');\r\n        console.log(favouriteid);\r\n        console.log(userid);\r\n        console.log(name);\r\n        const response = fetch(`${SERWER_LOCAL}/api/favourite/add`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                favouriteId: 0,\r\n                userId: userid,\r\n                name: name\r\n            })\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                if(data.status === 'ok') {\r\n                    console.log(data.data);\r\n                    return data.data;\r\n                } else {\r\n                    console.log('not good');\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error occurred: ${error}.`));\r\n        return response;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_LOCAL}.`);\r\n        return false;\r\n    }\r\n};\r\n\r\nconst deleteProductFromFavourite = (favourite, product) => {\r\n    try {\r\n        console.log('getting filtered products');\r\n        const response = fetch(`${SERWER_LOCAL}/api/favourite/delete/${favourite}/${product}`,{\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if(data.status === 'ok') {\r\n                    console.log(data.data);\r\n                    return data.data;\r\n                } else {\r\n                    console.log('not good');\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error occurred: ${error}.`));\r\n        return response;\r\n    } catch(e) {\r\n        console.log(`Could not fetch data from ${SERWER_LOCAL}.`);\r\n        return false;\r\n    }\r\n};\r\n\r\nfunction* addFavouriteFunction (action) {\r\n    try {\r\n        yield addFavourite(action.favouriteId, action.userId, action.name);\r\n        yield put({ type: 'GET_FAVOURITES'});\r\n    } catch (e) {\r\n        yield put({ type: 'ADD_FAVOURITE_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* addProductToFavouriteFunction (action) {\r\n    try {\r\n        yield addFavouriteProduct(action.favouriteid, action.productid);\r\n        yield put({ type: 'GET_FAVOURITES'});\r\n    } catch (e) {\r\n        yield put({ type: 'ADD_TO_FAVOURITE_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* deleteProductFromFavouriteFunction (action) {\r\n    try {\r\n        yield deleteProductFromFavourite(action.favouriteid, action.productid);\r\n        yield put({ type: 'GET_FAVOURITES'});\r\n    } catch (e) {\r\n        yield put({ type: 'DELETE_FROM_FAVOURITE_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* loadFavourites (action) {\r\n    try {\r\n        yield delay(1000);\r\n        const favouriteList = yield getUserFavouritesProducts(action.userid);\r\n        yield put({ type: 'GET_FAVOURITES_SUCCESS', payload: favouriteList});\r\n    } catch (e) {\r\n        yield put({type: 'GET_FAVOURITES_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* watchGetFavourites() {\r\n    yield takeLatest('GET_FAVOURITES', loadFavourites);\r\n}\r\n\r\nfunction* watchAddFavourite() {\r\n    yield takeLatest('ADD_FAVOURITE', addFavouriteFunction);\r\n}\r\n\r\nfunction* watchAddFavouriteProduct() {\r\n    yield takeLatest('ADD_FAVOURITE_PRODUCT', addProductToFavouriteFunction);\r\n}\r\n\r\nfunction* watchDeleteFavouriteProduct() {\r\n    yield takeLatest('DELETE_FAVOURITE_PRODUCT', deleteProductFromFavouriteFunction);\r\n}\r\n\r\nexport default function* favouriteSaga() {\r\n    yield [\r\n        watchGetFavourites(),\r\n        watchAddFavourite(),\r\n        watchAddFavouriteProduct(),\r\n        watchDeleteFavouriteProduct()\r\n    ]\r\n}\r\n"]},"metadata":{},"sourceType":"module"}