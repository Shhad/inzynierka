{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\web-app\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\web-app\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\web-app\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\web-app\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\web-app\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\web-app\\\\web-app\\\\src\\\\components\\\\Filters\\\\Filter.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getShops as _getShops, getCategories as _getCategories } from '../../reducers/action-creators'; //Material-UI components\n\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nvar ITEM_HEIGHT = 48;\nvar ITEM_PADDING_TOP = 8;\nvar MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nfunction getStyles(name, that) {\n  return {\n    fontWeight: that.state.name.indexOf(name) === -1 ? that.props.theme.typography.fontWeightRegular : that.props.theme.typography.fontWeightMedium\n  };\n}\n\nvar FilterContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FilterContainer, _React$Component);\n\n  function FilterContainer(props) {\n    var _this;\n\n    _classCallCheck(this, FilterContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FilterContainer).call(this, props));\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        name: event.target.value\n      });\n    };\n\n    _this.state = {\n      categories: [],\n      shops: []\n    };\n    return _this;\n  }\n\n  _createClass(FilterContainer, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getShops();\n      this.props.getCategories();\n      console.log(this.props.categoryList);\n      console.log(this.props.shopList);\n      this.setState({\n        categories: this.props.categoryList\n      });\n      this.setState({\n        shops: this.props.shopList\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var categories = this.props.categoryList;\n      var shops = this.props.shopList;\n      return React.createElement(\"div\", {\n        style: {\n          padding: '5px',\n          display: 'flex',\n          flexWrap: 'wrap'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        style: {\n          minWidth: '120',\n          maxWidth: '300'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"select-multiple-chip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Kategorie\"), React.createElement(Select, {\n        multiple: true,\n        value: this.state.categories,\n        onChange: this.handleChange,\n        input: React.createElement(Input, {\n          id: \"select-multiple-chip\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }),\n        renderValue: function renderValue(selected) {\n          return React.createElement(\"div\", {\n            style: {\n              display: 'flex',\n              flexWrap: 'wrap'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, selected.map(function (value) {\n            return React.createElement(Chip, {\n              key: value,\n              label: value,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84\n              },\n              __self: this\n            });\n          }));\n        },\n        MenuProps: MenuProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, categories.map(function (category) {\n        return React.createElement(MenuItem, {\n          key: category.name,\n          value: category.name,\n          style: getStyles(category.name, _this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, category.name);\n      }))));\n    }\n  }]);\n\n  return FilterContainer;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    shopList: state.getIn(['reducerShop', 'shopList']),\n    categoryList: state.getIn(['reducerCategory', 'categoryList'])\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getShops: function getShops() {\n      return dispatch(_getShops());\n    },\n    getCategories: function getCategories() {\n      return dispatch(_getCategories());\n    }\n  };\n}\n\nexport var Filter = connect(mapStateToProps, mapDispatchToProps)(FilterContainer);","map":{"version":3,"sources":["C:\\Users\\baszak\\pwr\\inz\\web-app\\web-app\\src\\components\\Filters\\Filter.js"],"names":["React","connect","getShops","getCategories","Input","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","Chip","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","getStyles","name","that","fontWeight","state","indexOf","props","theme","typography","fontWeightRegular","fontWeightMedium","FilterContainer","handleChange","event","setState","target","value","categories","shops","console","log","categoryList","shopList","padding","display","flexWrap","minWidth","maxWidth","selected","map","category","Component","mapStateToProps","getIn","mapDispatchToProps","dispatch","Filter"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport {getShops, getCategories } from '../../reducers/action-creators';\r\n//Material-UI components\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nfunction getStyles(name, that) {\r\n    return {\r\n        fontWeight:\r\n            that.state.name.indexOf(name) === -1\r\n                ? that.props.theme.typography.fontWeightRegular\r\n                : that.props.theme.typography.fontWeightMedium,\r\n    };\r\n}\r\n\r\nclass FilterContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            categories: [],\r\n            shops: []\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.getShops();\r\n        this.props.getCategories();\r\n        console.log(this.props.categoryList);\r\n        console.log(this.props.shopList);\r\n        this.setState({categories: this.props.categoryList});\r\n        this.setState({shops: this.props.shopList})\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({ name: event.target.value });\r\n    };\r\n\r\n    render() {\r\n        const categories = this.props.categoryList;\r\n        const shops = this.props.shopList;\r\n\r\n\r\n        return (\r\n            <div style={{\r\n                padding: '5px',\r\n                display: 'flex',\r\n                flexWrap: 'wrap'\r\n            }}>\r\n                <FormControl style={{\r\n                    minWidth: '120',\r\n                    maxWidth: '300'\r\n                }}>\r\n                    <InputLabel htmlFor=\"select-multiple-chip\">Kategorie</InputLabel>\r\n                    <Select\r\n                        multiple\r\n                        value={this.state.categories}\r\n                        onChange={this.handleChange}\r\n                        input={<Input id=\"select-multiple-chip\" />}\r\n                        renderValue={selected => (\r\n                            <div style={{\r\n                                display: 'flex',\r\n                                flexWrap: 'wrap',\r\n                            }}>\r\n                                {selected.map(value => (\r\n                                    <Chip key={value} label={value} />\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                        MenuProps={MenuProps}\r\n                    >\r\n                        {categories.map(category => (\r\n                            <MenuItem key={category.name} value={category.name} style={getStyles(category.name, this)}>\r\n                                {category.name}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        shopList: state.getIn(['reducerShop', 'shopList']),\r\n        categoryList: state.getIn(['reducerCategory', 'categoryList'])\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getShops: () => dispatch(getShops()),\r\n        getCategories: () => dispatch(getCategories())\r\n    }\r\n}\r\n\r\nexport const Filter = connect(mapStateToProps, mapDispatchToProps)(FilterContainer);\r\n"]},"metadata":{},"sourceType":"module"}