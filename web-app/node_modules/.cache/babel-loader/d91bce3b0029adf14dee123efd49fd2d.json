{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\repo\\\\inzynierka\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\repo\\\\inzynierka\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\repo\\\\inzynierka\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\repo\\\\inzynierka\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\repo\\\\inzynierka\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\repo\\\\inzynierka\\\\web-app\\\\src\\\\components\\\\Filters\\\\Filter.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getShops as _getShops, getCategories as _getCategories } from '../../reducers/action-creators'; //Material-UI components\n\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\nvar ITEM_HEIGHT = 48;\nvar ITEM_PADDING_TOP = 8;\nvar MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n      margin: 'auto'\n    }\n  }\n};\n\nvar FilterContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FilterContainer, _React$Component);\n\n  function FilterContainer(props) {\n    var _this;\n\n    _classCallCheck(this, FilterContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FilterContainer).call(this, props));\n\n    _this.handleChangeCategory = function (event) {\n      _this.setState({\n        categories: event.target.value\n      });\n\n      var filteredCategories = [];\n\n      _this.props.categoryList.forEach(function (category) {\n        console.log(category.name);\n\n        if (_this.state.categories.includes(category.name)) {\n          filteredCategories.push(category);\n        }\n      });\n\n      console.log(filteredCategories);\n\n      _this.props.filterCategory(filteredCategories);\n    };\n\n    _this.handleChangeShop = function (event) {\n      _this.setState({\n        shops: event.target.value\n      });\n\n      var filteredShops = [];\n\n      _this.props.shopList.forEach(function (shop) {\n        if (_this.state.shops.includes(shop.name)) {\n          filteredShops.push(shop);\n        }\n      });\n\n      console.log(filteredShops);\n\n      _this.props.filterShop(filteredShops);\n    };\n\n    _this.state = {\n      categories: [],\n      shops: []\n    };\n    return _this;\n  }\n\n  _createClass(FilterContainer, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getShops();\n      this.props.getCategories();\n      console.log(this.props.categoryList);\n      var preState = {\n        categories: [],\n        shops: []\n      };\n      this.props.categoryList.forEach(function (category) {\n        preState.categories.push(category.name);\n      });\n      this.props.shopList.forEach(function (shop) {\n        preState.shops.push(shop.name);\n      });\n      this.setState(preState);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var categories = this.props.categoryList;\n      var shops = this.props.shopList;\n      console.log(this.state.categories);\n      return React.createElement(\"div\", {\n        style: {\n          margin: '0 auto',\n          padding: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        style: {\n          width: '200',\n          maxWidth: '300',\n          margin: '0 auto',\n          padding: '20px',\n          border: '3px',\n          borderColor: '#A59A9A',\n          marginLeft: 'auto',\n          marginRight: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"select-multiple-chip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Kategorie\"), React.createElement(Select, {\n        multiple: true,\n        value: this.state.categories,\n        onChange: this.handleChangeCategory,\n        input: React.createElement(Input, {\n          id: \"select-multiple-chip\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }),\n        renderValue: function renderValue(selected) {\n          return React.createElement(\"div\", {\n            style: {\n              display: 'flex',\n              flexWrap: 'wrap'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }, selected.map(function (value) {\n            return React.createElement(Chip, {\n              key: value,\n              label: value,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 107\n              },\n              __self: this\n            });\n          }));\n        },\n        style: {\n          minWidth: '200',\n          maxWidth: '300',\n          alignContent: 'center'\n        },\n        MenuProps: MenuProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, this.props.categoryList.map(function (category) {\n        return React.createElement(MenuItem, {\n          key: category.name,\n          value: category.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, category.name);\n      }))), React.createElement(FormControl, {\n        style: {\n          width: '200',\n          maxWidth: '300',\n          margin: '0 auto',\n          padding: '20px',\n          border: '3px',\n          borderColor: '#A59A9A',\n          marginLeft: 'auto',\n          marginRight: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"select-multiple-chip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Sklepy\"), React.createElement(Select, {\n        multiple: true,\n        value: this.state.shops,\n        onChange: this.handleChangeShop,\n        input: React.createElement(Input, {\n          id: \"select-multiple-chip\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }),\n        renderValue: function renderValue(selected) {\n          return React.createElement(\"div\", {\n            style: {\n              display: 'flex',\n              flexWrap: 'wrap'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            },\n            __self: this\n          }, selected.map(function (value) {\n            return React.createElement(Chip, {\n              key: value,\n              label: value,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 147\n              },\n              __self: this\n            });\n          }));\n        },\n        MenuProps: MenuProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, this.props.shopList.map(function (shop) {\n        return React.createElement(MenuItem, {\n          key: shop.name,\n          value: shop.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, shop.name);\n      }))));\n    }\n  }]);\n\n  return FilterContainer;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    shopList: state.getIn(['reducerShop', 'shopList']),\n    categoryList: state.getIn(['reducerCategory', 'categoryList'])\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getShops: function getShops() {\n      return dispatch(_getShops());\n    },\n    getCategories: function getCategories() {\n      return dispatch(_getCategories());\n    }\n  };\n}\n\nexport var Filter = connect(mapStateToProps, mapDispatchToProps)(FilterContainer);","map":{"version":3,"sources":["C:\\Users\\baszak\\pwr\\inz\\repo\\inzynierka\\web-app\\src\\components\\Filters\\Filter.js"],"names":["React","connect","getShops","getCategories","Input","InputLabel","MenuItem","FormControl","Select","Chip","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","margin","FilterContainer","props","handleChangeCategory","event","setState","categories","target","value","filteredCategories","categoryList","forEach","category","console","log","name","state","includes","push","filterCategory","handleChangeShop","shops","filteredShops","shopList","shop","filterShop","preState","padding","maxWidth","border","borderColor","marginLeft","marginRight","selected","display","flexWrap","map","minWidth","alignContent","Component","mapStateToProps","getIn","mapDispatchToProps","dispatch","Filter"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAAQC,QAAQ,IAARA,SAAR,EAAkBC,aAAa,IAAbA,cAAlB,QAAuC,gCAAvC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,IAAMC,WAAW,GAAG,EAApB;AACA,IAAMC,gBAAgB,GAAG,CAAzB;AACA,IAAMC,SAAS,GAAG;AACdC,EAAAA,UAAU,EAAE;AACRC,IAAAA,KAAK,EAAE;AACHC,MAAAA,SAAS,EAAEL,WAAW,GAAG,GAAd,GAAoBC,gBAD5B;AAEHK,MAAAA,KAAK,EAAE,GAFJ;AAGHC,MAAAA,MAAM,EAAE;AAHL;AADC;AADE,CAAlB;;IAUMC,e;;;;;AACF,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,yFAAMA,KAAN;;AADe,UAyBnBC,oBAzBmB,GAyBI,UAAAC,KAAK,EAAI;AAC5B,YAAKC,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA3B,OAAd;;AACA,UAAMC,kBAAkB,GAAG,EAA3B;;AACA,YAAKP,KAAL,CAAWQ,YAAX,CAAwBC,OAAxB,CAAgC,UAAAC,QAAQ,EAAI;AACxCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;;AACA,YAAG,MAAKC,KAAL,CAAWV,UAAX,CAAsBW,QAAtB,CAA+BL,QAAQ,CAACG,IAAxC,CAAH,EAAiD;AAC7CN,UAAAA,kBAAkB,CAACS,IAAnB,CAAwBN,QAAxB;AACH;AACJ,OALD;;AAMAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,kBAAZ;;AACA,YAAKP,KAAL,CAAWiB,cAAX,CAA0BV,kBAA1B;AACH,KApCkB;;AAAA,UAsCnBW,gBAtCmB,GAsCA,UAAAhB,KAAK,EAAI;AACxB,YAAKC,QAAL,CAAc;AAACgB,QAAAA,KAAK,EAAEjB,KAAK,CAACG,MAAN,CAAaC;AAArB,OAAd;;AACA,UAAMc,aAAa,GAAG,EAAtB;;AACA,YAAKpB,KAAL,CAAWqB,QAAX,CAAoBZ,OAApB,CAA4B,UAAAa,IAAI,EAAI;AAChC,YAAG,MAAKR,KAAL,CAAWK,KAAX,CAAiBJ,QAAjB,CAA0BO,IAAI,CAACT,IAA/B,CAAH,EAAwC;AACpCO,UAAAA,aAAa,CAACJ,IAAd,CAAmBM,IAAnB;AACH;AACJ,OAJD;;AAKAX,MAAAA,OAAO,CAACC,GAAR,CAAYQ,aAAZ;;AACA,YAAKpB,KAAL,CAAWuB,UAAX,CAAsBH,aAAtB;AACH,KAhDkB;;AAEf,UAAKN,KAAL,GAAa;AACTV,MAAAA,UAAU,EAAE,EADH;AAETe,MAAAA,KAAK,EAAE;AAFE,KAAb;AAFe;AAMlB;;;;yCAEoB;AACjB,WAAKnB,KAAL,CAAWjB,QAAX;AACA,WAAKiB,KAAL,CAAWhB,aAAX;AACA2B,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWQ,YAAvB;AACA,UAAMgB,QAAQ,GAAG;AACbpB,QAAAA,UAAU,EAAE,EADC;AAEbe,QAAAA,KAAK,EAAE;AAFM,OAAjB;AAIA,WAAKnB,KAAL,CAAWQ,YAAX,CAAwBC,OAAxB,CAAgC,UAAAC,QAAQ,EAAI;AACxCc,QAAAA,QAAQ,CAACpB,UAAT,CAAoBY,IAApB,CAAyBN,QAAQ,CAACG,IAAlC;AACH,OAFD;AAGA,WAAKb,KAAL,CAAWqB,QAAX,CAAoBZ,OAApB,CAA4B,UAAAa,IAAI,EAAI;AAChCE,QAAAA,QAAQ,CAACL,KAAT,CAAeH,IAAf,CAAoBM,IAAI,CAACT,IAAzB;AACH,OAFD;AAGA,WAAKV,QAAL,CAAcqB,QAAd;AACH;;;6BA2BQ;AACL,UAAMpB,UAAU,GAAG,KAAKJ,KAAL,CAAWQ,YAA9B;AACA,UAAMW,KAAK,GAAG,KAAKnB,KAAL,CAAWqB,QAAzB;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,KAAL,CAAWV,UAAvB;AACA,aACI;AAAK,QAAA,KAAK,EAAE;AACRN,UAAAA,MAAM,EAAE,QADA;AAER2B,UAAAA,OAAO,EAAE;AAFD,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAE;AAChB5B,UAAAA,KAAK,EAAE,KADS;AAEhB6B,UAAAA,QAAQ,EAAE,KAFM;AAGhB5B,UAAAA,MAAM,EAAE,QAHQ;AAIhB2B,UAAAA,OAAO,EAAE,MAJO;AAKhBE,UAAAA,MAAM,EAAE,KALQ;AAMhBC,UAAAA,WAAW,EAAE,SANG;AAOhBC,UAAAA,UAAU,EAAE,MAPI;AAQhBC,UAAAA,WAAW,EAAE;AARG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,sBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAVJ,EAWI,oBAAC,MAAD;AACI,QAAA,QAAQ,MADZ;AAEI,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWV,UAFtB;AAGI,QAAA,QAAQ,EAAE,KAAKH,oBAHnB;AAII,QAAA,KAAK,EAAE,oBAAC,KAAD;AAAO,UAAA,EAAE,EAAC,sBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJX;AAKI,QAAA,WAAW,EAAE,qBAAA8B,QAAQ;AAAA,iBACjB;AAAK,YAAA,KAAK,EAAE;AACRC,cAAAA,OAAO,EAAE,MADD;AAERC,cAAAA,QAAQ,EAAE;AAFF,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAIKF,QAAQ,CAACG,GAAT,CAAa,UAAA5B,KAAK;AAAA,mBACf,oBAAC,IAAD;AAAM,cAAA,GAAG,EAAEA,KAAX;AAAkB,cAAA,KAAK,EAAEA,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADe;AAAA,WAAlB,CAJL,CADiB;AAAA,SALzB;AAeI,QAAA,KAAK,EAAE;AACH6B,UAAAA,QAAQ,EAAE,KADP;AAEHT,UAAAA,QAAQ,EAAE,KAFP;AAGHU,UAAAA,YAAY,EAAE;AAHX,SAfX;AAoBI,QAAA,SAAS,EAAE3C,SApBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAsBK,KAAKO,KAAL,CAAWQ,YAAX,CAAwB0B,GAAxB,CAA4B,UAAAxB,QAAQ;AAAA,eACjC,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,QAAQ,CAACG,IAAxB;AAA8B,UAAA,KAAK,EAAEH,QAAQ,CAACG,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKH,QAAQ,CAACG,IADd,CADiC;AAAA,OAApC,CAtBL,CAXJ,CAJJ,EA4CI,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAE;AAChBhB,UAAAA,KAAK,EAAE,KADS;AAEhB6B,UAAAA,QAAQ,EAAE,KAFM;AAGhB5B,UAAAA,MAAM,EAAE,QAHQ;AAIhB2B,UAAAA,OAAO,EAAE,MAJO;AAKhBE,UAAAA,MAAM,EAAE,KALQ;AAMhBC,UAAAA,WAAW,EAAE,SANG;AAOhBC,UAAAA,UAAU,EAAE,MAPI;AAQhBC,UAAAA,WAAW,EAAE;AARG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,sBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ,EAWI,oBAAC,MAAD;AACI,QAAA,QAAQ,MADZ;AAEI,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWK,KAFtB;AAGI,QAAA,QAAQ,EAAE,KAAKD,gBAHnB;AAII,QAAA,KAAK,EAAE,oBAAC,KAAD;AAAO,UAAA,EAAE,EAAC,sBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJX;AAKI,QAAA,WAAW,EAAE,qBAAAa,QAAQ;AAAA,iBACjB;AAAK,YAAA,KAAK,EAAE;AACRC,cAAAA,OAAO,EAAE,MADD;AAERC,cAAAA,QAAQ,EAAE;AAFF,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAIKF,QAAQ,CAACG,GAAT,CAAa,UAAA5B,KAAK;AAAA,mBACf,oBAAC,IAAD;AAAM,cAAA,GAAG,EAAEA,KAAX;AAAkB,cAAA,KAAK,EAAEA,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADe;AAAA,WAAlB,CAJL,CADiB;AAAA,SALzB;AAeI,QAAA,SAAS,EAAEb,SAff;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAiBK,KAAKO,KAAL,CAAWqB,QAAX,CAAoBa,GAApB,CAAwB,UAAAZ,IAAI;AAAA,eACzB,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,IAAI,CAACT,IAApB;AAA0B,UAAA,KAAK,EAAES,IAAI,CAACT,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKS,IAAI,CAACT,IADV,CADyB;AAAA,OAA5B,CAjBL,CAXJ,CA5CJ,CADJ;AAkFH;;;;EAzIyBhC,KAAK,CAACwD,S;;AA4IpC,SAASC,eAAT,CAAyBxB,KAAzB,EAAgC;AAC5B,SAAO;AACHO,IAAAA,QAAQ,EAAEP,KAAK,CAACyB,KAAN,CAAY,CAAC,aAAD,EAAgB,UAAhB,CAAZ,CADP;AAEH/B,IAAAA,YAAY,EAAEM,KAAK,CAACyB,KAAN,CAAY,CAAC,iBAAD,EAAoB,cAApB,CAAZ;AAFX,GAAP;AAIH;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACH1D,IAAAA,QAAQ,EAAE;AAAA,aAAM0D,QAAQ,CAAC1D,SAAQ,EAAT,CAAd;AAAA,KADP;AAEHC,IAAAA,aAAa,EAAE;AAAA,aAAMyD,QAAQ,CAACzD,cAAa,EAAd,CAAd;AAAA;AAFZ,GAAP;AAIH;;AAED,OAAO,IAAM0D,MAAM,GAAG5D,OAAO,CAACwD,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CzC,eAA7C,CAAf","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport {getShops, getCategories } from '../../reducers/action-creators';\r\n//Material-UI components\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n            margin: 'auto'\r\n        },\r\n    },\r\n};\r\n\r\nclass FilterContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            categories: [],\r\n            shops: [],\r\n        };\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.props.getShops();\r\n        this.props.getCategories();\r\n        console.log(this.props.categoryList);\r\n        const preState = {\r\n            categories: [],\r\n            shops: []\r\n        };\r\n        this.props.categoryList.forEach(category => {\r\n            preState.categories.push(category.name);\r\n        });\r\n        this.props.shopList.forEach(shop => {\r\n            preState.shops.push(shop.name);\r\n        })\r\n        this.setState(preState);\r\n    };\r\n\r\n    handleChangeCategory = event => {\r\n        this.setState({ categories: event.target.value });\r\n        const filteredCategories = [];\r\n        this.props.categoryList.forEach(category => {\r\n            console.log(category.name);\r\n            if(this.state.categories.includes(category.name)){\r\n                filteredCategories.push(category);\r\n            }\r\n        });\r\n        console.log(filteredCategories);\r\n        this.props.filterCategory(filteredCategories);\r\n    };\r\n\r\n    handleChangeShop = event => {\r\n        this.setState({shops: event.target.value});\r\n        const filteredShops = [];\r\n        this.props.shopList.forEach(shop => {\r\n            if(this.state.shops.includes(shop.name)){\r\n                filteredShops.push(shop);\r\n            }\r\n        });\r\n        console.log(filteredShops);\r\n        this.props.filterShop(filteredShops);\r\n    };\r\n\r\n    render() {\r\n        const categories = this.props.categoryList;\r\n        const shops = this.props.shopList;\r\n        console.log(this.state.categories);\r\n        return (\r\n            <div style={{\r\n                margin: '0 auto',\r\n                padding: '10px'\r\n            }}>\r\n                <FormControl style={{\r\n                    width: '200',\r\n                    maxWidth: '300',\r\n                    margin: '0 auto',\r\n                    padding: '20px',\r\n                    border: '3px',\r\n                    borderColor: '#A59A9A',\r\n                    marginLeft: 'auto',\r\n                    marginRight: 'auto'\r\n                }}>\r\n                    <InputLabel htmlFor=\"select-multiple-chip\">Kategorie</InputLabel>\r\n                    <Select\r\n                        multiple\r\n                        value={this.state.categories}\r\n                        onChange={this.handleChangeCategory}\r\n                        input={<Input id=\"select-multiple-chip\" />}\r\n                        renderValue={selected => (\r\n                            <div style={{\r\n                                display: 'flex',\r\n                                flexWrap: 'wrap',\r\n                            }}>\r\n                                {selected.map(value => (\r\n                                    <Chip key={value} label={value} />\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                        style={{\r\n                            minWidth: '200',\r\n                            maxWidth: '300',\r\n                            alignContent: 'center'\r\n                        }}\r\n                        MenuProps={MenuProps}\r\n                    >\r\n                        {this.props.categoryList.map(category => (\r\n                            <MenuItem key={category.name} value={category.name} >\r\n                                {category.name}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl style={{\r\n                    width: '200',\r\n                    maxWidth: '300',\r\n                    margin: '0 auto',\r\n                    padding: '20px',\r\n                    border: '3px',\r\n                    borderColor: '#A59A9A',\r\n                    marginLeft: 'auto',\r\n                    marginRight: 'auto'\r\n                }}>\r\n                    <InputLabel htmlFor=\"select-multiple-chip\">Sklepy</InputLabel>\r\n                    <Select\r\n                        multiple\r\n                        value={this.state.shops}\r\n                        onChange={this.handleChangeShop}\r\n                        input={<Input id=\"select-multiple-chip\" />}\r\n                        renderValue={selected => (\r\n                            <div style={{\r\n                                display: 'flex',\r\n                                flexWrap: 'wrap',\r\n                            }}>\r\n                                {selected.map(value => (\r\n                                    <Chip key={value} label={value} />\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                        MenuProps={MenuProps}\r\n                    >\r\n                        {this.props.shopList.map(shop => (\r\n                            <MenuItem key={shop.name} value={shop.name} >\r\n                                {shop.name}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        shopList: state.getIn(['reducerShop', 'shopList']),\r\n        categoryList: state.getIn(['reducerCategory', 'categoryList'])\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getShops: () => dispatch(getShops()),\r\n        getCategories: () => dispatch(getCategories())\r\n    }\r\n}\r\n\r\nexport const Filter = connect(mapStateToProps, mapDispatchToProps)(FilterContainer);\r\n"]},"metadata":{},"sourceType":"module"}