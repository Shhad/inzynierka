{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\web-app\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\web-app\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\web-app\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\web-app\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\web-app\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\baszak\\\\pwr\\\\inz\\\\web-app\\\\web-app\\\\src\\\\components\\\\ProductsSpace\\\\ProductSpace.js\";\nimport React from 'react';\nimport Product from './Product';\nimport Fab from '@material-ui/core/Fab';\nimport Zoom from '@material-ui/core/Zoom';\nimport AddIcon from '@material-ui/icons/Add';\nimport FlatButton from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport TextField from '@material-ui/core/TextField';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Slide from '@material-ui/core/Slide';\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }));\n}\n\nvar ProductContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProductContainer, _React$Component);\n\n  function ProductContainer(props) {\n    var _this;\n\n    _classCallCheck(this, ProductContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProductContainer).call(this, props));\n\n    _this.validateDetails = function () {\n      console.log('Checking if everything is writen correctly');\n      console.log(_this.state.newProductDialog.name);\n    };\n\n    _this.newProductStateChange = function (evt) {\n      var target = evt.target;\n      var name = target.name;\n      var value = target.value;\n\n      _this.setState({\n        someProperty: someProperty\n      });\n    };\n\n    _this.openNewDialog = function () {\n      _this.setState({\n        newProduct: true\n      });\n    };\n\n    _this.closeNewDialog = function () {\n      _this.setState({\n        newProduct: false\n      });\n    };\n\n    _this.state = {\n      newProduct: false,\n      productDetail: false,\n      newProductDialog: {\n        name: '',\n        description: ''\n      },\n      name: '',\n      description: '',\n      shop: 0,\n      category: 0,\n      price: 0.00,\n      currency: '',\n      url: '',\n      link: ''\n    };\n    return _this;\n  }\n\n  _createClass(ProductContainer, [{\n    key: \"render\",\n    value: function render() {\n      var productList = this.props.productList;\n      return React.createElement(\"div\", {\n        className: 'row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, productList.map(function (product) {\n        return React.createElement(Product, Object.assign({\n          id: product.id\n        }, product, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }));\n      }), React.createElement(Fab, {\n        style: {\n          margin: 0,\n          top: 'auto',\n          right: 20,\n          bottom: 20,\n          left: 'auto',\n          position: 'fixed',\n          color: '#000000',\n          backgroundColor: '#F24F4F'\n        },\n        onClick: this.openNewDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(AddIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(Dialog, {\n        open: this.state.newProduct,\n        TransitionComponent: Transition,\n        keepMounted: true,\n        onClose: this.closeNewDialog,\n        \"aria-labelledby\": \"alert-dialog-slide-title\",\n        \"aria-describedby\": \"alert-dialog-slide-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"alert-dialog-slide-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Dodaj nowy produkt\"), React.createElement(DialogContent, {\n        style: {\n          display: 'inline',\n          overflowY: 'scroll'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoFocus: true,\n        id: \"new-product-name\",\n        name: \"name\",\n        label: \"Nazwa\",\n        onChange: this.newProductStateChange,\n        helperText: \"Wpisz nazwe produktu\",\n        margin: \"normal\",\n        style: {\n          width: '400px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"new-product-descr\",\n        name: \"description\",\n        label: \"Opis\",\n        onChange: this.newProductStateChange,\n        helperText: \"Wpisz opis produktu\",\n        margin: \"normal\",\n        fullWidth: true,\n        multiline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.validateDetails,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Dodaj\"), React.createElement(Button, {\n        onClick: this.closeNewDialog,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Anuluj\"))));\n    }\n  }]);\n\n  return ProductContainer;\n}(React.Component);\n\nexport { ProductContainer as default };","map":{"version":3,"sources":["C:\\Users\\baszak\\pwr\\inz\\web-app\\web-app\\src\\components\\ProductsSpace\\ProductSpace.js"],"names":["React","Product","Fab","Zoom","AddIcon","FlatButton","Dialog","DialogActions","DialogContent","DialogContentText","TextField","DialogTitle","Button","Slide","Transition","props","ProductContainer","validateDetails","console","log","state","newProductDialog","name","newProductStateChange","evt","target","value","setState","someProperty","openNewDialog","newProduct","closeNewDialog","productDetail","description","shop","category","price","currency","url","link","productList","map","product","id","margin","top","right","bottom","left","position","color","backgroundColor","display","overflowY","width","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Product from './Product';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FlatButton from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nfunction Transition(props) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nexport default class ProductContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newProduct: false,\r\n            productDetail: false,\r\n            newProductDialog: {\r\n                name: '',\r\n                description: '',\r\n            },\r\n            name: '',\r\n            description: '',\r\n            shop: 0,\r\n            category: 0,\r\n            price: 0.00,\r\n            currency: '',\r\n            url: '',\r\n            link: ''\r\n        };\r\n    }\r\n\r\n    validateDetails = () => {\r\n        console.log('Checking if everything is writen correctly');\r\n        console.log(this.state.newProductDialog.name);\r\n    };\r\n\r\n    newProductStateChange = (evt) => {\r\n        const target = evt.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n\r\n        this.setState({someProperty});\r\n    };\r\n\r\n    openNewDialog = () => {\r\n        this.setState({ newProduct: true });\r\n    };\r\n\r\n    closeNewDialog = () => {\r\n        this.setState({ newProduct: false });\r\n    };\r\n\r\n    render() {\r\n        const { productList } = this.props;\r\n\r\n        return (\r\n            <div className={'row'}>\r\n                {productList.map(product => <Product id={product.id} {...product}/>)}\r\n\r\n                <Fab style={{\r\n                        margin: 0,\r\n                        top: 'auto',\r\n                        right: 20,\r\n                        bottom: 20,\r\n                        left: 'auto',\r\n                        position: 'fixed',\r\n                        color: '#000000',\r\n                        backgroundColor: '#F24F4F'\r\n                    }} onClick={this.openNewDialog}>\r\n                    <AddIcon />\r\n                </Fab>\r\n\r\n                <Dialog\r\n                    open={this.state.newProduct}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={this.closeNewDialog}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-slide-title\">\r\n                        {\"Dodaj nowy produkt\"}\r\n                    </DialogTitle>\r\n                    <DialogContent style={{\r\n                        display: 'inline',\r\n                        overflowY: 'scroll'\r\n                    }}>\r\n                        <form>\r\n                            <TextField\r\n                                autoFocus\r\n                                id=\"new-product-name\"\r\n                                name='name'\r\n                                label=\"Nazwa\"\r\n                                onChange={this.newProductStateChange}\r\n                                helperText=\"Wpisz nazwe produktu\"\r\n                                margin=\"normal\"\r\n                                style={{\r\n                                    width: '400px'\r\n                                }}\r\n                            >\r\n                            </TextField>\r\n                            <TextField\r\n                                id=\"new-product-descr\"\r\n                                name='description'\r\n                                label=\"Opis\"\r\n                                onChange={this.newProductStateChange}\r\n                                helperText=\"Wpisz opis produktu\"\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                multiline\r\n                            >\r\n                            </TextField>\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.validateDetails} color=\"primary\">\r\n                            Dodaj\r\n                        </Button>\r\n                        <Button onClick={this.closeNewDialog} color=\"primary\">\r\n                            Anuluj\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}