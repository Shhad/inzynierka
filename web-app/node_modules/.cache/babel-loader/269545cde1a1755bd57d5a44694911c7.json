{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\baszak\\\\pwr\\\\magisterka\\\\rozproszone systemy bazodanowe\\\\project\\\\test_inz\\\\inzynierka\\\\web-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadAllShops),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchGetShops),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(shopSaga);\n\nimport { put, select, takeLatest } from 'redux-saga/effects';\nimport { SERWER_PROD } from \"../constants/AppConstants\";\n\nvar getAllShopsFromServer = function getAllShopsFromServer() {\n  try {\n    console.log('fetching with get shops');\n    var response = fetch(\"\".concat(SERWER_PROD, \"/api/shop/shops\"), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.status === 'ok') {\n        console.log(data.data);\n        return data.data;\n      } else {\n        console.log('not good');\n        return false;\n      }\n    }).catch(function (error) {\n      return console.log(\"Error occurred: \".concat(error, \".\"));\n    });\n    return response;\n  } catch (e) {\n    console.log(\"Could not fetch data from \".concat(SERWER_PROD, \".\"));\n    return [];\n  }\n};\n\nfunction loadAllShops() {\n  var shopList;\n  return _regeneratorRuntime.wrap(function loadAllShops$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return getAllShopsFromServer();\n\n        case 3:\n          shopList = _context.sent;\n          _context.next = 6;\n          return put({\n            type: 'GET_SHOPS_SUCCESS',\n            payload: shopList\n          });\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put({\n            type: 'GET_SHOPS_FAILURE',\n            payload: _context.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 8]]);\n}\n\nfunction watchGetShops() {\n  return _regeneratorRuntime.wrap(function watchGetShops$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest('GET_SHOPS', loadAllShops);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}\n\nexport default function shopSaga() {\n  return _regeneratorRuntime.wrap(function shopSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return [watchGetShops()];\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, this);\n}","map":{"version":3,"sources":["C:\\Users\\baszak\\pwr\\magisterka\\rozproszone systemy bazodanowe\\project\\test_inz\\inzynierka\\web-app\\src\\sagas\\shopSaga.js"],"names":["loadAllShops","watchGetShops","shopSaga","put","select","takeLatest","SERWER_PROD","getAllShopsFromServer","console","log","response","fetch","method","headers","then","json","data","status","catch","error","e","shopList","type","payload"],"mappings":";;;;yBAmCUA,Y;;;yBASAC,a;;;yBAIeC,Q;;AAhDzB,SACIC,GADJ,EAEIC,MAFJ,EAGIC,UAHJ,QAIO,oBAJP;AAKA,SAAQC,WAAR,QAA0B,2BAA1B;;AAEA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAC5B,MAAI;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,QAAMC,QAAQ,GAAGC,KAAK,WAAIL,WAAJ,sBAAiC;AACnDM,MAAAA,MAAM,EAAE,KAD2C;AAEnDC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX;AAF0C,KAAjC,CAAL,CAMdC,IANc,CAMT,UAAAJ,QAAQ;AAAA,aAAIA,QAAQ,CAACK,IAAT,EAAJ;AAAA,KANC,EAOZD,IAPY,CAOP,UAAAE,IAAI,EAAI;AACV,UAAGA,IAAI,CAACC,MAAL,KAAgB,IAAnB,EAAyB;AACrBT,QAAAA,OAAO,CAACC,GAAR,CAAYO,IAAI,CAACA,IAAjB;AACA,eAAOA,IAAI,CAACA,IAAZ;AACH,OAHD,MAGO;AACHR,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,eAAO,KAAP;AACH;AACJ,KAfY,EAgBZS,KAhBY,CAgBN,UAAAC,KAAK;AAAA,aAAIX,OAAO,CAACC,GAAR,2BAA+BU,KAA/B,OAAJ;AAAA,KAhBC,CAAjB;AAiBA,WAAOT,QAAP;AACH,GApBD,CAoBE,OAAMU,CAAN,EAAS;AACPZ,IAAAA,OAAO,CAACC,GAAR,qCAAyCH,WAAzC;AAEA,WAAO,EAAP;AACH;AACR,CA1BD;;AA4BA,SAAUN,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEyB,iBAAMO,qBAAqB,EAA3B;;AAFzB;AAEcc,UAAAA,QAFd;AAAA;AAGQ,iBAAMlB,GAAG,CAAC;AAAEmB,YAAAA,IAAI,EAAE,mBAAR;AAA6BC,YAAAA,OAAO,EAAEF;AAAtC,WAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKQ,iBAAMlB,GAAG,CAAC;AAACmB,YAAAA,IAAI,EAAE,mBAAP;AAA4BC,YAAAA,OAAO;AAAnC,WAAD,CAAT;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAAUtB,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMI,UAAU,CAAC,WAAD,EAAcL,YAAd,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAM,CACFD,aAAa,EADX,CAAN;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {\r\n    put,\r\n    select,\r\n    takeLatest\r\n} from 'redux-saga/effects';\r\nimport {SERWER_PROD} from \"../constants/AppConstants\";\r\n\r\nconst getAllShopsFromServer = () => {\r\n        try {\r\n            console.log('fetching with get shops');\r\n            const response = fetch(`${SERWER_PROD}/api/shop/shops`,{\r\n                method: 'GET',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }).then(response => response.json())\r\n                .then(data => {\r\n                    if(data.status === 'ok') {\r\n                        console.log(data.data);\r\n                        return data.data;\r\n                    } else {\r\n                        console.log('not good');\r\n                        return false;\r\n                    }\r\n                })\r\n                .catch(error => console.log(`Error occurred: ${error}.`));\r\n            return response;\r\n        } catch(e) {\r\n            console.log(`Could not fetch data from ${SERWER_PROD}.`);\r\n\r\n            return [];\r\n        }\r\n};\r\n\r\nfunction* loadAllShops () {\r\n    try {\r\n        const shopList = yield getAllShopsFromServer();\r\n        yield put({ type: 'GET_SHOPS_SUCCESS', payload: shopList});\r\n    } catch (e) {\r\n        yield put({type: 'GET_SHOPS_FAILURE', payload: e});\r\n    }\r\n}\r\n\r\nfunction* watchGetShops() {\r\n    yield takeLatest('GET_SHOPS', loadAllShops);\r\n}\r\n\r\nexport default function* shopSaga() {\r\n    yield [\r\n        watchGetShops()\r\n    ]\r\n}\r\n"]},"metadata":{},"sourceType":"module"}