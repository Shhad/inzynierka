{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport { combineReducers } from 'redux-immutable';\nimport customHistory from './history';\nimport { routerMiddleware } from 'react-router-redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createEpicMiddleware } from 'redux-observable';\nimport createSagaMiddleware from 'redux-saga'; //Reducers\n\nimport reducerProduct from './reducers/productReducer';\nimport reducerShop from './reducers/shopReducer';\nimport reducerFavourite from './reducers/favouriteReducers';\nimport reducerCategory from './reducers/categoryReducer';\nimport reducerUser from './reducers/userReducer'; //Sagas\n\nimport favouriteSaga from './sagas/favouriteSagas';\nimport rootSaga from './sagas/sagas';\nimport shopSaga from './sagas/shopSagas';\nimport categorySaga from './sagas/categorySagas';\nimport userSaga from './sagas/userSagas'; // Create history\n\nexport var browserHistory = customHistory;\nvar reduxRouterMiddleware = routerMiddleware(browserHistory);\nvar epicMiddleware = createEpicMiddleware();\nvar middlewares = [thunkMiddleware, reduxRouterMiddleware, epicMiddleware];\nvar sagaMiddleware = createSagaMiddleware();\nvar favouriteMiddleware = createSagaMiddleware();\nvar shopMiddleware = createSagaMiddleware();\nvar categoryMiddleware = createSagaMiddleware();\nvar userMiddleware = createSagaMiddleware();\n\nvar configureStore = function configureStore(initialState) {\n  var store = createStore(combineReducers({\n    reducerProduct: reducerProduct,\n    reducerFavourite: reducerFavourite,\n    reducerShop: reducerShop,\n    reducerCategory: reducerCategory,\n    reducerUser: reducerUser\n  }), compose(applyMiddleware(sagaMiddleware), applyMiddleware(favouriteMiddleware), applyMiddleware(shopMiddleware), applyMiddleware(categoryMiddleware), applyMiddleware(userMiddleware), window.devToolsExtension ? window.devToolsExtension() : function (f) {\n    return f;\n  }));\n  sagaMiddleware.run(rootSaga);\n  favouriteMiddleware.run(favouriteSaga);\n  shopMiddleware.run(shopSaga);\n  categoryMiddleware.run(categorySaga);\n  userMiddleware.run(userSaga);\n  return store;\n};\n\nexport default configureStore;","map":{"version":3,"sources":["C:\\Users\\baszak\\pwr\\inz\\repo\\inzynierka\\web-app\\src\\store.js"],"names":["createStore","applyMiddleware","compose","combineReducers","customHistory","routerMiddleware","thunkMiddleware","createEpicMiddleware","createSagaMiddleware","reducerProduct","reducerShop","reducerFavourite","reducerCategory","reducerUser","favouriteSaga","rootSaga","shopSaga","categorySaga","userSaga","browserHistory","reduxRouterMiddleware","epicMiddleware","middlewares","sagaMiddleware","favouriteMiddleware","shopMiddleware","categoryMiddleware","userMiddleware","configureStore","initialState","store","window","devToolsExtension","f","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,OAAOC,aAAP,MAA0B,WAA1B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,OAAQC,oBAAR,MAAkC,YAAlC,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,OAAOC,WAAP,MAAwB,wBAAxB,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,QAAP,MAAqB,mBAArB,C,CAEA;;AACA,OAAO,IAAMC,cAAc,GAAGf,aAAvB;AACP,IAAMgB,qBAAqB,GAAGf,gBAAgB,CAACc,cAAD,CAA9C;AAEA,IAAME,cAAc,GAAGd,oBAAoB,EAA3C;AAEA,IAAMe,WAAW,GAAG,CAChBhB,eADgB,EAEhBc,qBAFgB,EAGhBC,cAHgB,CAApB;AAMA,IAAME,cAAc,GAAGf,oBAAoB,EAA3C;AACA,IAAMgB,mBAAmB,GAAGhB,oBAAoB,EAAhD;AACA,IAAMiB,cAAc,GAAGjB,oBAAoB,EAA3C;AACA,IAAMkB,kBAAkB,GAAGlB,oBAAoB,EAA/C;AACA,IAAMmB,cAAc,GAAGnB,oBAAoB,EAA3C;;AAEA,IAAMoB,cAAc,GAAG,SAAjBA,cAAiB,CAACC,YAAD,EAAkB;AACrC,MAAMC,KAAK,GAAG9B,WAAW,CACrBG,eAAe,CAAC;AAACM,IAAAA,cAAc,EAAdA,cAAD;AAAiBE,IAAAA,gBAAgB,EAAhBA,gBAAjB;AAAmCD,IAAAA,WAAW,EAAXA,WAAnC;AAAgDE,IAAAA,eAAe,EAAfA,eAAhD;AAAiEC,IAAAA,WAAW,EAAXA;AAAjE,GAAD,CADM,EAErBX,OAAO,CACHD,eAAe,CAACsB,cAAD,CADZ,EAEHtB,eAAe,CAACuB,mBAAD,CAFZ,EAGHvB,eAAe,CAACwB,cAAD,CAHZ,EAIHxB,eAAe,CAACyB,kBAAD,CAJZ,EAKHzB,eAAe,CAAC0B,cAAD,CALZ,EAMHI,MAAM,CAACC,iBAAP,GAA2BD,MAAM,CAACC,iBAAP,EAA3B,GAAwD,UAAAC,CAAC;AAAA,WAAIA,CAAJ;AAAA,GANtD,CAFc,CAAzB;AAWAV,EAAAA,cAAc,CAACW,GAAf,CAAmBnB,QAAnB;AACAS,EAAAA,mBAAmB,CAACU,GAApB,CAAwBpB,aAAxB;AACAW,EAAAA,cAAc,CAACS,GAAf,CAAmBlB,QAAnB;AACAU,EAAAA,kBAAkB,CAACQ,GAAnB,CAAuBjB,YAAvB;AACAU,EAAAA,cAAc,CAACO,GAAf,CAAmBhB,QAAnB;AACA,SAAOY,KAAP;AACH,CAlBD;;AAoBA,eAAeF,cAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { combineReducers } from 'redux-immutable'\r\nimport customHistory from './history';\r\nimport { routerMiddleware } from 'react-router-redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createEpicMiddleware } from 'redux-observable';\r\nimport  createSagaMiddleware from 'redux-saga';\r\n\r\n//Reducers\r\nimport reducerProduct from './reducers/productReducer';\r\nimport reducerShop from './reducers/shopReducer';\r\nimport reducerFavourite from './reducers/favouriteReducers';\r\nimport reducerCategory from './reducers/categoryReducer';\r\nimport reducerUser from './reducers/userReducer';\r\n\r\n//Sagas\r\nimport favouriteSaga from './sagas/favouriteSagas';\r\nimport rootSaga from './sagas/sagas';\r\nimport shopSaga from './sagas/shopSagas';\r\nimport categorySaga from './sagas/categorySagas';\r\nimport userSaga from './sagas/userSagas';\r\n\r\n// Create history\r\nexport const browserHistory = customHistory;\r\nconst reduxRouterMiddleware = routerMiddleware(browserHistory);\r\n\r\nconst epicMiddleware = createEpicMiddleware();\r\n\r\nconst middlewares = [\r\n    thunkMiddleware,\r\n    reduxRouterMiddleware,\r\n    epicMiddleware\r\n];\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst favouriteMiddleware = createSagaMiddleware();\r\nconst shopMiddleware = createSagaMiddleware();\r\nconst categoryMiddleware = createSagaMiddleware();\r\nconst userMiddleware = createSagaMiddleware();\r\n\r\nconst configureStore = (initialState) => {\r\n    const store = createStore(\r\n        combineReducers({reducerProduct, reducerFavourite, reducerShop, reducerCategory, reducerUser}),\r\n        compose(\r\n            applyMiddleware(sagaMiddleware),\r\n            applyMiddleware(favouriteMiddleware),\r\n            applyMiddleware(shopMiddleware),\r\n            applyMiddleware(categoryMiddleware),\r\n            applyMiddleware(userMiddleware),\r\n            window.devToolsExtension ? window.devToolsExtension() : f => f\r\n        )\r\n    );\r\n    sagaMiddleware.run(rootSaga);\r\n    favouriteMiddleware.run(favouriteSaga);\r\n    shopMiddleware.run(shopSaga);\r\n    categoryMiddleware.run(categorySaga);\r\n    userMiddleware.run(userSaga);\r\n    return store;\r\n};\r\n\r\nexport default configureStore;\r\n"]},"metadata":{},"sourceType":"module"}